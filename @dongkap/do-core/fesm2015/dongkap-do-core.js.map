{"version":3,"file":"dongkap-do-core.js","sources":["../../../../@dongkap/do-core/src/lib/module-import-guard.ts","../../../../@dongkap/do-core/src/lib/providers/http.provider.ts","../../../../@dongkap/do-core/src/lib/providers/shared/storage.provider.ts","../../../../@dongkap/do-core/src/lib/services/error-handler.service.ts","../../../../@dongkap/do-core/src/lib/services/preloading-strategy.service.ts","../../../../@dongkap/do-core/src/lib/services/security/encryption.service.ts","../../../../@dongkap/do-core/src/lib/providers/shared/oauth.provider.ts","../../../../@dongkap/do-core/src/lib/services/storage/storage-mask.service.ts","../../../../@dongkap/do-core/src/lib/services/utils/http-abstract.service.ts","../../../../@dongkap/do-core/src/lib/models/utils/response-code.model.ts","../../../../@dongkap/do-core/src/lib/models/utils/environment.model.ts","../../../../@dongkap/do-core/src/lib/models/utils/http-base.model.ts","../../../../@dongkap/do-core/src/lib/models/utils/locale.model.ts","../../../../@dongkap/do-core/src/lib/models/security/role.model.ts","../../../../@dongkap/do-core/src/lib/models/security/user.model.ts","../../../../@dongkap/do-core/src/lib/models/security/resource-server.model.ts","../../../../@dongkap/do-core/src/lib/models/patterns/date-pattern.model.ts","../../../../@dongkap/do-core/src/lib/models/patterns/pattern.model.ts","../../../../@dongkap/do-core/src/lib/services/utils/http-common.service.ts","../../../../@dongkap/do-core/src/lib/services/utils/translation.service.ts","../../../../@dongkap/do-core/src/lib/do-core.module.ts","../../../../@dongkap/do-core/src/lib/services/security/user.service.ts","../../../../@dongkap/do-core/src/lib/services/storage/indexed-db.service.ts","../../../../@dongkap/do-core/src/lib/providers/shared/user.provider.ts","../../../../@dongkap/do-core/src/lib/providers/shared/api.provider.ts","../../../../@dongkap/do-core/src/lib/providers/shared/environment.provider.ts","../../../../@dongkap/do-core/src/public-api.ts","../../../../@dongkap/do-core/src/dongkap-do-core.ts"],"sourcesContent":["export function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\n  if (parentModule) {\n    throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { HttpFactoryService } from '../services/utils/http-factory.service';\n\nexport const HTTP_SERVICE: InjectionToken<HttpFactoryService> =\nnew InjectionToken<HttpFactoryService>('Http Service');\n","import { InjectionToken } from '@angular/core';\nimport { StorageFactoryService } from '../../services/storage/storage-factory.service';\nimport { IndexedDBEncFactoryService } from '../../services/utils/indexeddb-enc-factory.service';\nimport { IndexedDBFactoryService } from '../../services/utils/indexeddb-factory.service';\n\nexport const STORAGE_SERVICE: InjectionToken<StorageFactoryService> =\nnew InjectionToken<StorageFactoryService>('Storage Factory Service');\n\nexport const AUTH_INDEXED_DB: InjectionToken<IndexedDBEncFactoryService> =\nnew InjectionToken<IndexedDBEncFactoryService>('Auth IndexedDB Resource');\n\nexport const PROFILE_INDEXED_DB: InjectionToken<IndexedDBFactoryService> =\nnew InjectionToken<IndexedDBFactoryService>('Profile IndexedDB Resource');\n\nexport const SETTINGS_INDEXED_DB: InjectionToken<IndexedDBFactoryService> =\nnew InjectionToken<IndexedDBFactoryService>('Settings IndexedDB Resource');\n","import { ErrorHandler, Injectable} from '@angular/core';\nimport { EMPTY } from 'rxjs';\n\n@Injectable()\nexport class ErrorHandlerService implements ErrorHandler {\n\n  handleError(error: Error) {\n    if (error.message) {\n      if (error.message.includes('No loader found for file')) {\n        return EMPTY;\n      } else if ( error.message.includes('mousedown')     || error.message.includes('mousemove') ||\n                  error.message.includes('mouseup')       || error.message.includes('mouseout') ||\n                  error.message.includes('mousewheel')    || error.message.includes('DOMMouseScroll') ||\n                  error.message.includes('dblclick')      || error.message.includes('touchstart') ||\n                  error.message.includes('touchmove')     || error.message.includes('touchend')) {\n        return EMPTY;\n      }\n    }\n    throw error;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { PreloadingStrategy, Route } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { EMPTY } from 'rxjs';\n\n@Injectable()\nexport class CustomPreloadingStrategy implements PreloadingStrategy {\n  preloadedModules: string[] = [];\n\n  preload(route: Route, load: () => Observable<any>): Observable<any> {\n    if (route.data && route.data['preload']) {\n      this.preloadedModules.push(route.path);\n      return load();\n    } else {\n      return EMPTY;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as CryptoJS from 'crypto-js';\n\n@Injectable()\nexport class EncryptionService {\n\n    private ivSize: number = 128;\n\n    public getHmacSha256(secret: string, message: string, hex?: boolean): string {\n        const hash = CryptoJS.HmacSHA256(message, secret);\n        if (hex) {\n            return CryptoJS.enc.Hex.stringify(hash).toUpperCase();\n        }\n        return CryptoJS.enc.Base64.stringify(hash);\n    }\n\n    public encryptAES(secretKey: string, message: string): string {\n        const iv = CryptoJS.lib.WordArray.random(this.ivSize / 8);\n        const key = CryptoJS.enc.Utf8.parse(secretKey);\n        const encrypted = CryptoJS.AES.encrypt(message, key, {\n            iv,\n            padding: CryptoJS.pad.Pkcs7,\n            mode: CryptoJS.mode.CBC,\n        });\n        const encryptMessage = iv.toString() + encrypted.toString();\n        return encryptMessage;\n    }\n\n    public decryptAES(secretKey: string, encryptMessage: string): string {\n        if (encryptMessage) {\n            const iv = CryptoJS.enc.Hex.parse(encryptMessage.substr(0, 32));\n            const key = CryptoJS.enc.Utf8.parse(secretKey);\n            const encrypted = encryptMessage.substring(32);\n            const decrypted = CryptoJS.AES.decrypt(encrypted, key, {\n              iv,\n              padding: CryptoJS.pad.Pkcs7,\n              mode: CryptoJS.mode.CBC,\n            });\n            try {\n                return decrypted.toString(CryptoJS.enc.Utf8);\n            } catch (error) {\n                return null;\n            }\n        }\n        return null;\n    }\n\n}\n","import { InjectionToken } from '@angular/core';\nimport { SecurityResourceModel } from '../../models';\n\nexport const OAUTH_INFO: InjectionToken<SecurityResourceModel> =\nnew InjectionToken<SecurityResourceModel>('OAUTH INFO Resource');\n","import { Inject, Injectable } from '@angular/core';\nimport { SecurityResourceModel } from '../../models';\nimport { OAUTH_INFO } from '../../providers/shared/oauth.provider';\nimport { EncryptionService } from '../security/encryption.service';\nimport { StorageFactoryService } from './storage-factory.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StorageMaskService implements StorageFactoryService {\n\n    constructor(\n        protected enc: EncryptionService,\n        @Inject(OAUTH_INFO) private oauthResource: SecurityResourceModel) {}\n\n    public getSessionStorageEnc(key: string): string {\n        const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n        if (sessionStorage.getItem(keyEncrypted)) {\n            return this.enc.decryptAES(this.oauthResource['aes_key'], sessionStorage.getItem(keyEncrypted));\n        } else {\n            return null;\n        }\n    }\n\n    public setSessionStorageEnc(key: string, value: string): void {\n        const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n        const valueEncrypted = this.enc.encryptAES(this.oauthResource['aes_key'], value);\n        sessionStorage.setItem(keyEncrypted, valueEncrypted);\n    }\n\n    public removeSessionStorageEnc(key: string): void {\n        const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n        sessionStorage.removeItem(keyEncrypted);\n    }\n\n    public getLocalStorageEnc(key: string): string {\n        const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n        if (localStorage.getItem(keyEncrypted)) {\n            return this.enc.decryptAES(this.oauthResource['aes_key'], localStorage.getItem(keyEncrypted));\n        } else {\n            return null;\n        }\n    }\n\n    public setLocalStorageEnc(key: string, value: string): void {\n        const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n        const valueEncrypted = this.enc.encryptAES(this.oauthResource['aes_key'], value);\n        localStorage.setItem(keyEncrypted, valueEncrypted);\n    }\n\n    public removeLocalStorageEnc(key: string): void {\n        const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n        localStorage.removeItem(keyEncrypted);\n    }\n\n    public getSessionStorage(key: string): string {\n        return (key) ? sessionStorage.getItem(key) : null;\n    }\n\n    public setSessionStorage(key: string, value: string): void {\n        sessionStorage.setItem(key, value);\n    }\n\n    public removeSessionStorage(key: string): void {\n        sessionStorage.removeItem(key);\n    }\n\n    public getLocalStorage(key: string): string {\n        return (key) ? localStorage.getItem(key) : null;\n    }\n\n    public setLocalStorage(key: string, value: string): void {\n        localStorage.setItem(key, value);\n    }\n\n    public removeLocalStorage(key: string): void {\n        localStorage.removeItem(key);\n    }\n\n    public clearSessionStorage(): void {\n        sessionStorage.clear();\n    }\n\n    public clearLocalStorage(): void {\n        localStorage.clear();\n    }\n\n    public clearAll(): void {\n        sessionStorage.clear();\n        localStorage.clear();\n    }\n\n}\n","import { Observable } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport { HttpParams } from '@angular/common/http';\nimport { HttpFactoryService } from './http-factory.service';\nimport { HttpBaseModel } from '../../models';\n\nexport abstract class HttpAbstractService implements HttpFactoryService {\n\n  public abstract HTTP_AUTH(\n    api: HttpBaseModel,\n    body?: any,\n    headers?: HttpHeaders,\n    params?: HttpParams,\n    pathVariable?: string[],\n    responseType?: any): Observable<any>;\n  public abstract HTTP_BASE(\n    api: HttpBaseModel,\n    body?: any,\n    headers?: HttpHeaders,\n    params?: HttpParams,\n    pathVariable?: string[],\n    responseType?: any): Observable<any>;\n  public abstract GET(\n    url: string,\n    headers?: HttpHeaders,\n    params?: HttpParams,\n    responseType?: any): Observable<any>;\n  public abstract POST(\n    url: string,\n    body: any,\n    headers?: HttpHeaders,\n    params?: HttpParams,\n    responseType?: any): Observable<any>;\n  public abstract PUT(url: string, body: any, headers?: HttpHeaders, params?: HttpParams): Observable<any>;\n  public abstract DELETE(url: string, headers?: HttpHeaders, params?: HttpParams): Observable<any>;\n\n  public API(api: HttpBaseModel, pathVariable?: string[]): string {\n    let url: string = api.server.protocol +\n                    '://' +\n                    api.server.host +\n                    ((api.server.port) ? ':' + api.server.port : '') +\n                    api.path;\n    if (pathVariable) {\n      pathVariable.forEach(path => {\n        url = url + '/' + path;\n      });\n    }\n    return url;\n  }\n\n}\n","export enum ResponseCode {\n    ERR_XXAKEY = 'ERR_XXAKEY',\n    ERR_XXATIMESTAMP = 'ERR_XXATIMESTAMP',\n    ERR_XXASIGNATURE = 'ERR_XXASIGNATURE',\n    ERR_UNAUTHORIZED = 'ERR_UNAUTHORIZED',\n\n    ERR_SYS0001 = 'ERR_SYS0001',\n    ERR_SYS0002 = 'ERR_SYS0002',\n    ERR_SYS0500 = 'ERR_SYS0500',\n    ERR_SYS0404 = 'ERR_SYS0404',\n    ERR_SYS0501 = 'ERR_SYS0501',\n    ERR_SYS0502 = 'ERR_SYS0502',\n    ERR_SYS0302 = 'ERR_SYS0302',\n    ERR_SCR0000 = 'ERR_SCR0000',\n    ERR_SCR0001 = 'ERR_SCR0001',\n    ERR_SCR0002 = 'ERR_SCR0002',\n    ERR_SCR0003 = 'ERR_SCR0003',\n    ERR_SCR0004 = 'ERR_SCR0004',\n    ERR_SCR0005 = 'ERR_SCR0005',\n    ERR_SCR0006 = 'ERR_SCR0006',\n    ERR_SCR0007A = 'ERR_SCR0007A',\n    ERR_SCR0007B = 'ERR_SCR0007B',\n    ERR_SCR0008 = 'ERR_SCR0008',\n    ERR_SCR0009 = 'ERR_SCR0009',\n    ERR_SCR0010 = 'ERR_SCR0010',\n    ERR_SCR0011 = 'ERR_SCR0011',\n    ERR_SCR0012 = 'ERR_SCR0012',\n\n    OK_DEFAULT = 'OK_DEFAULT',\n    OK_INSERTED = 'OK_INSERTED',\n    OK_UPDATED = 'OK_UPDATED',\n    OK_DELETED = 'OK_DELETED',\n    OK_LOGOUT = 'OK_LOGOUT',\n    OK_REGISTERED = 'OK_REGISTERED',\n    OK_CHANGE_ROLE = 'OK_CHANGE_ROLE',\n    OK_REQUEST_FORGOT_PASSWORD = 'OK_REQUEST_FORGOT_PASSWORD',\n    OK_FORGOT_PASSWORD = 'OK_FORGOT_PASSWORD',\n    OK_ACTIVATE_ACCOUNT = 'OK_ACTIVATE_ACCOUNT',\n    OK_SCR001 = 'OK_SCR001',\n    OK_SCR002 = 'OK_SCR002',\n    OK_SCR003 = 'OK_SCR003',\n    OK_SCR004 = 'OK_SCR004',\n    OK_SCR005 = 'OK_SCR005',\n    OK_SCR006 = 'OK_SCR006',\n    OK_SCR007 = 'OK_SCR007',\n    OK_SCR008 = 'OK_SCR008',\n    OK_SCR009 = 'OK_SCR009',\n    OK_SCR010 = 'OK_SCR010',\n    OK_SCR011 = 'OK_SCR011',\n    OK_SCR012 = 'OK_SCR012',\n}\n","export class Environment {\n    production: boolean = true;\n    locale: string = 'en-US';\n    basePath: string = '/';\n    host: {\n        [name: string]: Server,\n    };\n}\n\nexport class Server {\n    protocol?: string = 'http';\n    host: string;\n    port?: string;\n}\n","export interface APIModel {\n    [name: string]: {\n        [name: string]: HttpBaseModel,\n    };\n}\n\nexport interface HttpBaseModel {\n    server: HostModel;\n    path?: string;\n    method?: HttpMethod;\n    file?: FileModel;\n}\n\nexport interface FileModel {\n    filename: string;\n    extension: string;\n}\n\nexport enum HttpMethod {\n    POST = 'POST',\n    GET = 'GET',\n    PUT = 'PUT',\n    DELETE = 'DELETE',\n}\n\nexport class HostModel {\n    protocol?: string = 'https';\n    host: string;\n    port?: number | null;\n}\n\nexport interface ApiBaseResponse {\n    respStatusCode: string;\n    respStatusMessage: {\n        [name: string]: string,\n    };\n}\n","export class LocaleModel {\n    localeCode: string;\n    identifier: string;\n    icon: string;\n    localeDefault: boolean;\n    localeEnabled: boolean;\n}\n","export class RoleModel {\n    authority: string;\n    level?: string;\n    description?: string;\n    group?: SystemAuthority;\n}\n\nexport class SystemAuthority {\n    code: string;\n    name: string;\n}\n","import { RoleModel } from './role.model';\n\nexport class UserModel {\n    username?: string;\n    name?: string;\n    email?: string;\n    phoneNumber?: string;\n    address?: string;\n    country?: string;\n    province?: string;\n    city?: string;\n    district?: string;\n    subDistrict?: string;\n    zipcode?: string;\n    image?: any;\n    description?: string;\n    authorityDefault?: string;\n    roles?: RoleModel[];\n    enabled?: boolean;\n    accountNonExpired?: boolean;\n    credentialsNonExpired?: boolean;\n    accountNonLocked?: boolean;\n}\n","export interface SecurityResourceModel {\n    client_id: string;\n    client_secret: string;\n    grant_type: string;\n    private_key?: string;\n    aes_key?: string;\n    session_idle?: number;\n    session_timeout?: number;\n    signature?: boolean;\n    vapid?: string;\n    recaptcha?: string;\n}\n\nexport const oauthInfo = {\n    access_token: 'access_token',\n    refresh_token: 'refresh_token',\n    token_type: 'token_type',\n    public_key: 'xrkey',\n    expires_in: 'expires_in',\n    authority: 'authority',\n    provider: 'provider',\n    username: 'username',\n    image: 'image',\n    email: 'email',\n    menus: 'menus',\n    extras: 'extras',\n    server_date: 'server_date',\n    locale: 'locale',\n    theme: 'theme',\n    name: 'name',\n};\n\nexport const additionalInfo = {\n    imageBase64: 'image-base64',\n};\n\nexport enum TypeDataOauth {\n    OAUTH = 'oauth',\n    PROFILE = 'profile',\n    SETTINGS = 'settings',\n    LOCALSTORAGE = 'localstorage',\n}\n\nexport const oauthInfoModels: OauthInfoModel[] = [\n    { key: oauthInfo.access_token, enc: true, type: TypeDataOauth.OAUTH, string: true, persist: true },\n    { key: oauthInfo.refresh_token, enc: true, type: TypeDataOauth.OAUTH, string: true, persist: true },\n    { key: oauthInfo.token_type, enc: true, type: TypeDataOauth.OAUTH, string: true, persist: true },\n    { key: oauthInfo.public_key, enc: true, type: TypeDataOauth.OAUTH, string: true, persist: true },\n    { key: oauthInfo.expires_in, enc: true, type: TypeDataOauth.OAUTH, string: false, persist: true },\n    { key: oauthInfo.authority, enc: true, type: TypeDataOauth.OAUTH, string: true, persist: true },\n    { key: oauthInfo.provider, enc: true, type: TypeDataOauth.OAUTH, string: true, persist: true },\n    { key: oauthInfo.menus, enc: true, type: TypeDataOauth.OAUTH, string: false, persist: true },\n    { key: oauthInfo.extras, enc: true, type: TypeDataOauth.OAUTH, string: false, persist: true },\n    { key: oauthInfo.username, enc: false, type: TypeDataOauth.OAUTH, string: true, persist: true },\n    { key: oauthInfo.name, enc: false, type: TypeDataOauth.PROFILE, string: true, persist: true },\n    { key: oauthInfo.email, enc: false, type: TypeDataOauth.PROFILE, string: true, persist: true },\n    { key: oauthInfo.image, enc: false, type: TypeDataOauth.PROFILE, string: true, persist: true },\n    { key: oauthInfo.locale, enc: false, type: TypeDataOauth.SETTINGS, string: true, persist: true },\n    { key: oauthInfo.theme, enc: false, type: TypeDataOauth.SETTINGS, string: true, persist: true },\n    { key: oauthInfo.server_date, enc: false, type: TypeDataOauth.SETTINGS, string: true, persist: true },\n];\n\nexport const additionalInfoModels: OauthInfoModel[] = [\n    { key: additionalInfo.imageBase64, enc: false, type: TypeDataOauth.PROFILE, string: true, persist: true },\n];\n\nexport interface OauthInfoModel {\n    key: string;\n    enc: boolean;\n    type: TypeDataOauth;\n    string: boolean;\n    persist: boolean;\n}\n\nexport const signatureHeader = {\n    authorization: 'Authorization',\n    signature: 'X-DONGKAP-Signature',\n    timestamp: 'X-DONGKAP-Timestamp',\n    key: 'X-DONGKAP-Key',\n    mark: 'X-DONGKAP-Mark',\n};\n","export enum DatePattern {\n        SLASH = '^((?:(?:31(\\\\/)(?:0[13578]|1[02]))|((29|30)(\\\\/)(0[1,3-9]|1[0-2])))(\\\\/)(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2}))$|^(?:29(\\\\/)02(\\\\/)(?:(?:(?:1[6-9]|[2-9]\\\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0[1-9]|1\\\\d|2[0-8])(\\\\/)(?:(?:0[1-9])|(?:1[0-2]))(\\\\/)(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$',\n        SLASH_DDMMYYYY = '^((?:(?:31(\\\\/)(?:0[13578]|1[02]))|((29|30)(\\\\/)(0[1,3-9]|1[0-2])))(\\\\/)(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{4}))$|^(?:29(\\\\/)02(\\\\/)(?:(?:(?:1[6-9]|[2-9]\\\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0[1-9]|1\\\\d|2[0-8])(\\\\/)(?:(?:0[1-9])|(?:1[0-2]))(\\\\/)(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{4})$',\n        SLASH_YYYYMMDD = '^((?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})(\\\\/)(?:(?:(?:0[13578]|1[02])(\\\\/)31)|((0[1,3-9]|1[0-2])(\\\\/)(29|30))))$|^(?:(?:(?:(?:1[6-9]|[2-9]\\\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00)))(\\\\/)02(\\\\/)29)$|^(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})(\\\\/)(?:(?:0[1-9])|(?:1[0-2]))(\\\\/)(?:0[1-9]|1\\\\d|2[0-8])$',\n        DASH = '^((?:(?:31(-)(?:0[13578]|1[02]))|((29|30)(-)(0[1,3-9]|1[0-2])))(-)(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2}))$|^(?:29(-)02(-)(?:(?:(?:1[6-9]|[2-9]\\\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0[1-9]|1\\\\d|2[0-8])(-)(?:(?:0[1-9])|(?:1[0-2]))(-)(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$',\n        DOT = '^((?:(?:31(\\\\.)(?:0[13578]|1[02]))|((29|30)(\\\\.)(0[1,3-9]|1[0-2])))(\\\\.)(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2}))$|^(?:29(\\\\.)02(\\\\.)(?:(?:(?:1[6-9]|[2-9]\\\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0[1-9]|1\\\\d|2[0-8])(\\\\.)(?:(?:0[1-9])|(?:1[0-2]))(\\\\.)(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$',\n}\n\nexport enum DateFormat {\n        DATE = 'dd/MM/yyyy',\n        DATETIME = 'dd/MM/yyyy HH:mm:ss.S',\n}\n\n/**\n * https://stackoverflow.com/a/52478926\n * original regex yyyy/MM/dd or yy/MM/dd\n * ^((?:(?:1[6-9]|[2-9]\\d)?\\d{2})(\\/)(?:(?:(?:0[13578]|1[02])(\\/)31)|((0[1,3-9]|1[0-2])(\\/)(29|30))))$|\n * ^(?:(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00)))(\\/)02(\\/)29)$|\n * ^(?:(?:1[6-9]|[2-9]\\d)?\\d{2})(\\/)(?:(?:0[1-9])|(?:1[0-2]))(\\/)(?:0[1-9]|1\\d|2[0-8])$\n * original regex dd/MM/yyyy or dd/MM/yy\n * ^((?:(?:31(\\/)(?:0[13578]|1[02]))|((29|30)(\\/)(0[1,3-9]|1[0-2])))(\\/)(?:(?:1[6-9]|[2-9]\\d)?\\d{2}))$|\n * ^(?:29(\\/)02(\\/)(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|\n * ^(?:0[1-9]|1\\d|2[0-8])(\\/)(?:(?:0[1-9])|(?:1[0-2]))(\\/)(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$\n */\n","export enum Pattern {\n    FULLNAME = '[a-zA-Z .,]+$',\n    EMAIL = '.+@.+\\..+',\n    USERNAME = '[a-z0-9.]*$',\n    PHONE_NUMBER = '^(([+]([0-9]{1,2}))|([0-9]{1}))([0-9]{2}-?)([0-9]{4}-?)([0-9]{1,6}-?)$',\n    PASSWORD_MEDIUM = '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])([@$!%*?&]*)[A-Za-z0-9@$!%*?&]{8,}$',\n    PASSWORD_STRONG = '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@$!%*?&])[A-Za-z0-9@$!%*?&]{8,}$',\n    LOCALE = '^en-US$|^id-ID$',\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpAbstractService } from './http-abstract.service';\nimport { HttpBaseModel, signatureHeader, HttpMethod } from '../../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpCommonService extends HttpAbstractService {\n\n  constructor(protected http: HttpClient) {\n    super();\n  }\n\n  public HTTP_AUTH(\n                    api: HttpBaseModel,\n                    body?: any,\n                    headers?: HttpHeaders,\n                    params?: HttpParams,\n                    pathVariable?: string[],\n                    responseType?: 'json' | 'arraybuffer'): Observable<any> {\n    if (headers) {\n      headers = headers.append(signatureHeader.mark, 'true');\n    } else { headers = new HttpHeaders().append(signatureHeader.mark, 'true'); }\n    responseType = responseType ? responseType : 'json';\n    return this.HTTP_BASE(api, body, headers, params, pathVariable, responseType);\n  }\n\n  public HTTP_BASE(\n                    api: HttpBaseModel,\n                    body?: any,\n                    headers?: HttpHeaders,\n                    params?: HttpParams,\n                    pathVariable?: string[],\n                    responseType?: 'json' | 'arraybuffer'): Observable<any> {\n    let response: Observable<any> = null;\n    responseType = responseType ? responseType : 'json';\n    switch (api.method) {\n      case HttpMethod.POST:\n        response = this.POST(this.API(api, pathVariable), body, headers, params, responseType);\n        break;\n      case HttpMethod.PUT:\n        response = this.PUT(this.API(api, pathVariable), body, headers, params);\n        break;\n      case HttpMethod.DELETE:\n        response = this.DELETE(this.API(api, pathVariable), headers, params);\n        break;\n      default:\n        response = this.GET(this.API(api, pathVariable), headers, params, responseType);\n        break;\n    }\n    return response;\n  }\n\n  public GET(url: string, headers?: HttpHeaders, params?: HttpParams, responseType?: any): Observable<any> {\n    return this.http.get(url, {headers, params, responseType});\n  }\n\n  public POST(url: string, body: any, headers?: HttpHeaders, params?: HttpParams, responseType?: any):\n    Observable<any> {\n    return this.http.post(url, body, {headers, params, responseType});\n  }\n\n  public PUT(url: string, body: any, headers?: HttpHeaders, params?: HttpParams): Observable<any> {\n    return this.http.put(url, body, {headers, params});\n  }\n\n  public DELETE(url: string, headers?: HttpHeaders, params?: HttpParams): Observable<any> {\n    return this.http.delete(url, {headers, params});\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nexport class TranslationService extends TranslateHttpLoader {\n\n  constructor(http: HttpClient, prefix?: string, suffix?: string) {\n    super(http, prefix, suffix);\n  }\n\n  getTranslation(lang: string): Observable<any> {\n    return super.getTranslation(lang);\n  }\n\n}\n","import {\n  ErrorHandler,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\n\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { throwIfAlreadyLoaded } from './module-import-guard';\nimport { HTTP_SERVICE } from './providers/http.provider';\nimport { STORAGE_SERVICE } from './providers/shared/storage.provider';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { CustomPreloadingStrategy } from './services/preloading-strategy.service';\nimport { EncryptionService } from './services/security/encryption.service';\nimport { StorageMaskService } from './services/storage/storage-mask.service';\nimport { HttpCommonService } from './services/utils/http-common.service';\nimport { TranslationService } from './services/utils/translation.service';\n\nexport const CORE_PROVIDERS = [\n  CustomPreloadingStrategy,\n  EncryptionService,\n  { provide: HTTP_SERVICE, useClass: HttpCommonService},\n  { provide: ErrorHandler, useClass: ErrorHandlerService},\n  { provide: STORAGE_SERVICE, useClass: StorageMaskService },\n];\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslationService(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  exports: [],\n  declarations: [],\n})\nexport class DoCoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: DoCoreModule) {\n    throwIfAlreadyLoaded(parentModule, 'DoCoreModule');\n  }\n\n  static forRoot(): ModuleWithProviders<DoCoreModule> {\n    return {\n      ngModule: DoCoreModule,\n      providers: [\n        ...CORE_PROVIDERS,\n        ...TranslateModule.forRoot({\n              loader: {\n                  provide: TranslateLoader,\n                  useFactory: (createTranslateLoader),\n                  deps: [HttpClient],\n              },\n            }).providers,\n      ],\n    };\n  }\n}\n","import { Observable } from 'rxjs';\nimport { UserModel } from '../../models';\n\nexport abstract class UserService {\n  abstract loadUser(): void;\n  abstract updateName(name: string): Observable<UserModel>;\n  abstract updatePhoto(checksum: string): Observable<UserModel>;\n  abstract get onUserChange(): Observable<UserModel>;\n}\n","import { Injector } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { IDBPDatabase, StoreValue, StoreKey } from 'idb';\nimport * as idb from 'idb';\nimport { SecurityResourceModel } from '../../models';\nimport { OAUTH_INFO } from '../../providers/shared/oauth.provider';\nimport { EncryptionService } from '../security/encryption.service';\n\nexport class IndexedDBService<T> {\n  protected $dbPromise: Promise<IDBPDatabase<T>>;\n  protected enc: EncryptionService;\n  protected oauthResource: SecurityResourceModel;\n\n  constructor(injector: Injector, dbname: string, version: number, private storeName: any) {\n    this.openSessionIDB(dbname, version);\n    this.enc = injector.get(EncryptionService);\n    this.oauthResource = injector.get(OAUTH_INFO);\n  }\n\n  public async openSessionIDB(dbname: string, version: number): Promise<IDBPDatabase<T>> {\n    return this.$dbPromise = idb.openDB<T>(dbname, version);\n  }\n\n  public getAllOf(): Observable<any> {\n    const result$: Subject<any> = new Subject<any>();\n    this.getAllVal(this.storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n  public getOf(key): Observable<any> {\n    const result$: Subject<any> = new Subject<any>();\n    this.getKeyVal(key, this.storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n  public putOf(key, val): Observable<any> {\n    const result$: Subject<any> = new Subject<any>();\n    this.putKeyVal(key, val, this.storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n  public removeOf(key): Observable<void> {\n    const result$: Subject<any> = new Subject<any>();\n    this.removeKeyVal(key, this.storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n\n  public getAll(): Promise<StoreValue<T, any>[]> {\n    return this.getAllVal(this.storeName);\n  }\n  public get(key): Promise<StoreValue<T, any>> {\n    return this.getKeyVal(this.storeName, key);\n  }\n  public put(key, val): Promise<StoreKey<T, any>> {\n    return this.putKeyVal(this.storeName, key, val);\n  }\n  public remove(key): Promise<void> {\n    return this.removeKeyVal(this.storeName, key);\n  }\n  public clearAll(): Promise<void> {\n    return this.clearAllKeyVal(this.storeName);\n  }\n  public keys(): Promise<StoreKey<T, any>[]> {\n    return this.keysKeyVal(this.storeName);\n  }\n\n  public async getAllVal(storeName: any): Promise<StoreValue<T, any>[]> {\n    return (await this.$dbPromise).getAll(storeName);\n  }\n  public async getKeyVal(storeName: any, key): Promise<StoreValue<T, any>> {\n    return (await this.$dbPromise).get(storeName, key);\n  }\n  public async putKeyVal(storeName: any, key, val): Promise<StoreKey<T, any>> {\n    return (await this.$dbPromise).put(storeName, val, key);\n  }\n  public async removeKeyVal(storeName: any, key): Promise<void> {\n    return (await this.$dbPromise).delete(storeName, key);\n  }\n  public async clearAllKeyVal(storeName: any): Promise<void> {\n    return (await this.$dbPromise).clear(storeName);\n  }\n  public async keysKeyVal(storeName: any): Promise<StoreKey<T, any>[]> {\n    return (await this.$dbPromise).getAllKeys(storeName);\n  }\n\n  public async addArticle(storeName: any, value: any): Promise<StoreKey<T, any>> {\n      return (await this.$dbPromise).add(storeName, value);\n  }\n  public async addAllArticle(storeName: any, values: any[]): Promise<void> {\n      const tx = (await this.$dbPromise).transaction(storeName, 'readwrite');\n      values.forEach((value: any) => {\n          tx.store.add(value);\n      });\n      return await tx.done;\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { UserService } from '../../services/security/user.service';\n\nexport const USER_SERVICE: InjectionToken<UserService> =\nnew InjectionToken<UserService>('USER Service');\n","import { InjectionToken } from '@angular/core';\nimport { APIModel } from '../../models';\n\nexport const API: InjectionToken<APIModel> =\nnew InjectionToken<APIModel>('API');\n","import { InjectionToken } from '@angular/core';\nimport { Environment } from '../../models';\n\nexport const ENVIRONMENT: InjectionToken<Environment> =\nnew InjectionToken<Environment>('Environment Config');\n","/*\n * Public API Surface of do-core\n */\n\nexport * from './lib/do-core.module';\n\nexport * from './lib/models';\n\nexport { TranslationService } from './lib/services/utils/translation.service';\nexport { CustomPreloadingStrategy } from './lib/services/preloading-strategy.service';\nexport { ErrorHandlerService } from './lib/services/error-handler.service';\n\nexport { UserService } from './lib/services/security/user.service';\nexport { EncryptionService } from './lib/services/security/encryption.service';\n\nexport { IndexedDBService } from './lib/services/storage/indexed-db.service';\nexport { StorageFactoryService } from './lib/services/storage/storage-factory.service';\n\nexport { HttpCommonService } from './lib/services/utils/http-common.service';\nexport { HttpFactoryService } from './lib/services/utils/http-factory.service';\nexport { IndexedDBFactoryService } from './lib/services/utils/indexeddb-factory.service';\nexport { IndexedDBEncFactoryService } from './lib/services/utils/indexeddb-enc-factory.service';\n\nexport { HTTP_SERVICE } from './lib/providers/http.provider';\nexport { OAUTH_INFO } from './lib/providers/shared/oauth.provider';\nexport { USER_SERVICE } from './lib/providers/shared/user.provider';\nexport { API } from './lib/providers/shared/api.provider';\nexport { ENVIRONMENT } from './lib/providers/shared/environment.provider';\nexport {\n    STORAGE_SERVICE,\n    AUTH_INDEXED_DB,\n    PROFILE_INDEXED_DB,\n    SETTINGS_INDEXED_DB,\n} from './lib/providers/shared/storage.provider';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}