import { Component } from '@angular/core';
import { takeUntil } from 'rxjs/operators';
import { ResponseCode, Pattern } from '@dongkap/do-core';
import { BaseFormComponent } from '@dongkap/do-shared';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "../services/business-partner.service";
import * as i3 from "@dongkap/do-shared";
import * as i4 from "@angular/forms";
export class BusinessPartnerAddEditPageComponent extends BaseFormComponent {
    constructor(injector, router, route, businessPartnerService) {
        super(injector, {
            bpName: [],
            email: [],
            address: [],
            telpNumber: [],
            faxNumber: [],
            b2bNonExpired: [],
            expiredTime: [],
        });
        this.injector = injector;
        this.router = router;
        this.route = route;
        this.businessPartnerService = businessPartnerService;
        this.action = 'Add';
        this.patternEmail = Pattern.EMAIL;
        this.patternPhoneNumber = Pattern.PHONE_NUMBER;
        this.dataDefault = [
            {
                id: 'b2bNonExpired',
                selected: true,
            },
        ];
        this.isB2bNonExpired = true;
        if (this.businessPartnerService.getB2B() || (this.route.snapshot.params['action'] === 'add')) {
            if ((this.route.snapshot.params['action'] === 'edit')) {
                this.action = 'Edit';
                this.formGroup.get('bpName').setValue(this.businessPartnerService.getB2B().businessPartner.bpName);
                this.formGroup.get('email').setValue(this.businessPartnerService.getB2B().businessPartner.email);
                this.formGroup.get('address').setValue(this.businessPartnerService.getB2B().businessPartner.address);
                this.formGroup.get('telpNumber').setValue(this.businessPartnerService.getB2B().businessPartner.telpNumber);
                this.formGroup.get('faxNumber').setValue(this.businessPartnerService.getB2B().businessPartner.faxNumber);
                this.formGroup.get('b2bNonExpired').setValue([{
                        id: 'b2bNonExpired',
                        selected: this.businessPartnerService.getB2B().b2bNonExpired ? true : false,
                    }]);
                this.formGroup.get('expiredTime').setValue(this.businessPartnerService.getB2B().expiredTime);
                this.isB2bNonExpired = this.businessPartnerService.getB2B().b2bNonExpired;
            }
            else {
                this.formGroup.get('b2bNonExpired').setValue(this.dataDefault);
            }
        }
        else {
            this.router.navigate(['/app/mgmt/business-partner']);
        }
    }
    ngOnInit() { }
    onReset() {
        this.router.navigate(['/app/mgmt/business-partner']);
    }
    onCheckB2bNonExpired(event) {
        this.isB2bNonExpired = event ? true : false;
    }
    onSubmit() {
        var _a;
        const b2bNonExpired = this.formGroup.get('b2bNonExpired').value;
        const data = {
            id: (_a = this.businessPartnerService.getB2B()) === null || _a === void 0 ? void 0 : _a.id,
            b2bNonExpired: (b2bNonExpired ? true : false),
            expiredTime: !this.isB2bNonExpired ? this.formGroup.get('expiredTime').value : null,
            businessPartner: {
                bpName: this.formGroup.get('bpName').value,
                email: this.formGroup.get('email').value,
                address: this.formGroup.get('address').value,
                telpNumber: this.formGroup.get('telpNumber').value,
                faxNumber: this.formGroup.get('faxNumber').value
            },
        };
        super.onSubmit(data, 'master', 'post-business-partner')
            .pipe(takeUntil(this.destroy$))
            .subscribe(response => {
            if (response.respStatusCode === ResponseCode.OK_DEFAULT.toString()) {
                this.router.navigate(['/app/mgmt/business-partner']);
            }
        });
    }
}
BusinessPartnerAddEditPageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BusinessPartnerAddEditPageComponent, deps: [{ token: i0.Injector }, { token: i1.Router }, { token: i1.ActivatedRoute }, { token: i2.BusinessPartnerService }], target: i0.ɵɵFactoryTarget.Component });
BusinessPartnerAddEditPageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BusinessPartnerAddEditPageComponent, selector: "do-business-partner-add-edit-page", usesInheritance: true, ngImport: i0, template: "<do-page-outlet [header]=\"'header.'+action+'-business-partner'\" [url]=\"'/app/mgmt/business-partner'\">\n  <div class=\"row\" pagecontent>\n    <div class=\"col-md-12 col-lg-12\">\n      <form [formGroup]=\"formGroup\">\n        <do-input-text\n          [name]=\"'bpName'\"\n          [label]=\"'Business Partner Name'\"\n          [required]=\"true\"\n          [skeleton]=\"loadingForm\"\n          formControlName=\"bpName\">\n        </do-input-text>\n        <do-checkbox\n          [name]=\"'b2bNonExpired'\"\n          [label]=\"'Non Expired'\"\n          [data]=\"dataDefault\"\n          (onChecked)=\"onCheckB2bNonExpired($event)\"\n          formControlName=\"b2bNonExpired\">\n        </do-checkbox>\n        <do-datepicker\n          [show]=\"!isB2bNonExpired\"\n          [name]=\"'expiredTime'\"\n          [label]=\"'Expired Date'\"\n          [required]=\"!isB2bNonExpired\"\n          formControlName=\"expiredTime\">\n        </do-datepicker>\n        <do-input-text\n          [name]=\"'email'\"\n          [label]=\"'Email'\"\n          [required]=\"true\"\n          [pattern]=\"patternEmail\"\n          [paramError]=\"{value:5}\"\n          [skeleton]=\"loadingForm\"\n          formControlName=\"email\">\n        </do-input-text>\n        <do-textarea\n          [name]=\"'address'\"\n          [label]=\"'Address'\"\n          [required]=\"true\"\n          [minLength]=\"5\"\n          [skeleton]=\"loadingForm\"\n          formControlName=\"address\">\n        </do-textarea>\n        <do-input-text\n          [name]=\"'telpNumber'\"\n          [label]=\"'Telp.'\"\n          [required]=\"true\"\n          [pattern]=\"patternPhoneNumber\"\n          [skeleton]=\"loadingForm\"\n          formControlName=\"telpNumber\">\n        </do-input-text>\n        <do-input-text\n          [name]=\"'faxNumber'\"\n          [label]=\"'Fax.'\"\n          [pattern]=\"patternPhoneNumber\"\n          [skeleton]=\"loadingForm\"\n          formControlName=\"faxNumber\">\n        </do-input-text>\n      </form>\n    </div>\n  </div>\n  <do-button-submit\n    [submitTitle]=\"action\"\n    [resetTitle]=\"'Cancel'\"\n    [formGroupButton]=\"formGroup\"\n    [disabledButton]=\"disabled\"\n    (onReset)=\"onReset()\"\n    (onSubmit)=\"onSubmit()\"\n    pagefooter>\n  </do-button-submit>\n</do-page-outlet>\n", styles: [""], components: [{ type: i3.DoPageOutletComponent, selector: "do-page-outlet", inputs: ["header", "url", "width", "dataSelect", "selected", "param", "hidefooter", "showToggle", "isCollapsed", "iconToggle"], outputs: ["selectChange", "onCollapsed", "onExpanded"] }, { type: i3.DoInputTextComponent, selector: "do-input-text", inputs: ["placeholder", "colLabel", "colInput", "minLength", "maxLength", "min", "max", "step", "capslock", "type", "togglePassword", "showPassword"] }, { type: i3.DoCheckboxComponent, selector: "do-checkbox", inputs: ["colLabel", "colInput", "data"], outputs: ["onChecked"] }, { type: i3.DoDatePickerComponent, selector: "do-datepicker", inputs: ["placeholder", "colLabel", "colInput", "min", "max", "size", "dateMask"] }, { type: i3.DoTextareaComponent, selector: "do-textarea", inputs: ["placeholder", "colLabel", "colInput", "minLength", "maxLength", "height"] }, { type: i3.DoButtonSubmitComponent, selector: "do-button-submit", inputs: ["colLabel", "colButton", "resetTitle", "submitTitle", "disabledButton", "disabledReset", "type", "status", "skeleton", "formGroupButton"], outputs: ["onSubmit", "onReset"] }], directives: [{ type: i4.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i4.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i4.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i4.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i4.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i4.PatternValidator, selector: "[pattern][formControlName],[pattern][formControl],[pattern][ngModel]", inputs: ["pattern"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BusinessPartnerAddEditPageComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'do-business-partner-add-edit-page',
                    styleUrls: ['./business-partner-add-edit-page.component.scss'],
                    templateUrl: './business-partner-add-edit-page.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i1.Router }, { type: i1.ActivatedRoute }, { type: i2.BusinessPartnerService }]; } });
//# sourceMappingURL=data:application/json;base64,