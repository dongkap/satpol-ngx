import { Component } from '@angular/core';
import { SelectionType } from '@swimlane/ngx-datatable';
import { BaseFilterComponent } from '@dongkap/do-shared';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "../services/business-partner.service";
import * as i3 from "@dongkap/do-shared";
import * as i4 from "@angular/forms";
export class BusinessPartnerListPageComponent extends BaseFilterComponent {
    constructor(injector, router, businessPartnerService) {
        super(injector, {
            bpName: [],
        });
        this.injector = injector;
        this.router = router;
        this.businessPartnerService = businessPartnerService;
        this.selectionType = SelectionType.single;
        this.columns = [
            { name: 'Business Partner', prop: 'businessPartner.bpName', width: 275, frozenLeft: true },
            { name: 'Telp', prop: 'businessPartner.telpNumber', width: 100, frozenLeft: true },
            { name: 'Fax', prop: 'businessPartner.faxNumber', width: 100, frozenLeft: true },
            { name: 'Email', prop: 'businessPartner.email', width: 175 },
            { name: 'Address', prop: 'businessPartner.address' },
            { name: 'Created', prop: 'createdBy' },
            { name: 'Created Date', prop: 'createdDate' },
            { name: 'Modified', prop: 'modifiedBy' },
            { name: 'Modified Date', prop: 'modifiedDate' },
        ];
        this.expanded = false;
        this.sort = {
            asc: ['businessPartner.bpName']
        };
        this.apiPath = this.api['master']['datatable-business-partner'];
        this.filters = [
            { controlName: 'bpName', type: 'input' }
        ];
    }
    ngOnInit() {
    }
    onAdd() {
        this.businessPartnerService.setB2B(null);
        this.router.navigate(['/app/mgmt/business-partner', 'add']);
    }
    onViewDetail(data) {
        this.businessPartnerService.setB2B(data);
        this.router.navigate(['/app/mgmt/business-partner', 'edit']);
    }
    onReset() {
        this.router.navigate(['/app/mgmt/business-partner']);
    }
}
BusinessPartnerListPageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BusinessPartnerListPageComponent, deps: [{ token: i0.Injector }, { token: i1.Router }, { token: i2.BusinessPartnerService }], target: i0.ɵɵFactoryTarget.Component });
BusinessPartnerListPageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: BusinessPartnerListPageComponent, selector: "do-business-partner-list-page", usesInheritance: true, ngImport: i0, template: "<do-page-outlet [header]=\"'header.business-partner-management'\" [hidefooter]=\"true\">\n  <div class=\"row\" pagecontent>\n    <div class=\"col-md-12 col-lg-12\">\n      <do-datatable\n        [api]=\"apiPath\"\n        [formGroupFilter]=\"formGroupFilter\"\n        [filters]=\"filters\"\n        [sort]=\"sort\"\n        [delete]=\"false\"\n        [selectionType]=\"selectionType\"\n        (onAdd)=\"onAdd()\"\n        (onEdit)=\"onViewDetail($event)\"\n        [columns]=\"columns\">\n        <form [formGroup]=\"formGroupFilter\">\n          <do-input-text\n            [name]=\"'bpName'\"\n            [label]=\"'Business Partner'\"\n            formControlName=\"bpName\">\n          </do-input-text>\n        </form>\n      </do-datatable>\n    </div>\n  </div>\n</do-page-outlet>\n", styles: [""], components: [{ type: i3.DoPageOutletComponent, selector: "do-page-outlet", inputs: ["header", "url", "width", "dataSelect", "selected", "param", "hidefooter", "showToggle", "isCollapsed", "iconToggle"], outputs: ["selectChange", "onCollapsed", "onExpanded"] }, { type: i3.DoDatatableComponent, selector: "do-datatable", inputs: ["rows", "columns", "filters", "selected", "limit", "count", "offset", "externalPaging", "externalSorting", "loadingIndicator", "scrollbarH", "scrollbarV", "reorderable", "sortType", "messages", "selectionType", "columnMode", "headerHeight", "footerHeight", "rowHeight", "header", "column", "footer", "add", "edit", "delete", "filter", "api", "startWithOpenData", "filterEvent", "formGroupFilter", "sort", "sortsDefault", "autoLoad", "filterFn", "filterDoFetchFn", "reloadFn"], outputs: ["onAdd", "onEdit", "onDelete", "onSearch", "onFilter", "onButtonCell", "onLoading", "onSelected"] }, { type: i3.DoInputTextComponent, selector: "do-input-text", inputs: ["placeholder", "colLabel", "colInput", "minLength", "maxLength", "min", "max", "step", "capslock", "type", "togglePassword", "showPassword"] }], directives: [{ type: i4.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i4.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i4.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i4.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: BusinessPartnerListPageComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'do-business-partner-list-page',
                    styleUrls: ['./business-partner-list-page.component.scss'],
                    templateUrl: './business-partner-list-page.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i1.Router }, { type: i2.BusinessPartnerService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVzaW5lc3MtcGFydG5lci1saXN0LXBhZ2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vQGRvbmdrYXAvZG8tc3lzL3NyYy9saWIvYnVzaW5lc3MtcGFydG5lci9saXN0L2J1c2luZXNzLXBhcnRuZXItbGlzdC1wYWdlLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL0Bkb25na2FwL2RvLXN5cy9zcmMvbGliL2J1c2luZXNzLXBhcnRuZXIvbGlzdC9idXNpbmVzcy1wYXJ0bmVyLWxpc3QtcGFnZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFZLE1BQU0sZUFBZSxDQUFDO0FBR3BELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUV4RCxPQUFPLEVBQUUsbUJBQW1CLEVBQW1CLE1BQU0sb0JBQW9CLENBQUM7Ozs7OztBQVExRSxNQUFNLE9BQU8sZ0NBQWlDLFNBQVEsbUJBQXdCO0lBaUI1RSxZQUNTLFFBQWtCLEVBQ2pCLE1BQWMsRUFDZCxzQkFBOEM7UUFDdEQsS0FBSyxDQUFDLFFBQVEsRUFBRTtZQUNkLE1BQU0sRUFBRSxFQUFFO1NBQ1gsQ0FBQyxDQUFDO1FBTEksYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUNqQixXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQ2QsMkJBQXNCLEdBQXRCLHNCQUFzQixDQUF3QjtRQWpCakQsa0JBQWEsR0FBa0IsYUFBYSxDQUFDLE1BQU0sQ0FBQztRQUNwRCxZQUFPLEdBQXNCO1lBQ2xDLEVBQUUsSUFBSSxFQUFFLGtCQUFrQixFQUFFLElBQUksRUFBRSx3QkFBd0IsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUU7WUFDMUYsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSw0QkFBNEIsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUU7WUFDbEYsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSwyQkFBMkIsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUU7WUFDaEYsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSx1QkFBdUIsRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFO1lBQzVELEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUseUJBQXlCLEVBQUU7WUFDcEQsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUU7WUFDdEMsRUFBRSxJQUFJLEVBQUUsY0FBYyxFQUFFLElBQUksRUFBRSxhQUFhLEVBQUU7WUFDN0MsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUU7WUFDeEMsRUFBRSxJQUFJLEVBQUUsZUFBZSxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUU7U0FDaEQsQ0FBQztRQUNLLGFBQVEsR0FBWSxLQUFLLENBQUM7UUFTL0IsSUFBSSxDQUFDLElBQUksR0FBRztZQUNWLEdBQUcsRUFBRSxDQUFDLHdCQUF3QixDQUFDO1NBQ2hDLENBQUM7UUFDRixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUMsNEJBQTRCLENBQUMsQ0FBQztRQUNoRSxJQUFJLENBQUMsT0FBTyxHQUFHO1lBQ2IsRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUU7U0FBQyxDQUFDO0lBQzlDLENBQUM7SUFFRCxRQUFRO0lBQ1IsQ0FBQztJQUVELEtBQUs7UUFDSCxJQUFJLENBQUMsc0JBQXNCLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsNEJBQTRCLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUM5RCxDQUFDO0lBRUQsWUFBWSxDQUFDLElBQUk7UUFDZixJQUFJLENBQUMsc0JBQXNCLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsNEJBQTRCLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUMvRCxDQUFDO0lBRUQsT0FBTztRQUNMLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsNEJBQTRCLENBQUMsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7OzhIQS9DVSxnQ0FBZ0M7a0hBQWhDLGdDQUFnQyw0RkNiN0MsMnhCQXdCQTs0RkRYYSxnQ0FBZ0M7a0JBTDVDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLCtCQUErQjtvQkFDekMsU0FBUyxFQUFFLENBQUMsNkNBQTZDLENBQUM7b0JBQzFELFdBQVcsRUFBRSw2Q0FBNkM7aUJBQzNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3RvciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgU2VsZWN0aW9uVHlwZSB9IGZyb20gJ0Bzd2ltbGFuZS9uZ3gtZGF0YXRhYmxlJztcbmltcG9ydCB7IEh0dHBCYXNlTW9kZWwgfSBmcm9tICdAZG9uZ2thcC9kby1jb3JlJztcbmltcG9ydCB7IEJhc2VGaWx0ZXJDb21wb25lbnQsIERhdGF0YWJsZUNvbHVtbiB9IGZyb20gJ0Bkb25na2FwL2RvLXNoYXJlZCc7XG5pbXBvcnQgeyBCdXNpbmVzc1BhcnRuZXJTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvYnVzaW5lc3MtcGFydG5lci5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZG8tYnVzaW5lc3MtcGFydG5lci1saXN0LXBhZ2UnLFxuICBzdHlsZVVybHM6IFsnLi9idXNpbmVzcy1wYXJ0bmVyLWxpc3QtcGFnZS5jb21wb25lbnQuc2NzcyddLFxuICB0ZW1wbGF0ZVVybDogJy4vYnVzaW5lc3MtcGFydG5lci1saXN0LXBhZ2UuY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBCdXNpbmVzc1BhcnRuZXJMaXN0UGFnZUNvbXBvbmVudCBleHRlbmRzIEJhc2VGaWx0ZXJDb21wb25lbnQ8YW55PiBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgcHVibGljIGFwaVBhdGg6IEh0dHBCYXNlTW9kZWw7XG4gIHB1YmxpYyBzZWxlY3Rpb25UeXBlOiBTZWxlY3Rpb25UeXBlID0gU2VsZWN0aW9uVHlwZS5zaW5nbGU7XG4gIHB1YmxpYyBjb2x1bW5zOiBEYXRhdGFibGVDb2x1bW5bXSA9IFtcbiAgICB7IG5hbWU6ICdCdXNpbmVzcyBQYXJ0bmVyJywgcHJvcDogJ2J1c2luZXNzUGFydG5lci5icE5hbWUnLCB3aWR0aDogMjc1LCBmcm96ZW5MZWZ0OiB0cnVlIH0sXG4gICAgeyBuYW1lOiAnVGVscCcsIHByb3A6ICdidXNpbmVzc1BhcnRuZXIudGVscE51bWJlcicsIHdpZHRoOiAxMDAsIGZyb3plbkxlZnQ6IHRydWUgfSxcbiAgICB7IG5hbWU6ICdGYXgnLCBwcm9wOiAnYnVzaW5lc3NQYXJ0bmVyLmZheE51bWJlcicsIHdpZHRoOiAxMDAsIGZyb3plbkxlZnQ6IHRydWUgfSxcbiAgICB7IG5hbWU6ICdFbWFpbCcsIHByb3A6ICdidXNpbmVzc1BhcnRuZXIuZW1haWwnLCB3aWR0aDogMTc1IH0sXG4gICAgeyBuYW1lOiAnQWRkcmVzcycsIHByb3A6ICdidXNpbmVzc1BhcnRuZXIuYWRkcmVzcycgfSxcbiAgICB7IG5hbWU6ICdDcmVhdGVkJywgcHJvcDogJ2NyZWF0ZWRCeScgfSxcbiAgICB7IG5hbWU6ICdDcmVhdGVkIERhdGUnLCBwcm9wOiAnY3JlYXRlZERhdGUnIH0sXG4gICAgeyBuYW1lOiAnTW9kaWZpZWQnLCBwcm9wOiAnbW9kaWZpZWRCeScgfSxcbiAgICB7IG5hbWU6ICdNb2RpZmllZCBEYXRlJywgcHJvcDogJ21vZGlmaWVkRGF0ZScgfSxcbiAgXTtcbiAgcHVibGljIGV4cGFuZGVkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGluamVjdG9yOiBJbmplY3RvcixcbiAgICBwcml2YXRlIHJvdXRlcjogUm91dGVyLFxuICAgIHByaXZhdGUgYnVzaW5lc3NQYXJ0bmVyU2VydmljZTogQnVzaW5lc3NQYXJ0bmVyU2VydmljZSkge1xuICAgIHN1cGVyKGluamVjdG9yLCB7XG4gICAgICBicE5hbWU6IFtdLFxuICAgIH0pO1xuICAgIHRoaXMuc29ydCA9IHtcbiAgICAgIGFzYzogWydidXNpbmVzc1BhcnRuZXIuYnBOYW1lJ11cbiAgICB9O1xuICAgIHRoaXMuYXBpUGF0aCA9IHRoaXMuYXBpWydtYXN0ZXInXVsnZGF0YXRhYmxlLWJ1c2luZXNzLXBhcnRuZXInXTtcbiAgICB0aGlzLmZpbHRlcnMgPSBbXG4gICAgICB7IGNvbnRyb2xOYW1lOiAnYnBOYW1lJywgdHlwZTogJ2lucHV0JyB9XTtcbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICB9XG5cbiAgb25BZGQoKTogdm9pZCB7XG4gICAgdGhpcy5idXNpbmVzc1BhcnRuZXJTZXJ2aWNlLnNldEIyQihudWxsKTtcbiAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZShbJy9hcHAvbWdtdC9idXNpbmVzcy1wYXJ0bmVyJywgJ2FkZCddKTtcbiAgfVxuXG4gIG9uVmlld0RldGFpbChkYXRhKTogdm9pZCB7XG4gICAgdGhpcy5idXNpbmVzc1BhcnRuZXJTZXJ2aWNlLnNldEIyQihkYXRhKTtcbiAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZShbJy9hcHAvbWdtdC9idXNpbmVzcy1wYXJ0bmVyJywgJ2VkaXQnXSk7XG4gIH1cblxuICBvblJlc2V0KCk6IHZvaWQge1xuICAgIHRoaXMucm91dGVyLm5hdmlnYXRlKFsnL2FwcC9tZ210L2J1c2luZXNzLXBhcnRuZXInXSk7XG4gIH1cblxufVxuIiwiPGRvLXBhZ2Utb3V0bGV0IFtoZWFkZXJdPVwiJ2hlYWRlci5idXNpbmVzcy1wYXJ0bmVyLW1hbmFnZW1lbnQnXCIgW2hpZGVmb290ZXJdPVwidHJ1ZVwiPlxuICA8ZGl2IGNsYXNzPVwicm93XCIgcGFnZWNvbnRlbnQ+XG4gICAgPGRpdiBjbGFzcz1cImNvbC1tZC0xMiBjb2wtbGctMTJcIj5cbiAgICAgIDxkby1kYXRhdGFibGVcbiAgICAgICAgW2FwaV09XCJhcGlQYXRoXCJcbiAgICAgICAgW2Zvcm1Hcm91cEZpbHRlcl09XCJmb3JtR3JvdXBGaWx0ZXJcIlxuICAgICAgICBbZmlsdGVyc109XCJmaWx0ZXJzXCJcbiAgICAgICAgW3NvcnRdPVwic29ydFwiXG4gICAgICAgIFtkZWxldGVdPVwiZmFsc2VcIlxuICAgICAgICBbc2VsZWN0aW9uVHlwZV09XCJzZWxlY3Rpb25UeXBlXCJcbiAgICAgICAgKG9uQWRkKT1cIm9uQWRkKClcIlxuICAgICAgICAob25FZGl0KT1cIm9uVmlld0RldGFpbCgkZXZlbnQpXCJcbiAgICAgICAgW2NvbHVtbnNdPVwiY29sdW1uc1wiPlxuICAgICAgICA8Zm9ybSBbZm9ybUdyb3VwXT1cImZvcm1Hcm91cEZpbHRlclwiPlxuICAgICAgICAgIDxkby1pbnB1dC10ZXh0XG4gICAgICAgICAgICBbbmFtZV09XCInYnBOYW1lJ1wiXG4gICAgICAgICAgICBbbGFiZWxdPVwiJ0J1c2luZXNzIFBhcnRuZXInXCJcbiAgICAgICAgICAgIGZvcm1Db250cm9sTmFtZT1cImJwTmFtZVwiPlxuICAgICAgICAgIDwvZG8taW5wdXQtdGV4dD5cbiAgICAgICAgPC9mb3JtPlxuICAgICAgPC9kby1kYXRhdGFibGU+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9kby1wYWdlLW91dGxldD5cbiJdfQ==