import { Component } from '@angular/core';
import { takeUntil } from 'rxjs/operators';
import { BaseFilterComponent } from '@dongkap/do-shared';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "../services/inventory.service";
import * as i3 from "@nebular/theme";
import * as i4 from "@dongkap/do-shared";
import * as i5 from "@angular/forms";
import * as i6 from "@ngx-translate/core";
export class InventoryListPageComponent extends BaseFilterComponent {
    constructor(injector, router, inventoryService, dialogService) {
        super(injector, {
            assetName: [],
            assetCondition: [],
        });
        this.injector = injector;
        this.router = router;
        this.inventoryService = inventoryService;
        this.dialogService = dialogService;
        this.columns = [
            { name: 'Asset Name', prop: 'assetName', width: 175, frozenLeft: true },
            { name: 'Condition', prop: 'assetConditionValue', width: 100, frozenLeft: true },
            { name: 'Quantity', prop: 'quantity', width: 75, frozenLeft: true },
            { name: 'Location', prop: 'location', width: 225, frozenLeft: true },
            { name: 'Created', prop: 'createdBy' },
            { name: 'Created Date', prop: 'createdDate' },
            { name: 'Modified', prop: 'modifiedBy' },
            { name: 'Modified Date', prop: 'modifiedDate' },
        ];
        this.reload = false;
        this.expanded = false;
        this.apiPath = this.api['master']['datatable-inventory'];
        this.apiPathDelete = this.api['master']['delete-inventory'];
        this.sort = {
            asc: ['businessPartner.bpName']
        };
        this.filters = [
            { controlName: 'assetName', type: 'input' },
            { controlName: 'assetCondition', type: 'input' }
        ];
    }
    ngOnInit() {
    }
    onAdd() {
        this.inventoryService.setAsset(null);
        this.router.navigate(['/app/mgmt/inventory', 'add']);
    }
    onViewDetail(data) {
        this.inventoryService.setAsset(data);
        this.router.navigate(['/app/mgmt/inventory', 'edit']);
    }
    onDeleteDialog(data, dialog) {
        this.reload = false;
        this.assetIds = [];
        data.forEach(value => {
            this.assetIds.push(value.id);
        });
        this.dialogService.open(dialog, { context: 'alert.delete' });
    }
    onDelete(ref) {
        this.disabled = true;
        this.http.HTTP_AUTH(this.apiPathDelete, this.assetIds)
            .pipe(takeUntil(this.destroy$))
            .subscribe((success) => {
            ref.close();
            this.disabled = false;
            this.reload = true;
            this.toastr.showI18n(success.respStatusMessage[success.respStatusCode], true);
        }, (error) => {
            this.disabled = false;
            this.toastr.showI18n(error.respStatusMessage[error.respStatusCode], true, null, 'danger');
        });
    }
    onReset() {
        this.router.navigate(['/app/mgmt/inventory']);
    }
}
InventoryListPageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InventoryListPageComponent, deps: [{ token: i0.Injector }, { token: i1.Router }, { token: i2.InventoryService }, { token: i3.NbDialogService }], target: i0.ɵɵFactoryTarget.Component });
InventoryListPageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InventoryListPageComponent, selector: "do-inventory-list-page", usesInheritance: true, ngImport: i0, template: "<do-page-outlet [header]=\"'header.inventory-management'\" [hidefooter]=\"true\">\n  <div class=\"row\" pagecontent>\n    <div class=\"col-md-12 col-lg-12\">\n      <do-datatable\n        [api]=\"apiPath\"\n        [formGroupFilter]=\"formGroupFilter\"\n        [filters]=\"filters\"\n        [sort]=\"sort\"\n        [reloadFn]=\"reload\"\n        (onAdd)=\"onAdd()\"\n        (onEdit)=\"onViewDetail($event)\"\n        (onDelete)=\"onDeleteDialog($event, dialogdelete)\"\n        [columns]=\"columns\">\n        <form [formGroup]=\"formGroupFilter\">\n          <do-input-text\n            [name]=\"'assetName'\"\n            [label]=\"'Asset Name'\"\n            formControlName=\"assetName\">\n          </do-input-text>\n          <do-input-text\n            [name]=\"'assetCondition'\"\n            [label]=\"'Condition'\"\n            formControlName=\"assetCondition\">\n          </do-input-text>\n        </form>\n      </do-datatable>\n    </div>\n  </div>\n</do-page-outlet>\n\n<ng-template #dialogdelete let-data let-ref=\"dialogRef\">\n  <nb-card accent=\"danger\">\n    <nb-card-header>{{ 'Warning' | translate}}</nb-card-header>\n    <nb-card-body>{{ data | translate}}</nb-card-body>\n    <nb-card-footer>\n      <do-button-submit\n        [colLabel]=\"0\"\n        [colButton]=\"12\"\n        [submitTitle]=\"'Delete'\"\n        [resetTitle]=\"'Cancel'\"\n        [disabledButton]=\"disabled\"\n        (onReset)=\"ref.close()\"\n        (onSubmit)=\"onDelete(ref)\">\n      </do-button-submit>\n    </nb-card-footer>\n  </nb-card>\n</ng-template>\n", styles: [""], components: [{ type: i4.DoPageOutletComponent, selector: "do-page-outlet", inputs: ["header", "url", "width", "dataSelect", "selected", "param", "hidefooter", "showToggle", "isCollapsed", "iconToggle"], outputs: ["selectChange", "onCollapsed", "onExpanded"] }, { type: i4.DoDatatableComponent, selector: "do-datatable", inputs: ["rows", "columns", "filters", "selected", "limit", "count", "offset", "externalPaging", "externalSorting", "loadingIndicator", "scrollbarH", "scrollbarV", "reorderable", "sortType", "messages", "selectionType", "columnMode", "headerHeight", "footerHeight", "rowHeight", "header", "column", "footer", "add", "edit", "delete", "filter", "api", "startWithOpenData", "filterEvent", "formGroupFilter", "sort", "sortsDefault", "autoLoad", "filterFn", "filterDoFetchFn", "reloadFn"], outputs: ["onAdd", "onEdit", "onDelete", "onSearch", "onFilter", "onButtonCell", "onLoading", "onSelected"] }, { type: i4.DoInputTextComponent, selector: "do-input-text", inputs: ["placeholder", "colLabel", "colInput", "minLength", "maxLength", "min", "max", "step", "capslock", "type"] }, { type: i3.NbCardComponent, selector: "nb-card", inputs: ["status", "accent", "size"] }, { type: i3.NbCardHeaderComponent, selector: "nb-card-header" }, { type: i3.NbCardBodyComponent, selector: "nb-card-body" }, { type: i3.NbCardFooterComponent, selector: "nb-card-footer" }, { type: i4.DoButtonSubmitComponent, selector: "do-button-submit", inputs: ["colLabel", "colButton", "resetTitle", "submitTitle", "disabledButton", "disabledReset", "type", "status", "skeleton", "formGroupButton"], outputs: ["onSubmit", "onReset"] }], directives: [{ type: i5.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i5.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i5.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i5.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }], pipes: { "translate": i6.TranslatePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InventoryListPageComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'do-inventory-list-page',
                    styleUrls: ['./inventory-list-page.component.scss'],
                    templateUrl: './inventory-list-page.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i1.Router }, { type: i2.InventoryService }, { type: i3.NbDialogService }]; } });
//# sourceMappingURL=data:application/json;base64,