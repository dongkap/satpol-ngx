import { Component } from '@angular/core';
import { takeUntil } from 'rxjs/operators';
import { ResponseCode } from '@dongkap/do-core';
import { BaseFormComponent } from '@dongkap/do-shared';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "../services/inventory.service";
import * as i3 from "@dongkap/do-shared";
import * as i4 from "@angular/forms";
export class InventoryAddEditPageComponent extends BaseFormComponent {
    constructor(injector, router, route, inventoryService) {
        var _a, _b, _c;
        super(injector, {
            assetName: [],
            assetCondition: [],
            quantity: [],
            description: [],
            atOffice: [],
            businessPartner: [],
        });
        this.injector = injector;
        this.router = router;
        this.route = route;
        this.inventoryService = inventoryService;
        this.action = 'Add';
        this.dataDefault = [
            {
                id: 'atOffice',
                name: 'At Office',
                selected: true,
            },
        ];
        this.isAtOffice = true;
        if (this.inventoryService.getAsset() || (this.route.snapshot.params['action'] === 'add')) {
            this.apiSelectCondition = this.api['master']['select-parameter'];
            this.paramSelectCondition = [{
                    key: 'parameterGroupCode',
                    value: 'ASSET_CONDITION',
                }];
            this.apiSelectBusinessPartner = this.api['master']['select-business-partner'];
            if ((this.route.snapshot.params['action'] === 'edit')) {
                this.action = 'Edit';
                this.formGroup.get('assetName').setValue(this.inventoryService.getAsset().assetName);
                this.formGroup.controls['assetCondition'].setValue({
                    label: (_a = this.inventoryService.getAsset()) === null || _a === void 0 ? void 0 : _a.assetConditionValue,
                    value: (_b = this.inventoryService.getAsset()) === null || _b === void 0 ? void 0 : _b.assetConditionCode
                });
                this.formGroup.get('quantity').setValue(this.inventoryService.getAsset().quantity);
                this.formGroup.get('description').setValue(this.inventoryService.getAsset().description);
                this.formGroup.get('atOffice').setValue([{
                        id: 'atOffice',
                        name: 'At Office',
                        selected: this.inventoryService.getAsset().businessPartner ? false : true,
                    }]);
                this.isAtOffice = this.inventoryService.getAsset().businessPartner ? false : true;
                if (!this.isAtOffice) {
                    this.formGroup.get('businessPartner').setValue((_c = this.inventoryService.getAsset()) === null || _c === void 0 ? void 0 : _c.businessPartner['bpName']);
                }
            }
            else {
                this.formGroup.get('atOffice').setValue(this.dataDefault);
            }
        }
        else {
            this.router.navigate(['/app/mgmt/inventory']);
        }
    }
    ngOnInit() { }
    onReset() {
        this.router.navigate(['/app/mgmt/inventory']);
    }
    onCheckAtOffice(event) {
        this.isAtOffice = event ? true : false;
    }
    onSubmit() {
        var _a, _b, _c, _d;
        const atOffice = this.formGroup.get('atOffice').value;
        let businessPartner = null;
        if (!atOffice) {
            if (this.formGroup.get('businessPartner').value || ((_a = this.inventoryService.getAsset()) === null || _a === void 0 ? void 0 : _a.businessPartner)) {
                businessPartner = {
                    id: this.formGroup.get('businessPartner').value['value'] ?
                        this.formGroup.get('businessPartner').value['value'] : (_b = this.inventoryService.getAsset()) === null || _b === void 0 ? void 0 : _b.businessPartner['id'],
                    bpName: this.formGroup.get('businessPartner').value['label'] ?
                        this.formGroup.get('businessPartner').value['label'] : (_c = this.inventoryService.getAsset()) === null || _c === void 0 ? void 0 : _c.businessPartner['bpName'],
                };
            }
        }
        const data = {
            id: (_d = this.inventoryService.getAsset()) === null || _d === void 0 ? void 0 : _d.id,
            assetName: this.formGroup.get('assetName').value,
            assetConditionCode: this.selectValue('assetCondition'),
            assetConditionValue: this.selectLabel('assetCondition'),
            quantity: this.formGroup.get('quantity').value,
            description: this.formGroup.get('description').value,
            businessPartner,
        };
        super.onSubmit(data, 'master', 'post-inventory')
            .pipe(takeUntil(this.destroy$))
            .subscribe(response => {
            if (response.respStatusCode === ResponseCode.OK_DEFAULT.toString()) {
                this.router.navigate(['/app/mgmt/inventory']);
            }
        });
    }
    selectLabel(prop) {
        if (this.formGroup.get(prop).value) {
            if (this.formGroup.get(prop).value.label) {
                return this.formGroup.get(prop).value.label;
            }
            else {
                return this.formGroup.get(prop).value;
            }
        }
        else {
            return null;
        }
    }
    selectValue(prop) {
        if (this.formGroup.get(prop).value) {
            if (this.formGroup.get(prop).value.value) {
                return this.formGroup.get(prop).value.value;
            }
            else {
                return null;
            }
        }
        else {
            return null;
        }
    }
}
InventoryAddEditPageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InventoryAddEditPageComponent, deps: [{ token: i0.Injector }, { token: i1.Router }, { token: i1.ActivatedRoute }, { token: i2.InventoryService }], target: i0.ɵɵFactoryTarget.Component });
InventoryAddEditPageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: InventoryAddEditPageComponent, selector: "do-inventory-add-edit-page", usesInheritance: true, ngImport: i0, template: "<do-page-outlet [header]=\"'header.'+action+'-inventory'\" [url]=\"'/app/mgmt/inventory'\">\n  <div class=\"row\" pagecontent>\n    <div class=\"col-md-12 col-lg-12\">\n      <form [formGroup]=\"formGroup\">\n        <do-input-text\n          [name]=\"'assetName'\"\n          [label]=\"'Asset Name'\"\n          [required]=\"true\"\n          [skeleton]=\"loadingForm\"\n          formControlName=\"assetName\">\n        </do-input-text>\n        <do-select\n          [name]=\"'assetCondition'\"\n          [label]=\"'Condition'\"\n          [required]=\"true\"\n          [api]=\"apiSelectCondition\"\n          [queryParam]=\"paramSelectCondition\"\n          [searchable]=\"false\"\n          [skeleton]=\"loadingForm\"\n          formControlName=\"assetCondition\">\n        </do-select>\n        <do-input-text\n          [name]=\"'quantity'\"\n          [label]=\"'Quantity'\"\n          [type]=\"'number'\"\n          [required]=\"true\"\n          [skeleton]=\"loadingForm\"\n          formControlName=\"quantity\">\n        </do-input-text>\n        <do-checkbox\n          [name]=\"'atOffice'\"\n          [label]=\"'Location'\"\n          [data]=\"dataDefault\"\n          (onChecked)=\"onCheckAtOffice($event)\"\n          [skeleton]=\"loadingForm\"\n          formControlName=\"atOffice\">\n        </do-checkbox>\n        <do-select\n          [show]=\"!isAtOffice\"\n          [name]=\"'businessPartner'\"\n          [nolabel]=\"true\"\n          [required]=\"!isAtOffice\"\n          [api]=\"apiSelectBusinessPartner\"\n          [skeleton]=\"loadingForm\"\n          formControlName=\"businessPartner\">\n        </do-select>\n        <do-textarea\n          [name]=\"'description'\"\n          [label]=\"'Description'\"\n          [skeleton]=\"loadingForm\"\n          formControlName=\"description\">\n        </do-textarea>\n      </form>\n    </div>\n  </div>\n  <do-button-submit\n    [submitTitle]=\"action\"\n    [resetTitle]=\"'Cancel'\"\n    [formGroupButton]=\"formGroup\"\n    [disabledButton]=\"disabled\"\n    (onReset)=\"onReset()\"\n    (onSubmit)=\"onSubmit()\"\n    pagefooter>\n  </do-button-submit>\n</do-page-outlet>\n", styles: [""], components: [{ type: i3.DoPageOutletComponent, selector: "do-page-outlet", inputs: ["header", "url", "width", "dataSelect", "selected", "param", "hidefooter", "showToggle", "isCollapsed", "iconToggle"], outputs: ["selectChange", "onCollapsed", "onExpanded"] }, { type: i3.DoInputTextComponent, selector: "do-input-text", inputs: ["placeholder", "colLabel", "colInput", "minLength", "maxLength", "min", "max", "step", "capslock", "type", "togglePassword", "showPassword"] }, { type: i3.DoSelectComponent, selector: "do-select", inputs: ["placeholder", "colLabel", "colInput", "items", "multiple", "loading", "addTag", "closeOnSelect", "clearable", "searchable", "hideSelected", "minTermLength", "maxTermLength", "api", "limit", "offsetNextLoad", "queryParam"], outputs: ["onSelect", "onClear"] }, { type: i3.DoCheckboxComponent, selector: "do-checkbox", inputs: ["colLabel", "colInput", "data"], outputs: ["onChecked"] }, { type: i3.DoTextareaComponent, selector: "do-textarea", inputs: ["placeholder", "colLabel", "colInput", "minLength", "maxLength", "height"] }, { type: i3.DoButtonSubmitComponent, selector: "do-button-submit", inputs: ["colLabel", "colButton", "resetTitle", "submitTitle", "disabledButton", "disabledReset", "type", "status", "skeleton", "formGroupButton"], outputs: ["onSubmit", "onReset"] }], directives: [{ type: i4.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i4.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i4.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i4.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i4.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: InventoryAddEditPageComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'do-inventory-add-edit-page',
                    styleUrls: ['./inventory-add-edit-page.component.scss'],
                    templateUrl: './inventory-add-edit-page.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i1.Router }, { type: i1.ActivatedRoute }, { type: i2.InventoryService }]; } });
//# sourceMappingURL=data:application/json;base64,