import { Component, Inject } from '@angular/core';
import { HttpErrorResponse, HttpHeaders } from '@angular/common/http';
import { of, Subject } from 'rxjs';
import { debounceTime, distinctUntilChanged, first, map, switchMap, takeUntil } from 'rxjs/operators';
import { ResponseCode, Pattern, HTTP_SERVICE, OAUTH_INFO, API } from '@dongkap/do-core';
import { BaseFormComponent } from '@dongkap/do-shared';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "../../services/employee.service";
import * as i3 from "@dongkap/do-shared";
import * as i4 from "@angular/forms";
let emailExist;
export class EmployeeEditPersonalInformationComponent extends BaseFormComponent {
    constructor(injector, router, employeeService, httpBaseService, oauthResource, apiPath) {
        super(injector, {
            employeeName: [],
            nik: [],
            idNumber: [],
            email: [],
            phoneNumber: [],
            address: [],
        });
        this.injector = injector;
        this.router = router;
        this.employeeService = employeeService;
        this.httpBaseService = httpBaseService;
        this.oauthResource = oauthResource;
        this.apiPath = apiPath;
        this.patternEmail = Pattern.EMAIL;
        this.patternPhoneNumber = Pattern.PHONE_NUMBER;
        this.patternFullname = Pattern.FULLNAME;
        this.formGroup.get('email')
            .setAsyncValidators([
            userValidator(this.oauthResource, this.httpBaseService, this.apiPath)
        ]);
        if (!this.employeeService.getEmployeeHeader()) {
            this.router.navigate(['/app/mgmt/employee']);
        }
    }
    ngOnInit() { }
    loadDataMenu() {
        var _a;
        this.loadingForm = true;
        return this.exec('security', 'get-employee-personal-info', {
            employeeId: (_a = this.employeeService.getEmployeeHeader()) === null || _a === void 0 ? void 0 : _a.id
        }).pipe(map((success) => {
            var _a, _b, _c;
            this.loadingForm = false;
            emailExist = success.email;
            this.personalInfo = success === null || success === void 0 ? void 0 : success.personalInfo;
            this.formGroup.controls['employeeName'].setValue(success.fullname);
            this.formGroup.controls['nik'].setValue(success.idEmployee);
            this.formGroup.controls['idNumber'].setValue((_a = success.personalInfo) === null || _a === void 0 ? void 0 : _a.idNumber);
            this.formGroup.controls['email'].setValue(success.email);
            this.formGroup.controls['phoneNumber'].setValue((_b = success.contact) === null || _b === void 0 ? void 0 : _b.phoneNumber);
            this.formGroup.controls['address'].setValue((_c = success.contact) === null || _c === void 0 ? void 0 : _c.address);
            this.formGroup.markAsPristine();
        }));
    }
    onReset() {
        this.router.navigate(['/app/mgmt/employee']);
    }
    onSubmit() {
        var _a;
        const data = {
            id: (_a = this.employeeService.getEmployeeHeader()) === null || _a === void 0 ? void 0 : _a.id,
            idEmployee: this.formGroup.controls['nik'].value,
            fullname: this.formGroup.controls['employeeName'].value,
            email: this.formGroup.controls['email'].value,
            contact: {
                phoneNumber: this.formGroup.controls['phoneNumber'].value,
                address: this.formGroup.controls['address'].value,
            },
            personalInfo: {
                idNumber: this.formGroup.controls['idNumber'].value,
            },
        };
        super.onSubmit(data, 'security', 'put-employee-personal-info')
            .pipe(takeUntil(this.destroy$))
            .subscribe(response => {
            if (response.respStatusCode === ResponseCode.OK_DEFAULT.toString()) {
                this.router.navigate(['/app/mgmt/employee']);
            }
        });
    }
}
EmployeeEditPersonalInformationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: EmployeeEditPersonalInformationComponent, deps: [{ token: i0.Injector }, { token: i1.Router }, { token: i2.EmployeeService }, { token: HTTP_SERVICE }, { token: OAUTH_INFO }, { token: API }], target: i0.ɵɵFactoryTarget.Component });
EmployeeEditPersonalInformationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: EmployeeEditPersonalInformationComponent, selector: "do-employee-edit-personal-information", usesInheritance: true, ngImport: i0, template: "<div class=\"row\">\n  <div class=\"col-md-12 col-lg-12\">\n    <form class=\"form-horizontal\" autocomplete=\"on\" [formGroup]=\"formGroup\">\n      <do-input-text\n        [name]=\"'name'\"\n        [label]=\"'Employee Name'\"\n        [placeholder]=\"'Employee Name'\"\n        [pattern]=\"patternFullname\"\n        [required]=\"true\"\n        [skeleton]=\"loadingForm\"\n        formControlName=\"employeeName\">\n      </do-input-text>\n      <do-input-text\n        [name]=\"'nik'\"\n        [label]=\"'Employee Identification Number'\"\n        [placeholder]=\"'Employee Identification Number'\"\n        [required]=\"true\"\n        [skeleton]=\"loadingForm\"\n        formControlName=\"nik\">\n      </do-input-text>\n      <do-input-text\n        [name]=\"'idNumber'\"\n        [label]=\"'ID Card Number'\"\n        [placeholder]=\"'ID Card Number'\"\n        [required]=\"true\"\n        [skeleton]=\"loadingForm\"\n        formControlName=\"idNumber\">\n      </do-input-text>\n      <do-input-text\n        [name]=\"'email'\"\n        [label]=\"'Email'\"\n        [placeholder]=\"'Email'\"\n        [required]=\"true\"\n        [skeleton]=\"loadingForm\"\n        [pattern]=\"patternEmail\"\n        [paramError]=\"{value:5}\"\n        minlength=\"5\"\n        maxlength=\"50\"\n        formControlName=\"email\">\n      </do-input-text>\n      <do-input-text\n        [name]=\"'phoneNumber'\"\n        [label]=\"'Phone Number'\"\n        [placeholder]=\"'Phone Number'\"\n        [pattern]=\"patternPhoneNumber\"\n        [required]=\"true\"\n        [skeleton]=\"loadingForm\"\n        formControlName=\"phoneNumber\">\n      </do-input-text>\n      <do-textarea\n        [name]=\"'address'\"\n        [label]=\"'Address'\"\n        [placeholder]=\"'Address'\"\n        [required]=\"true\"\n        [skeleton]=\"loadingForm\"\n        formControlName=\"address\">\n      </do-textarea>\n      <do-label-text\n        [name]=\"'pobdob'\"\n        [label]=\"'label.pobdob'\"\n        [skeleton]=\"loadingForm\"\n        [content]=\"personalInfo?.placeOfBirth + ', ' +personalInfo?.dateOfBirth\"\n        [colLabel]=\"3\"\n        [colContent]=\"9\"\n        [dividerlabel]=\"false\">\n      </do-label-text>\n      <do-label-text\n        [name]=\"'gender'\"\n        [label]=\"'Gender'\"\n        [skeleton]=\"loadingForm\"\n        [content]=\"personalInfo?.genderValue\"\n        [colLabel]=\"3\"\n        [colContent]=\"9\"\n        [dividerlabel]=\"false\">\n      </do-label-text>\n      <do-label-text\n        [name]=\"'height'\"\n        [label]=\"'Height'\"\n        [skeleton]=\"loadingForm\"\n        [content]=\"personalInfo?.height\"\n        [colLabel]=\"3\"\n        [colContent]=\"9\"\n        [dividerlabel]=\"false\">\n      </do-label-text>\n      <do-label-text\n        [name]=\"'weight'\"\n        [label]=\"'Weight'\"\n        [skeleton]=\"loadingForm\"\n        [content]=\"personalInfo?.weight\"\n        [colLabel]=\"3\"\n        [colContent]=\"9\"\n        [dividerlabel]=\"false\">\n      </do-label-text>\n      <do-label-text\n        [name]=\"'bloodType'\"\n        [label]=\"'Blood Type'\"\n        [skeleton]=\"loadingForm\"\n        [content]=\"personalInfo?.bloodType\"\n        [colLabel]=\"3\"\n        [colContent]=\"9\"\n        [dividerlabel]=\"false\">\n      </do-label-text>\n      <do-button-submit\n        [submitTitle]=\"'Edit'\"\n        [resetTitle]=\"'Cancel'\"\n        [formGroupButton]=\"formGroup\"\n        [disabledButton]=\"disabled\"\n        (onReset)=\"onReset()\"\n        (onSubmit)=\"onSubmit()\">\n      </do-button-submit>\n    </form>\n  </div>\n</div>", styles: [""], components: [{ type: i3.DoInputTextComponent, selector: "do-input-text", inputs: ["placeholder", "colLabel", "colInput", "minLength", "maxLength", "min", "max", "step", "capslock", "type", "togglePassword", "showPassword"] }, { type: i3.DoTextareaComponent, selector: "do-textarea", inputs: ["placeholder", "colLabel", "colInput", "minLength", "maxLength", "height"] }, { type: i3.DoLabelTextComponent, selector: "do-label-text", inputs: ["colLabel", "colContent", "skeleton", "name", "content", "dividerlabel", "numeric", "label", "nolabel", "required", "showMoreMode", "maxShowMore", "paramError"] }, { type: i3.DoButtonSubmitComponent, selector: "do-button-submit", inputs: ["colLabel", "colButton", "resetTitle", "submitTitle", "disabledButton", "disabledReset", "type", "status", "skeleton", "formGroupButton"], outputs: ["onSubmit", "onReset"] }], directives: [{ type: i4.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i4.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i4.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i4.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i4.PatternValidator, selector: "[pattern][formControlName],[pattern][formControl],[pattern][ngModel]", inputs: ["pattern"] }, { type: i4.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i4.MinLengthValidator, selector: "[minlength][formControlName],[minlength][formControl],[minlength][ngModel]", inputs: ["minlength"] }, { type: i4.MaxLengthValidator, selector: "[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]", inputs: ["maxlength"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: EmployeeEditPersonalInformationComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'do-employee-edit-personal-information',
                    styleUrls: ['./employee-edit-personal-information.component.scss'],
                    templateUrl: './employee-edit-personal-information.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i1.Router }, { type: i2.EmployeeService }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [HTTP_SERVICE]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [OAUTH_INFO]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [API]
                }] }]; } });
export function userValidator(oauthResource, httpBaseService, apiPath) {
    return (control) => {
        if (!control.valueChanges) {
            return of(null);
        }
        else {
            return control.valueChanges.pipe(debounceTime(500), distinctUntilChanged(), switchMap(() => {
                const validatorSubject$ = new Subject();
                const httpHeaders = new HttpHeaders({
                    Authorization: 'Basic ' + btoa(oauthResource['client_id'] + ':' + oauthResource['client_secret']),
                    'Content-Type': 'application/json',
                });
                const data = {
                    user: control.value,
                    exist: emailExist,
                };
                let dataValidator;
                if (control.value) {
                    httpBaseService.HTTP_BASE(apiPath['auth']['check-user'], data, httpHeaders).subscribe((response) => {
                        if (response['respStatusCode'] === ResponseCode.OK_SCR012.toString()) {
                            validatorSubject$.next(null);
                        }
                        else {
                            dataValidator = {
                                error: true,
                            };
                            validatorSubject$.next(dataValidator);
                        }
                    }, (error) => {
                        if (!(error instanceof HttpErrorResponse)) {
                            dataValidator = {
                                error: true,
                            };
                        }
                        else {
                            if (error.status === 302) {
                                dataValidator = {
                                    'not-available': true,
                                };
                            }
                            else {
                                dataValidator = {
                                    timeout: true,
                                };
                            }
                        }
                        validatorSubject$.next(dataValidator);
                    });
                }
                return validatorSubject$.asObservable();
            })).pipe(first());
        }
    };
}
//# sourceMappingURL=data:application/json;base64,