import { Component } from '@angular/core';
import { Validators } from '@angular/forms';
import { DoWizardStep } from '@dongkap/do-shared';
import * as i0 from "@angular/core";
import * as i1 from "@dongkap/do-shared";
import * as i2 from "@angular/forms";
export class EmployeeAddEmployeeStatusComponent extends DoWizardStep {
    constructor(injector) {
        super(injector, 'employee-status', {
            occupation: [{
                    value: null,
                    disabled: false,
                }, Validators.required],
            role: [{
                    value: null,
                    disabled: false,
                }, Validators.required],
            employeeParent: [{
                    value: null,
                    disabled: false,
                }],
        });
        this.injector = injector;
        this.apiSelectOccupation = this.api['security']['select-occupation'];
        this.apiSelectRole = this.api['security']['select-role'];
        this.apiSelectEmployeeParent = this.api['security']['select-employee'];
    }
    ngOnInit() {
    }
    ngOnDestroy() {
        this.destroy$.next(true);
        this.destroy$.complete();
        this.destroy$.unsubscribe();
    }
    validateRoute() {
        var _a;
        if (!((_a = this.formGroup.controls['education']) === null || _a === void 0 ? void 0 : _a.valid)) {
            this.router.navigate(['/app/mgmt/employee/add/education']);
        }
    }
}
EmployeeAddEmployeeStatusComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: EmployeeAddEmployeeStatusComponent, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });
EmployeeAddEmployeeStatusComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: EmployeeAddEmployeeStatusComponent, selector: "do-employee-add-employee-status", usesInheritance: true, ngImport: i0, template: "<do-wizard-page-outlet>\n  <form class=\"form-horizontal\" autocomplete=\"on\" [formGroup]=\"formGroup\" wizardcontent>\n    <div [formGroupName]=\"formGroupName\">\n      <do-select\n        [name]=\"'occupation'\"\n        [label]=\"'Occupation'\"\n        [placeholder]=\"'Occupation'\"\n        [required]=\"true\"\n        [api]=\"apiSelectOccupation\"\n        [searchable]=\"false\"\n        [skeleton]=\"loadingForm\"\n        formControlName=\"occupation\">\n      </do-select>\n      <do-select\n        [name]=\"'role'\"\n        [label]=\"'Role'\"\n        [placeholder]=\"'Role'\"\n        [required]=\"true\"\n        [api]=\"apiSelectRole\"\n        [searchable]=\"false\"\n        [multiple]=\"true\"\n        [skeleton]=\"loadingForm\"\n        formControlName=\"role\">\n      </do-select>\n      <do-select\n        [name]=\"'employeeParent'\"\n        [label]=\"'Supervisor'\"\n        [placeholder]=\"'Supervisor'\"\n        [api]=\"apiSelectEmployeeParent\"\n        [skeleton]=\"loadingForm\"\n        formControlName=\"employeeParent\">\n      </do-select>\n    </div>\n  </form>\n</do-wizard-page-outlet>\n", styles: [""], components: [{ type: i1.DoWizardPageOutletComponent, selector: "do-wizard-page-outlet", inputs: ["width"] }, { type: i1.DoSelectComponent, selector: "do-select", inputs: ["placeholder", "colLabel", "colInput", "items", "multiple", "loading", "addTag", "closeOnSelect", "clearable", "searchable", "hideSelected", "minTermLength", "maxTermLength", "api", "limit", "offsetNextLoad", "queryParam"], outputs: ["onSelect", "onClear"] }], directives: [{ type: i2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i2.FormGroupName, selector: "[formGroupName]", inputs: ["formGroupName"] }, { type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i2.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i2.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: EmployeeAddEmployeeStatusComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'do-employee-add-employee-status',
                    templateUrl: 'employee-add-employee-status.component.html',
                    styleUrls: ['./employee-add-employee-status.component.scss'],
                }]
        }], ctorParameters: function () { return [{ type: i0.Injector }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1wbG95ZWUtYWRkLWVtcGxveWVlLXN0YXR1cy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9AZG9uZ2thcC9kby1zeXMvc3JjL2xpYi9lbXBsb3llZS9hZGQvZW1wbG95ZWUtc3RhdHVzL2VtcGxveWVlLWFkZC1lbXBsb3llZS1zdGF0dXMuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vQGRvbmdrYXAvZG8tc3lzL3NyYy9saWIvZW1wbG95ZWUvYWRkL2VtcGxveWVlLXN0YXR1cy9lbXBsb3llZS1hZGQtZW1wbG95ZWUtc3RhdHVzLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQStCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU1QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7Ozs7QUFPbEQsTUFBTSxPQUFPLGtDQUFtQyxTQUFRLFlBQVk7SUFNbEUsWUFDUyxRQUFrQjtRQUN6QixLQUFLLENBQUMsUUFBUSxFQUFFLGlCQUFpQixFQUFFO1lBQ2pDLFVBQVUsRUFBRSxDQUFDO29CQUNYLEtBQUssRUFBRSxJQUFJO29CQUNYLFFBQVEsRUFBRSxLQUFLO2lCQUNoQixFQUFFLFVBQVUsQ0FBQyxRQUFRLENBQUM7WUFDdkIsSUFBSSxFQUFFLENBQUM7b0JBQ0wsS0FBSyxFQUFFLElBQUk7b0JBQ1gsUUFBUSxFQUFFLEtBQUs7aUJBQ2hCLEVBQUUsVUFBVSxDQUFDLFFBQVEsQ0FBQztZQUN2QixjQUFjLEVBQUUsQ0FBQztvQkFDZixLQUFLLEVBQUUsSUFBSTtvQkFDWCxRQUFRLEVBQUUsS0FBSztpQkFDaEIsQ0FBQztTQUNILENBQUMsQ0FBQztRQWRJLGFBQVEsR0FBUixRQUFRLENBQVU7UUFlekIsSUFBSSxDQUFDLG1CQUFtQixHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUNyRSxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDekQsSUFBSSxDQUFDLHVCQUF1QixHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUMsaUJBQWlCLENBQUMsQ0FBQztJQUN6RSxDQUFDO0lBRUQsUUFBUTtJQUNSLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUN6QixJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzlCLENBQUM7SUFFRCxhQUFhOztRQUNYLElBQUksQ0FBQyxDQUFBLE1BQUEsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLDBDQUFFLEtBQUssQ0FBQSxFQUFFO1lBQ2hELElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsa0NBQWtDLENBQUMsQ0FBQyxDQUFDO1NBQzVEO0lBQ0gsQ0FBQzs7Z0lBeENVLGtDQUFrQztvSEFBbEMsa0NBQWtDLDhGQ1YvQyw2bUNBbUNBOzRGRHpCYSxrQ0FBa0M7a0JBTDlDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLGlDQUFpQztvQkFDM0MsV0FBVyxFQUFFLDZDQUE2QztvQkFDMUQsU0FBUyxFQUFFLENBQUMsK0NBQStDLENBQUM7aUJBQzdEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3RvciwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFZhbGlkYXRvcnMgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBIdHRwQmFzZU1vZGVsIH0gZnJvbSAnQGRvbmdrYXAvZG8tY29yZSc7XG5pbXBvcnQgeyBEb1dpemFyZFN0ZXAgfSBmcm9tICdAZG9uZ2thcC9kby1zaGFyZWQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdkby1lbXBsb3llZS1hZGQtZW1wbG95ZWUtc3RhdHVzJyxcbiAgdGVtcGxhdGVVcmw6ICdlbXBsb3llZS1hZGQtZW1wbG95ZWUtc3RhdHVzLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vZW1wbG95ZWUtYWRkLWVtcGxveWVlLXN0YXR1cy5jb21wb25lbnQuc2NzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBFbXBsb3llZUFkZEVtcGxveWVlU3RhdHVzQ29tcG9uZW50IGV4dGVuZHMgRG9XaXphcmRTdGVwIGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuXG4gIHB1YmxpYyBhcGlTZWxlY3RPY2N1cGF0aW9uOiBIdHRwQmFzZU1vZGVsO1xuICBwdWJsaWMgYXBpU2VsZWN0Um9sZTogSHR0cEJhc2VNb2RlbDtcbiAgcHVibGljIGFwaVNlbGVjdEVtcGxveWVlUGFyZW50OiBIdHRwQmFzZU1vZGVsO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBpbmplY3RvcjogSW5qZWN0b3IpIHtcbiAgICBzdXBlcihpbmplY3RvciwgJ2VtcGxveWVlLXN0YXR1cycsIHtcbiAgICAgIG9jY3VwYXRpb246IFt7XG4gICAgICAgIHZhbHVlOiBudWxsLFxuICAgICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgICB9LCBWYWxpZGF0b3JzLnJlcXVpcmVkXSxcbiAgICAgIHJvbGU6IFt7XG4gICAgICAgIHZhbHVlOiBudWxsLFxuICAgICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgICB9LCBWYWxpZGF0b3JzLnJlcXVpcmVkXSxcbiAgICAgIGVtcGxveWVlUGFyZW50OiBbe1xuICAgICAgICB2YWx1ZTogbnVsbCxcbiAgICAgICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgICAgfV0sXG4gICAgfSk7XG4gICAgdGhpcy5hcGlTZWxlY3RPY2N1cGF0aW9uID0gdGhpcy5hcGlbJ3NlY3VyaXR5J11bJ3NlbGVjdC1vY2N1cGF0aW9uJ107XG4gICAgdGhpcy5hcGlTZWxlY3RSb2xlID0gdGhpcy5hcGlbJ3NlY3VyaXR5J11bJ3NlbGVjdC1yb2xlJ107XG4gICAgdGhpcy5hcGlTZWxlY3RFbXBsb3llZVBhcmVudCA9IHRoaXMuYXBpWydzZWN1cml0eSddWydzZWxlY3QtZW1wbG95ZWUnXTtcbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy5kZXN0cm95JC5uZXh0KHRydWUpO1xuICAgIHRoaXMuZGVzdHJveSQuY29tcGxldGUoKTtcbiAgICB0aGlzLmRlc3Ryb3kkLnVuc3Vic2NyaWJlKCk7XG4gIH1cblxuICB2YWxpZGF0ZVJvdXRlKCkge1xuICAgIGlmICghdGhpcy5mb3JtR3JvdXAuY29udHJvbHNbJ2VkdWNhdGlvbiddPy52YWxpZCkge1xuICAgICAgdGhpcy5yb3V0ZXIubmF2aWdhdGUoWycvYXBwL21nbXQvZW1wbG95ZWUvYWRkL2VkdWNhdGlvbiddKTtcbiAgICB9XG4gIH1cblxufVxuIiwiPGRvLXdpemFyZC1wYWdlLW91dGxldD5cbiAgPGZvcm0gY2xhc3M9XCJmb3JtLWhvcml6b250YWxcIiBhdXRvY29tcGxldGU9XCJvblwiIFtmb3JtR3JvdXBdPVwiZm9ybUdyb3VwXCIgd2l6YXJkY29udGVudD5cbiAgICA8ZGl2IFtmb3JtR3JvdXBOYW1lXT1cImZvcm1Hcm91cE5hbWVcIj5cbiAgICAgIDxkby1zZWxlY3RcbiAgICAgICAgW25hbWVdPVwiJ29jY3VwYXRpb24nXCJcbiAgICAgICAgW2xhYmVsXT1cIidPY2N1cGF0aW9uJ1wiXG4gICAgICAgIFtwbGFjZWhvbGRlcl09XCInT2NjdXBhdGlvbidcIlxuICAgICAgICBbcmVxdWlyZWRdPVwidHJ1ZVwiXG4gICAgICAgIFthcGldPVwiYXBpU2VsZWN0T2NjdXBhdGlvblwiXG4gICAgICAgIFtzZWFyY2hhYmxlXT1cImZhbHNlXCJcbiAgICAgICAgW3NrZWxldG9uXT1cImxvYWRpbmdGb3JtXCJcbiAgICAgICAgZm9ybUNvbnRyb2xOYW1lPVwib2NjdXBhdGlvblwiPlxuICAgICAgPC9kby1zZWxlY3Q+XG4gICAgICA8ZG8tc2VsZWN0XG4gICAgICAgIFtuYW1lXT1cIidyb2xlJ1wiXG4gICAgICAgIFtsYWJlbF09XCInUm9sZSdcIlxuICAgICAgICBbcGxhY2Vob2xkZXJdPVwiJ1JvbGUnXCJcbiAgICAgICAgW3JlcXVpcmVkXT1cInRydWVcIlxuICAgICAgICBbYXBpXT1cImFwaVNlbGVjdFJvbGVcIlxuICAgICAgICBbc2VhcmNoYWJsZV09XCJmYWxzZVwiXG4gICAgICAgIFttdWx0aXBsZV09XCJ0cnVlXCJcbiAgICAgICAgW3NrZWxldG9uXT1cImxvYWRpbmdGb3JtXCJcbiAgICAgICAgZm9ybUNvbnRyb2xOYW1lPVwicm9sZVwiPlxuICAgICAgPC9kby1zZWxlY3Q+XG4gICAgICA8ZG8tc2VsZWN0XG4gICAgICAgIFtuYW1lXT1cIidlbXBsb3llZVBhcmVudCdcIlxuICAgICAgICBbbGFiZWxdPVwiJ1N1cGVydmlzb3InXCJcbiAgICAgICAgW3BsYWNlaG9sZGVyXT1cIidTdXBlcnZpc29yJ1wiXG4gICAgICAgIFthcGldPVwiYXBpU2VsZWN0RW1wbG95ZWVQYXJlbnRcIlxuICAgICAgICBbc2tlbGV0b25dPVwibG9hZGluZ0Zvcm1cIlxuICAgICAgICBmb3JtQ29udHJvbE5hbWU9XCJlbXBsb3llZVBhcmVudFwiPlxuICAgICAgPC9kby1zZWxlY3Q+XG4gICAgPC9kaXY+XG4gIDwvZm9ybT5cbjwvZG8td2l6YXJkLXBhZ2Utb3V0bGV0PlxuIl19