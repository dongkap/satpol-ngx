import { Component } from '@angular/core';
import { Subject } from 'rxjs';
import { HttpErrorResponse } from '@angular/common/http';
import { takeUntil } from 'rxjs/operators';
import { BaseComponent } from '@dongkap/do-shared';
import { EmployeePromptComponent } from './prompt-employee/employee-prompt.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@dongkap/do-shared";
import * as i3 from "@nebular/theme";
import * as i4 from "../services/job-placement.service";
import * as i5 from "@ngx-translate/core";
export class JobPlacementEditPageComponent extends BaseComponent {
    constructor(injector, router, toastr, dialogService, jobPlacementService) {
        super(injector);
        this.injector = injector;
        this.router = router;
        this.toastr = toastr;
        this.dialogService = dialogService;
        this.jobPlacementService = jobPlacementService;
        this.loading = false;
        this.disabled = false;
        this.destroy$ = new Subject();
        this.reload = false;
        this.columns = [
            { name: 'Employee Name', prop: 'employee.fullname', frozenLeft: true, sortable: true },
            { name: 'NIK', prop: 'employee.idEmployee', frozenLeft: true },
            { name: 'Occupation', prop: 'employee.occupation.name', frozenLeft: true },
        ];
        this.assignmentIds = [];
    }
    ngOnInit() {
        var _a;
        if (this.jobPlacementService.getAssignmentGroup()) {
            this.apiPath = this.api['activity']['datatable-assignment'];
            this.apiPathAdd = this.api['activity']['post-assignment'];
            this.apiPathDelete = this.api['activity']['delete-assignment'];
            this.sort = {
                asc: ['employee.fullname']
            };
            this.sortsDefault = [
                { prop: 'employee.fullname', dir: 'asc' }
            ];
            this.assignmentGroup = this.jobPlacementService.getAssignmentGroup();
            this.loading = true;
            this.keyword = {
                assignmentGroupId: this.assignmentGroup.id,
            };
            this.exec('master', 'get-business-partner', {
                id: (_a = this.jobPlacementService.getAssignmentGroup()) === null || _a === void 0 ? void 0 : _a.bpId
            }).
                pipe(takeUntil(this.destroy$)).subscribe((success) => {
                this.loading = false;
                this.businessPartner = success;
            }, (error) => {
                this.loading = true;
                if (error instanceof HttpErrorResponse) {
                    error = error['error'];
                }
                this.toastr.showI18n(error.respStatusMessage[error.respStatusCode], true, null, 'danger');
            });
        }
        else {
            this.router.navigate(['/app/mgmt/job-placement']);
        }
    }
    ngOnDestroy() {
        this.destroy$.next(true);
        this.destroy$.next();
        this.destroy$.complete();
    }
    onAddAssignment() {
        this.dialogService.open(EmployeePromptComponent)
            .onClose.subscribe((data) => {
            if (data) {
                if (data.length) {
                    const employeeIds = [];
                    data.forEach(employee => {
                        employeeIds.push(employee.id);
                    });
                    const dataRequest = {
                        id: this.assignmentGroup.id,
                        bpId: this.assignmentGroup.bpId,
                        employeeIds,
                    };
                    this.disabled = true;
                    this.http.HTTP_AUTH(this.apiPathAdd, dataRequest)
                        .pipe(takeUntil(this.destroy$))
                        .subscribe((success) => {
                        this.disabled = false;
                        this.reload = true;
                        if (this.assignmentGroup) {
                            this.assignmentGroup['id'] = success.respStatusMessage['assignmentGroupId'];
                        }
                        this.keyword = {
                            assignmentGroupId: success.respStatusMessage['assignmentGroupId'],
                        };
                        this.toastr.showI18n(success.respStatusMessage[success.respStatusCode], true);
                    }, (error) => {
                        this.disabled = false;
                        this.toastr.showI18n(error.respStatusMessage[error.respStatusCode], true, null, 'danger');
                    });
                }
            }
        });
    }
    onDeleteAssignmentDialog(data, dialog) {
        this.reload = false;
        this.assignmentIds = [];
        data.forEach(value => {
            this.assignmentIds.push(value.id);
        });
        this.dialogService.open(dialog, { context: 'alert.delete' });
    }
    onDeleteAssignment(ref) {
        this.disabled = true;
        const data = {
            id: this.assignmentGroup.id,
            assignmentIds: this.assignmentIds,
        };
        this.http.HTTP_AUTH(this.apiPathDelete, data)
            .pipe(takeUntil(this.destroy$))
            .subscribe((success) => {
            this.disabled = false;
            ref.close();
            this.reload = true;
            this.toastr.showI18n(success.respStatusMessage[success.respStatusCode], true);
        }, (error) => {
            this.disabled = false;
            this.toastr.showI18n(error.respStatusMessage[error.respStatusCode], true, null, 'danger');
        });
    }
}
JobPlacementEditPageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: JobPlacementEditPageComponent, deps: [{ token: i0.Injector }, { token: i1.Router }, { token: i2.DoToastrService }, { token: i3.NbDialogService }, { token: i4.JobPlacementService }], target: i0.ɵɵFactoryTarget.Component });
JobPlacementEditPageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: JobPlacementEditPageComponent, selector: "do-job-placement-edit-page", usesInheritance: true, ngImport: i0, template: "<do-page-outlet [header]=\"'header.job-placement-management'\" [url]=\"'/app/mgmt/job-placement'\" [hidefooter]=\"true\">\n  <div class=\"row\" pagecontent>\n    <div class=\"col-md-12 col-lg-12\">\n      <do-label-text\n        [name]=\"'bpName'\"\n        [label]=\"'Business Partner'\"\n        [skeleton]=\"loading\"\n        [content]=\"businessPartner?.bpName\"\n        [colLabel]=\"3\"\n        [colContent]=\"9\"\n        [dividerlabel]=\"false\">\n      </do-label-text>\n      <do-label-text\n        [name]=\"'email'\"\n        [label]=\"'Email'\"\n        [skeleton]=\"loading\"\n        [content]=\"businessPartner?.email\"\n        [colLabel]=\"3\"\n        [colContent]=\"9\"\n        [dividerlabel]=\"false\">\n      </do-label-text>\n      <do-label-text\n        [name]=\"'address'\"\n        [label]=\"'Address'\"\n        [skeleton]=\"loading\"\n        [content]=\"businessPartner?.address\"\n        [colLabel]=\"3\"\n        [colContent]=\"9\"\n        [dividerlabel]=\"false\">\n      </do-label-text>\n      <do-label-text\n        [name]=\"'telpNumber'\"\n        [label]=\"'Telp.'\"\n        [skeleton]=\"loading\"\n        [content]=\"businessPartner?.telpNumber\"\n        [colLabel]=\"3\"\n        [colContent]=\"9\"\n        [dividerlabel]=\"false\">\n      </do-label-text>\n      <do-datatable\n        [api]=\"apiPath\"\n        [columns]=\"columns\"\n        [filterFn]=\"keyword\"\n        [sort]=\"sort\"\n        [reloadFn]=\"reload\"\n        [edit]=\"false\"\n        (onAdd)=\"onAddAssignment()\"\n        (onDelete)=\"onDeleteAssignmentDialog($event, dialogdeleteassignment)\">\n      </do-datatable>\n    </div>\n  </div>\n</do-page-outlet>\n\n<ng-template #dialogdeleteassignment let-data let-ref=\"dialogRef\">\n  <nb-card accent=\"danger\">\n    <nb-card-header>{{ 'Warning' | translate}}</nb-card-header>\n    <nb-card-body>{{ data | translate}}</nb-card-body>\n    <nb-card-footer>\n      <do-button-submit\n        [colLabel]=\"0\"\n        [colButton]=\"12\"\n        [submitTitle]=\"'Delete'\"\n        [resetTitle]=\"'Cancel'\"\n        [disabledButton]=\"disabled\"\n        (onReset)=\"ref.close()\"\n        (onSubmit)=\"onDeleteAssignment(ref)\">\n      </do-button-submit>\n    </nb-card-footer>\n  </nb-card>\n</ng-template>\n", styles: [""], components: [{ type: i2.DoPageOutletComponent, selector: "do-page-outlet", inputs: ["header", "url", "width", "dataSelect", "selected", "param", "hidefooter", "showToggle", "isCollapsed", "iconToggle"], outputs: ["selectChange", "onCollapsed", "onExpanded"] }, { type: i2.DoLabelTextComponent, selector: "do-label-text", inputs: ["colLabel", "colContent", "skeleton", "name", "content", "dividerlabel", "numeric", "label", "nolabel", "required", "showMoreMode", "maxShowMore", "paramError"] }, { type: i2.DoDatatableComponent, selector: "do-datatable", inputs: ["rows", "columns", "filters", "selected", "limit", "count", "offset", "externalPaging", "externalSorting", "loadingIndicator", "scrollbarH", "scrollbarV", "reorderable", "sortType", "messages", "selectionType", "columnMode", "headerHeight", "footerHeight", "rowHeight", "header", "column", "footer", "add", "edit", "delete", "filter", "api", "startWithOpenData", "filterEvent", "formGroupFilter", "sort", "sortsDefault", "autoLoad", "filterFn", "filterDoFetchFn", "reloadFn"], outputs: ["onAdd", "onEdit", "onDelete", "onSearch", "onFilter", "onButtonCell", "onLoading", "onSelected"] }, { type: i3.NbCardComponent, selector: "nb-card", inputs: ["status", "accent", "size"] }, { type: i3.NbCardHeaderComponent, selector: "nb-card-header" }, { type: i3.NbCardBodyComponent, selector: "nb-card-body" }, { type: i3.NbCardFooterComponent, selector: "nb-card-footer" }, { type: i2.DoButtonSubmitComponent, selector: "do-button-submit", inputs: ["colLabel", "colButton", "resetTitle", "submitTitle", "disabledButton", "disabledReset", "type", "status", "skeleton", "formGroupButton"], outputs: ["onSubmit", "onReset"] }], pipes: { "translate": i5.TranslatePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: JobPlacementEditPageComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'do-job-placement-edit-page',
                    styleUrls: ['./job-placement-edit-page.component.scss'],
                    templateUrl: './job-placement-edit-page.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i1.Router }, { type: i2.DoToastrService }, { type: i3.NbDialogService }, { type: i4.JobPlacementService }]; } });
//# sourceMappingURL=data:application/json;base64,