import { Component, Inject, Input } from '@angular/core';
import { API } from '@dongkap/do-core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@nebular/theme";
import * as i3 from "@dongkap/do-shared";
import * as i4 from "@ngx-translate/core";
export class EmployeeProfileEducationFormalPromptComponent {
    constructor(api, formBuilder, ref) {
        this.ref = ref;
        this.action = 'Add';
        this.formGroup = formBuilder.group({
            educationalLevel: [],
            school: [],
            startYear: [],
            endYear: [],
        });
        this.apiSelectEducationalLevel = api['master']['select-parameter'];
        this.paramSelectEducationalLevel = [{
                key: 'parameterGroupCode',
                value: 'EDUCATIONAL_LEVEL',
            }, {
                key: 'parameterCodeNotIn',
                value: 'EDUCATIONAL_LEVEL.NO_EDUCATION',
            }];
    }
    ngOnInit() {
        if (this.education) {
            this.action = 'Edit';
            this.formGroup.get('educationalLevel').setValue({
                label: this.education.educationalLevel,
                value: this.education.educationalLevelCode
            });
            this.formGroup.get('educationalLevel').disable({ onlySelf: true });
            this.formGroup.get('school').setValue(this.education.schoolName);
            this.formGroup.get('startYear').setValue(this.education.startYear);
            this.formGroup.get('endYear').setValue(this.education.endYear);
        }
        else {
            this.action = 'Add';
        }
    }
    onSubmit() {
        var _a, _b;
        const data = {
            education: {
                id: (_a = this.education) === null || _a === void 0 ? void 0 : _a.id,
                educationalLevel: (_b = this.formGroup.get('educationalLevel').value) === null || _b === void 0 ? void 0 : _b.value,
                schoolName: this.formGroup.get('school').value,
                startYear: this.formGroup.get('startYear').value,
                endYear: this.formGroup.get('endYear').value,
            }
        };
        this.ref.close(data);
    }
    onReset() {
        this.ref.close();
    }
}
EmployeeProfileEducationFormalPromptComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: EmployeeProfileEducationFormalPromptComponent, deps: [{ token: API }, { token: i1.FormBuilder }, { token: i2.NbDialogRef }], target: i0.ɵɵFactoryTarget.Component });
EmployeeProfileEducationFormalPromptComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: EmployeeProfileEducationFormalPromptComponent, selector: "do-profile-education-formal-prompt", inputs: { education: "education" }, ngImport: i0, template: "<nb-card class=\"modal-form\">\n  <nb-card-header>\n    {{ 'header.'+action+'-education-formal' | translate }}\n  </nb-card-header>\n  <nb-card-body>\n    <div class=\"row\">\n      <div class=\"col-md-12 col-lg-12\">\n        <form class=\"form-horizontal\" autocomplete=\"on\" [formGroup]=\"formGroup\">\n          <do-select\n            [name]=\"'educationalLevel'\"\n            [label]=\"'Educational Level'\"\n            [placeholder]=\"'Educational Level'\"\n            [required]=\"true\"\n            [api]=\"apiSelectEducationalLevel\"\n            [queryParam]=\"paramSelectEducationalLevel\"\n            [searchable]=\"false\"\n            formControlName=\"educationalLevel\">\n          </do-select>\n          <do-input-text\n            [name]=\"'school'\"\n            [label]=\"'School'\"\n            [placeholder]=\"'School'\"\n            formControlName=\"school\">\n          </do-input-text>\n          <do-input-text\n            [name]=\"'startYear'\"\n            [label]=\"'Start Year'\"\n            [placeholder]=\"'Start Year'\"\n            [type]=\"'number'\"\n            formControlName=\"startYear\">\n          </do-input-text>\n          <do-input-text\n            [name]=\"'endYear'\"\n            [label]=\"'End Year'\"\n            [placeholder]=\"'End Year'\"\n            [type]=\"'number'\"\n            formControlName=\"endYear\">\n          </do-input-text>\n        </form>\n      </div>\n    </div>\n  </nb-card-body>\n  <nb-card-footer>\n    <do-button-submit\n      [submitTitle]=\"action\"\n      [resetTitle]=\"'Cancel'\"\n      [formGroupButton]=\"formGroup\"\n      (onReset)=\"onReset()\"\n      (onSubmit)=\"onSubmit()\">\n    </do-button-submit>\n  </nb-card-footer>\n</nb-card>\n", styles: [".nb-theme-default :host .modal-form{max-width:40rem;width:40rem!important}@media (max-width: 767.98px){.nb-theme-default :host .modal-form{width:100%!important}}.nb-theme-dark :host .modal-form{max-width:40rem;width:40rem!important}@media (max-width: 767.98px){.nb-theme-dark :host .modal-form{width:100%!important}}.nb-theme-cosmic :host .modal-form{max-width:40rem;width:40rem!important}@media (max-width: 767.98px){.nb-theme-cosmic :host .modal-form{width:100%!important}}.nb-theme-corporate :host .modal-form{max-width:40rem;width:40rem!important}@media (max-width: 767.98px){.nb-theme-corporate :host .modal-form{width:100%!important}}\n"], components: [{ type: i2.NbCardComponent, selector: "nb-card", inputs: ["status", "accent", "size"] }, { type: i2.NbCardHeaderComponent, selector: "nb-card-header" }, { type: i2.NbCardBodyComponent, selector: "nb-card-body" }, { type: i3.DoSelectComponent, selector: "do-select", inputs: ["placeholder", "colLabel", "colInput", "items", "multiple", "loading", "addTag", "closeOnSelect", "clearable", "searchable", "hideSelected", "minTermLength", "maxTermLength", "api", "limit", "offsetNextLoad", "queryParam"], outputs: ["onSelect", "onClear"] }, { type: i3.DoInputTextComponent, selector: "do-input-text", inputs: ["placeholder", "colLabel", "colInput", "minLength", "maxLength", "min", "max", "step", "capslock", "type"] }, { type: i2.NbCardFooterComponent, selector: "nb-card-footer" }, { type: i3.DoButtonSubmitComponent, selector: "do-button-submit", inputs: ["colLabel", "colButton", "resetTitle", "submitTitle", "disabledButton", "disabledReset", "type", "status", "skeleton", "formGroupButton"], outputs: ["onSubmit", "onReset"] }], directives: [{ type: i1.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i1.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i1.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i1.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }], pipes: { "translate": i4.TranslatePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: EmployeeProfileEducationFormalPromptComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'do-profile-education-formal-prompt',
                    templateUrl: 'profile-education-formal-prompt.component.html',
                    styleUrls: ['profile-education-formal-prompt.component.scss'],
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [API]
                }] }, { type: i1.FormBuilder }, { type: i2.NbDialogRef }]; }, propDecorators: { education: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,