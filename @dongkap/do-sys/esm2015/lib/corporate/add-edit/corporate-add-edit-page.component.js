import { Component } from '@angular/core';
import { takeUntil } from 'rxjs/operators';
import { ResponseCode, Pattern } from '@dongkap/do-core';
import { BaseFormComponent } from '@dongkap/do-shared';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "../services/corporate.service";
import * as i3 from "@dongkap/do-shared";
import * as i4 from "@angular/forms";
export class CorporateAddEditPageComponent extends BaseFormComponent {
    constructor(injector, router, route, corporateService) {
        super(injector, {
            corporateCode: [],
            corporateName: [],
            corporateNonExpired: [],
            email: [],
            address: [],
            telpNumber: [],
            faxNumber: [],
        });
        this.injector = injector;
        this.router = router;
        this.route = route;
        this.corporateService = corporateService;
        this.action = 'Add';
        this.patternEmail = Pattern.EMAIL;
        this.patternPhoneNumber = Pattern.PHONE_NUMBER;
        this.dataDefault = [
            {
                id: 'corporateNonExpired',
                selected: true,
            },
        ];
        if (this.corporateService.getCorporate() || (this.route.snapshot.params['action'] === 'add')) {
            if ((this.route.snapshot.params['action'] === 'edit')) {
                this.action = 'Edit';
                this.formGroup.get('corporateCode').setValue(this.corporateService.getCorporate().corporateCode);
                this.formGroup.get('corporateName').setValue(this.corporateService.getCorporate().corporateName);
                this.formGroup.get('email').setValue(this.corporateService.getCorporate().email);
                this.formGroup.get('address').setValue(this.corporateService.getCorporate().address);
                this.formGroup.get('telpNumber').setValue(this.corporateService.getCorporate().telpNumber);
                this.formGroup.get('faxNumber').setValue(this.corporateService.getCorporate().faxNumber);
                this.formGroup.get('corporateNonExpired').setValue([{
                        id: 'corporateNonExpired',
                        selected: this.corporateService.getCorporate().corporateNonExpired ? true : false,
                    }]);
                this.formGroup.get('corporateCode').disable();
            }
        }
        else {
            this.router.navigate(['/app/mgmt/corporate']);
        }
    }
    ngOnInit() { }
    onReset() {
        this.router.navigate(['/app/mgmt/corporate']);
    }
    onSubmit() {
        const corporateNonExpired = this.formGroup.get('corporateNonExpired').value;
        const data = {
            corporateCode: this.formGroup.get('corporateCode').value,
            corporateName: this.formGroup.get('corporateName').value,
            corporateNonExpired: (corporateNonExpired ? true : false),
            email: this.formGroup.get('email').value,
            address: this.formGroup.get('address').value,
            telpNumber: this.formGroup.get('telpNumber').value,
            faxNumber: this.formGroup.get('faxNumber').value
        };
        super.onSubmit(data, 'security', 'post-corporate')
            .pipe(takeUntil(this.destroy$))
            .subscribe(response => {
            if (response.respStatusCode === ResponseCode.OK_DEFAULT.toString()) {
                this.router.navigate(['/app/mgmt/corporate']);
            }
        });
    }
}
CorporateAddEditPageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CorporateAddEditPageComponent, deps: [{ token: i0.Injector }, { token: i1.Router }, { token: i1.ActivatedRoute }, { token: i2.CorporateService }], target: i0.ɵɵFactoryTarget.Component });
CorporateAddEditPageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: CorporateAddEditPageComponent, selector: "do-corporate-add-edit-page", usesInheritance: true, ngImport: i0, template: "<do-page-outlet [header]=\"'header.'+action+'-corporate'\" [url]=\"'/app/mgmt/corporate'\">\n  <div class=\"row\" pagecontent>\n    <div class=\"col-md-12 col-lg-12\">\n      <form [formGroup]=\"formGroup\">\n        <do-input-text\n          [name]=\"'corporateCode'\"\n          [label]=\"'Corporate Code'\"\n          [required]=\"true\"\n          [skeleton]=\"loadingForm\"\n          formControlName=\"corporateCode\">\n        </do-input-text>\n        <do-input-text\n          [name]=\"'corporateName'\"\n          [label]=\"'Corporate Name'\"\n          [required]=\"true\"\n          [skeleton]=\"loadingForm\"\n          formControlName=\"corporateName\">\n        </do-input-text>\n        <do-checkbox\n          [name]=\"'corporateNonExpired'\"\n          [label]=\"'Non Expired'\"\n          [data]=\"dataDefault\"\n          formControlName=\"corporateNonExpired\">\n        </do-checkbox>\n        <do-input-text\n          [name]=\"'email'\"\n          [label]=\"'Email'\"\n          [required]=\"true\"\n          [pattern]=\"patternEmail\"\n          [paramError]=\"{value:5}\"\n          [skeleton]=\"loadingForm\"\n          formControlName=\"email\">\n        </do-input-text>\n        <do-textarea\n          [name]=\"'address'\"\n          [label]=\"'Address'\"\n          [required]=\"true\"\n          [minLength]=\"5\"\n          [skeleton]=\"loadingForm\"\n          formControlName=\"address\">\n        </do-textarea>\n        <do-input-text\n          [name]=\"'telpNumber'\"\n          [label]=\"'Telp.'\"\n          [required]=\"true\"\n          [pattern]=\"patternPhoneNumber\"\n          [skeleton]=\"loadingForm\"\n          formControlName=\"telpNumber\">\n        </do-input-text>\n        <do-input-text\n          [name]=\"'faxNumber'\"\n          [label]=\"'Fax.'\"\n          [pattern]=\"patternPhoneNumber\"\n          [skeleton]=\"loadingForm\"\n          formControlName=\"faxNumber\">\n        </do-input-text>\n      </form>\n    </div>\n  </div>\n  <do-button-submit\n    [submitTitle]=\"action\"\n    [resetTitle]=\"'Cancel'\"\n    [formGroupButton]=\"formGroup\"\n    [disabledButton]=\"disabled\"\n    (onReset)=\"onReset()\"\n    (onSubmit)=\"onSubmit()\"\n    pagefooter>\n  </do-button-submit>\n</do-page-outlet>\n", styles: [""], components: [{ type: i3.DoPageOutletComponent, selector: "do-page-outlet", inputs: ["header", "url", "width", "dataSelect", "selected", "param", "hidefooter", "showToggle", "isCollapsed", "iconToggle"], outputs: ["selectChange", "onCollapsed", "onExpanded"] }, { type: i3.DoInputTextComponent, selector: "do-input-text", inputs: ["placeholder", "colLabel", "colInput", "minLength", "maxLength", "min", "max", "step", "capslock", "type", "togglePassword", "showPassword"] }, { type: i3.DoCheckboxComponent, selector: "do-checkbox", inputs: ["colLabel", "colInput", "data"], outputs: ["onChecked"] }, { type: i3.DoTextareaComponent, selector: "do-textarea", inputs: ["placeholder", "colLabel", "colInput", "minLength", "maxLength", "height"] }, { type: i3.DoButtonSubmitComponent, selector: "do-button-submit", inputs: ["colLabel", "colButton", "resetTitle", "submitTitle", "disabledButton", "disabledReset", "type", "status", "skeleton", "formGroupButton"], outputs: ["onSubmit", "onReset"] }], directives: [{ type: i4.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i4.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i4.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i4.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i4.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i4.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { type: i4.PatternValidator, selector: "[pattern][formControlName],[pattern][formControl],[pattern][ngModel]", inputs: ["pattern"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: CorporateAddEditPageComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'do-corporate-add-edit-page',
                    styleUrls: ['./corporate-add-edit-page.component.scss'],
                    templateUrl: './corporate-add-edit-page.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i1.Router }, { type: i1.ActivatedRoute }, { type: i2.CorporateService }]; } });
//# sourceMappingURL=data:application/json;base64,