{"version":3,"file":"dongkap-do-extra.js","sources":["../../../../@dongkap/do-extra/src/lib/password/change-password-page.component.ts","../../../../@dongkap/do-extra/src/lib/password/change-password-page.component.html","../../../../@dongkap/do-extra/src/lib/do-extra.component.ts","../../../../@dongkap/do-extra/src/lib/security/prompt/deactivated-prompt.component.ts","../../../../@dongkap/do-extra/src/lib/security/prompt/deactivated-prompt.component.html","../../../../@dongkap/do-extra/src/lib/security/prompt/deactivated-provider-prompt.component.ts","../../../../@dongkap/do-extra/src/lib/security/prompt/deactivated-provider-prompt.component.html","../../../../@dongkap/do-extra/src/lib/switch-role/switch-role-page.component.ts","../../../../@dongkap/do-extra/src/lib/switch-role/switch-role-page.component.html","../../../../@dongkap/do-extra/src/lib/security/security-page.component.ts","../../../../@dongkap/do-extra/src/lib/security/security-page.component.html","../../../../@dongkap/do-extra/src/lib/settings/settings-page.component.ts","../../../../@dongkap/do-extra/src/lib/settings/settings-page.component.html","../../../../@dongkap/do-extra/src/lib/profile/profile-page.component.ts","../../../../@dongkap/do-extra/src/lib/profile/profile-page.component.html","../../../../@dongkap/do-extra/src/lib/terms/terms-conditions-page.component.ts","../../../../@dongkap/do-extra/src/lib/terms/terms-conditions-page.component.html","../../../../@dongkap/do-extra/src/lib/privacy-policy/privacy-policy-page.component.ts","../../../../@dongkap/do-extra/src/lib/privacy-policy/privacy-policy-page.component.html","../../../../@dongkap/do-extra/src/lib/do-extra-routing.module.ts","../../../../@dongkap/do-extra/src/lib/home/home-page.component.ts","../../../../@dongkap/do-extra/src/lib/home/home-page.component.html","../../../../@dongkap/do-extra/src/lib/do-extra.module.ts","../../../../@dongkap/do-extra/src/public-api.ts","../../../../@dongkap/do-extra/src/dongkap-do-extra.ts"],"sourcesContent":["import { Component, Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport {\n  Pattern,\n  EncryptionService,\n  ResponseCode,\n  OAUTH_INFO,\n  SecurityResourceModel,\n} from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { BaseFormComponent } from '@dongkap/do-shared';\n\n@Component({\n  selector: 'do-change-password-page',\n  styleUrls: ['./change-password-page.component.scss'],\n  templateUrl: './change-password-page.component.html',\n})\nexport class ChangePasswordPageComponent extends BaseFormComponent<any> {\n\n  passwordPattern: string = Pattern.PASSWORD_MEDIUM;\n  private enc: EncryptionService;\n  private oauthResource: SecurityResourceModel;\n\n  constructor(public injector: Injector) {\n    super(injector, {\n      password: [],\n      newPassword: [],\n      confirmPassword: [],\n    });\n    this.enc = injector.get(EncryptionService);\n    this.oauthResource = injector.get(OAUTH_INFO);\n  }\n\n  onSubmit(): void {\n    const data: any = {\n      password: this.enc.encryptAES(this.oauthResource['aes_key'], this.formGroup.get('password').value),\n      newPassword: this.enc.encryptAES(this.oauthResource['aes_key'], this.formGroup.get('newPassword').value),\n      confirmPassword: this.enc.encryptAES(this.oauthResource['aes_key'], this.formGroup.get('confirmPassword').value),\n    };\n    (super.onSubmit(data, 'security', 'change-password') as Observable<ApiBaseResponse>)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((response: ApiBaseResponse) => {\n              if (response) {\n                switch (response.respStatusCode) {\n                  case ResponseCode.ERR_SCR0002.toString():\n                    this.formGroup.controls['password'].setErrors({\n                      incorrect: true,\n                    });\n                    break;\n                  case ResponseCode.ERR_SCR0006.toString():\n                    this.formGroup.controls['newPassword'].setErrors({\n                      equal: true,\n                    });\n                    break;\n                  default:\n                    break;\n                }\n              }\n            });\n  }\n\n}\n","<do-page-outlet [header]=\"'Change Password'\">\n  <form [formGroup]=\"formGroup\" pagecontent>\n    <do-input-text\n      [name]=\"'password'\"\n      [label]=\"'Password'\"\n      [type]=\"'password'\"\n      [required]=\"true\"\n      formControlName=\"password\">\n    </do-input-text>\n    <do-input-text\n      [name]=\"'newPassword'\"\n      [label]=\"'New Password'\"\n      [type]=\"'password'\"\n      [required]=\"true\"\n      [pattern]=\"passwordPattern\"\n      doValidateNotEqual=\"password\"\n      formControlName=\"newPassword\">\n    </do-input-text>\n    <do-input-text\n      [name]=\"'confirmPassword'\"\n      [label]=\"'Confirm Password'\"\n      [type]=\"'password'\"\n      [required]=\"true\"\n      doValidateEqual=\"newPassword\"\n      formControlName=\"confirmPassword\">\n    </do-input-text>\n  </form>\n  <div class=\"offset-sm-3 col-sm-9\" pagefooter>\n    <do-button\n      (onSubmit)=\"onSubmit()\"\n      [name]=\"'Update Password'\"\n      [formGroupButton]=\"formGroup\"\n      [disabledButton]=\"disabled\">\n    </do-button>\n  </div>\n</do-page-outlet>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'do-extra',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class ExtraComponent {\n}\n","import { Component } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'do-deactivated-prompt',\n  templateUrl: 'deactivated-prompt.component.html',\n  styleUrls: ['deactivated-prompt.component.scss'],\n})\nexport class DeactivatedPromptComponent {\n\n  public disabled: boolean = false;\n  public password: string;\n\n  constructor(protected ref: NbDialogRef<DeactivatedPromptComponent>) {\n  }\n\n  submit(password) {\n    this.disabled = true;\n    this.ref.close(password);\n  }\n}\n","<nb-card>\n  <nb-card-header>\n    <h6 class=\"text-danger deactivated-label\">\n        {{ 'Deactivate Account' | translate }}\n    </h6>\n  </nb-card-header>\n  <nb-card-body>\n    <p>\n      {{ 'message.deactivate-form' | translate }}\n    </p>\n    <p>\n      {{ 'message.input-password' | translate }}\n    </p>\n    <input\n      [(ngModel)]=\"password\"\n      type=\"password\"\n      nbInput\n      class=\"deactivated-password\"\n      placeholder=\"{{ 'Password' | translate }}\">\n  </nb-card-body>\n  <nb-card-footer>\n    <button\n      type=\"submit\"\n      status=\"danger\"\n      size=\"large\"\n      class=\"deactivated-button\"\n      [disabled]=\"!password || disabled\"\n      (click)=\"submit(password)\"\n      nbButton>\n      {{ 'message.button-deactivate' | translate }}\n    </button>\n  </nb-card-footer>\n</nb-card>\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { NbDialogRef } from '@nebular/theme';\nimport { Pattern } from '@dongkap/do-core';\n\n@Component({\n  selector: 'do-deactivated-provider-prompt',\n  templateUrl: 'deactivated-provider-prompt.component.html',\n  styleUrls: ['deactivated-provider-prompt.component.scss'],\n})\nexport class DeactivatedProviderPromptComponent {\n\n  public disabled: boolean = false;\n  public patternEmail: string = Pattern.EMAIL;\n\n  public form: FormGroup = new FormGroup({\n    email: new FormControl(),\n  });\n\n  constructor(protected ref: NbDialogRef<DeactivatedProviderPromptComponent>) {\n  }\n\n  submit() {\n    this.disabled = true;\n    this.ref.close(this.form.get('email').value);\n  }\n}\n","<nb-card>\n  <nb-card-header>\n    <h6 class=\"text-danger deactivated-label\">\n        {{ 'Deactivate Account' | translate }}\n    </h6>\n  </nb-card-header>\n  <nb-card-body>\n    <form [formGroup]=\"form\" aria-labelledby=\"title\">\n    <p>\n      {{ 'message.deactivate-form' | translate }}\n    </p>\n    <p>\n      {{ 'message.input-email' | translate }}\n    </p>\n    <input\n      [formControlName]=\"'email'\"\n      type=\"text\"\n      [required]=\"true\"\n      [pattern]=\"patternEmail\"\n      nbInput\n      class=\"deactivated-email\"\n      placeholder=\"Email\">\n    </form>\n  </nb-card-body>\n  <nb-card-footer>\n    <button\n      type=\"submit\"\n      status=\"danger\"\n      size=\"large\"\n      class=\"deactivated-button\"\n      [disabled]=\"!form.valid || disabled\"\n      (click)=\"submit()\"\n      nbButton>\n      {{ 'message.button-deactivate' | translate }}\n    </button>\n  </nb-card-footer>\n</nb-card>\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { AuthIndexedDBService } from '@dongkap/do-auth';\nimport {\n  ApiBaseResponse,\n  HttpBaseModel,\n} from '@dongkap/do-core';\nimport { BaseFormComponent } from '@dongkap/do-shared';\nimport { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'do-switch-role-page',\n  styleUrls: ['./switch-role-page.component.scss'],\n  templateUrl: './switch-role-page.component.html',\n})\nexport class SwitchRolePageComponent extends BaseFormComponent<any> implements OnInit {\n\n  public apiSelectUserRole: HttpBaseModel;\n  private authority: any;\n\n  constructor(\n    public injector: Injector,\n    private authIndexedDB: AuthIndexedDBService) {\n    super(injector, {\n      role: [],\n    });\n    this.apiSelectUserRole = this.api['security']['select-user-role'];\n  }\n\n  ngOnInit(){\n    this.loadingForm = true;\n    this.exec('security', 'get-user-role')\n      .subscribe(\n        (success: any) => {\n          this.loadingForm = false;\n          this.authority = success['authority'];\n          this.formGroup.controls['role'].setValue(success['description']);\n          this.formGroup.markAsPristine();\n        },\n        (error: ApiBaseResponse) => {\n          this.loadingForm = true;\n          if (error.respStatusMessage) {\n            this.toastr.showI18n(error.respStatusMessage[error.respStatusCode], true, null, 'danger');\n          }\n        },\n      );\n  }\n\n  onSubmit(): void {\n    if (this.formGroup.get('role').value['value']) {\n      this.authority = this.formGroup.get('role').value['value'];\n    }\n    this.disabled = true;\n    this.loadingForm = true;\n    const data: any = {\n      authority: this.authority\n    };\n    (super.onSubmit(data, 'security', 'switch-role') as Observable<ApiBaseResponse>)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((response: any) => {\n        if (response) {\n          this.toastr.showI18n('notification.default', true);\n          Promise.all([\n            this.authIndexedDB.putEnc('menus', JSON.stringify(response['main'])),\n            this.authIndexedDB.putEnc('extras', JSON.stringify(response['extra'])),\n          ]).then(() => {\n            this.loadingForm = false;\n            window.location.href = '/app/home';\n          });\n        }\n      });\n  }\n\n}\n","<do-page-outlet [header]=\"'Switch Role'\">\n  <form [formGroup]=\"formGroup\" pagecontent>\n      <do-select\n      [name]=\"'role'\"\n      [label]=\"'Role'\"\n      [required]=\"true\"\n      [searchable]=\"false\"\n      [skeleton]=\"loadingForm\"\n      [api]=\"apiSelectUserRole\"\n      formControlName=\"role\">\n      </do-select>\n  </form>\n  <div class=\"offset-sm-3 col-sm-9\" pagefooter>\n    <do-button\n      (onSubmit)=\"onSubmit()\"\n      [name]=\"'Switch Role'\"\n      [formGroupButton]=\"formGroup\"\n      [disabledButton]=\"disabled\">\n    </do-button>\n  </div>\n</do-page-outlet>\n","import { Component, Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NbDialogService } from '@nebular/theme';\nimport {\n  ResponseCode,\n  OAUTH_INFO,\n  SecurityResourceModel,\n  EncryptionService\n } from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { AuthIndexedDBService, AuthTokenService } from '@dongkap/do-auth';\nimport { BaseFormComponent } from '@dongkap/do-shared';\nimport { DeactivatedPromptComponent } from './prompt/deactivated-prompt.component';\nimport { DeactivatedProviderPromptComponent } from './prompt/deactivated-provider-prompt.component';\n\n@Component({\n  selector: 'do-security-page',\n  styleUrls: ['./security-page.component.scss'],\n  templateUrl: './security-page.component.html',\n})\nexport class SecurityPageComponent extends BaseFormComponent<any> {\n\n  private enc: EncryptionService;\n  private oauthResource: SecurityResourceModel;\n  private authToken: AuthTokenService;\n  public authProvider: boolean = true;\n  public provider: any;\n\n  constructor(\n    public injector: Injector,\n    private dialogService: NbDialogService,\n    private authIndexedDB: AuthIndexedDBService) {\n    super(injector, {\n      password: [],\n    });\n    this.enc = injector.get(EncryptionService);\n    this.oauthResource = injector.get(OAUTH_INFO);\n    this.authToken = injector.get(AuthTokenService);\n    this.authIndexedDB.getEnc('provider').then((value: string) => {\n      this.provider = {\n        value,\n      };\n      if (value === 'local') {\n        this.authProvider = false;\n      }\n    });\n  }\n\n  onSubmit(): void {\n    this.disabled = true;\n    if (this.authProvider) {\n      this.dialogService.open(DeactivatedProviderPromptComponent)\n        .onClose.subscribe((email: string) => {\n          if (email) {\n            this.disabled = true;\n            const data: any = {\n              email,\n              provider: this.provider['value'],\n            };\n            (super.onSubmit(data, 'security', 'deactivated') as Observable<ApiBaseResponse>)\n              .pipe(takeUntil(this.destroy$))\n              .subscribe((response: ApiBaseResponse) => {\n                if (response) {\n                  if (response.respStatusCode === ResponseCode.OK_SCR003.toString()) {\n                    this.authToken.logout();\n                  }\n                }\n              });\n          } else {\n            this.disabled = false;\n          }\n        });\n    } else {\n      this.dialogService.open(DeactivatedPromptComponent)\n        .onClose.subscribe((password: string) => {\n          if (password) {\n            this.disabled = true;\n            const data: any = {\n              password: this.enc.encryptAES(this.oauthResource['aes_key'], password),\n            };\n            (super.onSubmit(data, 'security', 'deactivated') as Observable<ApiBaseResponse>)\n              .pipe(takeUntil(this.destroy$))\n              .subscribe((response: ApiBaseResponse) => {\n                if (response) {\n                  if (response.respStatusCode === ResponseCode.OK_SCR003.toString()) {\n                    this.authToken.logout();\n                  }\n                }\n              });\n          } else {\n            this.disabled = false;\n          }\n        });\n    }\n  }\n\n}\n","<do-change-password-page *ngIf=\"!authProvider\"></do-change-password-page>\n<nb-card *ngIf=\"authProvider\">\n    <nb-card-body>\n        <div class=\"row\">\n            <nb-icon [status]=\"'info'\" [icon]=\"'google'\" class=\"icon-provider\"></nb-icon>\n            <p class=\"text-provider\">\n                {{ 'message.provider' | translate:provider}}\n            </p>\n        </div>\n    </nb-card-body>\n</nb-card>\n<do-switch-role-page></do-switch-role-page>\n<nb-card>\n    <nb-card-body>\n        <div class=\"row\">\n            <div class=\"col-md-3 col-lg-3\">\n                <button\n                    type=\"button\"\n                    status=\"danger\"\n                    size=\"large\"\n                    class=\"deactivated-button\"\n                    [disabled]=\"disabled\"\n                    (click)=\"onSubmit()\"\n                    nbButton fullWidth>\n                    {{ 'Deactivate Account' | translate }}\n                </button>\n            </div>\n            <div class=\"col-md-8 col-lg-8\">\n                <h6 class=\"text-danger deactivated-label\">\n                    {{ 'message.deactivated-account' | translate }}\n                </h6>\n            </div>\n        </div>\n    </nb-card-body>\n</nb-card>\n","import { Component, Injector, Inject } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  IndexedDBEncFactoryService,\n  AUTH_INDEXED_DB,\n  SETTINGS_INDEXED_DB,\n  ResponseCode,\n} from '@dongkap/do-core';\nimport { HttpBaseModel } from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { IndexedDBFactoryService } from '@dongkap/do-core';\nimport { CheckboxModel, BaseFormComponent } from '@dongkap/do-shared';\n\n@Component({\n  selector: 'do-settings-page',\n  styleUrls: ['./settings-page.component.scss'],\n  templateUrl: './settings-page.component.html',\n})\nexport class SettingsPageComponent extends BaseFormComponent<any> implements OnInit {\n\n  public apiSelectLocale: HttpBaseModel;\n  public localeIcon: string;\n  private localeCode: any;\n  private localeIdentifier: any;\n  public dataTheme: CheckboxModel[] = [\n    {\n      id: 'theme',\n      selected: false,\n    },\n  ];\n\n  constructor(\n    public injector: Injector,\n    private translate: TranslateService,\n    private themeService: NbThemeService,\n    @Inject(SETTINGS_INDEXED_DB) private settingsIndexedDB: IndexedDBFactoryService,\n    @Inject(AUTH_INDEXED_DB) private authIndexedDB: IndexedDBEncFactoryService) {\n      super(injector, {\n        locale: [],\n        theme: [],\n      });\n      this.apiSelectLocale = this.api['master']['select-all-locale'];\n    }\n\n  ngOnInit(): void {\n    this.onInit('security', 'get-settings');\n  }\n\n  onInit(serviceName: string, apiName: string): void {\n    this.loadingForm = true;\n    this.exec(serviceName, apiName)\n      .subscribe(\n        (success: any) => {\n          this.loadingForm = false;\n          this.localeCode = success['localeCode'];\n          this.localeIdentifier = success['localeIdentifier'];\n          this.localeIcon = success['localeIcon'] ? success['localeIcon'] : '';\n          this.formGroup.get('locale').setValue({\n            value: this.localeCode,\n            label: this.localeIdentifier\n          });\n          let darkMode: CheckboxModel[] = [{\n            id: 'theme',\n            selected: false,\n          }];\n          if (success['theme'] === 'dark') {\n            darkMode = [{\n              id: 'theme',\n              selected: true,\n            }];\n          }\n          this.formGroup.get('theme').setValue(darkMode);\n          this.formGroup.markAsPristine();\n          this.formGroup.markAsUntouched();\n          this.formGroup.markAsPending();\n        },\n        (error: ApiBaseResponse) => {\n          this.loadingForm = true;\n          if (error.respStatusMessage) {\n            this.toastr.showI18n(error.respStatusMessage[error.respStatusCode], true, null, 'danger');\n          }\n        },\n      );\n  }\n\n  onSubmit() {\n    if (this.formGroup.get('locale')?.value['value']) {\n      this.localeCode = this.formGroup.get('locale')?.value['value'];\n      this.localeIdentifier = this.formGroup.get('locale')?.value['label'];\n      this.localeIcon = this.formGroup.get('locale')?.value['icon'];\n    }\n    let theme: 'dark' | 'default' | 'cosmic' | 'corporate' = 'default';\n    if (this.formGroup.get('theme')?.value) {\n      theme = this.formGroup.get('theme')?.value[0].selected ? 'dark' : 'default';\n    }\n    const data: any = {\n      localeCode: this.localeCode,\n      localeIdentifier: this.localeIdentifier,\n      localeIcon: this.localeIcon,\n      theme,\n    };\n    this.disabled = true;\n    this.initProgress();\n    this.setProgress(65);\n    Promise.all([\n      this.settingsIndexedDB.get('locale'),\n      this.settingsIndexedDB.get('theme'),\n    ]).then((current: any[]) => {\n      this.exec('security', 'change-settings', data).subscribe(\n        (success: ApiBaseResponse) => {\n          this.setProgress(95);\n          this.disabled = false;\n          this.formGroup.markAsPristine();\n          this.formGroup.markAsUntouched();\n          this.formGroup.markAsPending();\n          if (success) {\n            if (success.respStatusCode === ResponseCode.OK_SCR002.toString()) {\n              this.changeTheme(theme);\n              if (current[0] !== this.localeCode) {\n                this.settingsIndexedDB.put('locale', this.localeCode).then(() => {\n                  this.http.HTTP_AUTH(this.api['security']['get-menus']).subscribe(\n                    (menus: any) => {\n                      Promise.all([\n                        this.authIndexedDB.putEnc('menus', JSON.stringify(menus['main'])),\n                        this.authIndexedDB.putEnc('extras', JSON.stringify(menus['extra'])),\n                      ]).then(() => {\n                        this.translate.getTranslation(this.localeCode).subscribe((lang: any) => {\n                          this.translate.use(this.localeCode);\n                          this.translate.setTranslation(this.localeCode, lang, true);\n                          this.toastr.showI18n(success.respStatusMessage[success.respStatusCode], true);\n                        });\n                      });\n                    },\n                    (error: any) => {\n                      this.toastr.showI18n('error.translate', false, null, 'warning');\n                    });\n                });\n              }\n            }\n          }\n          this.doneProgress();\n        },\n        (error: ApiBaseResponse) => {\n            this.disabled = false;\n            this.toastr.showI18n(error.respStatusMessage[error.respStatusCode], true, null, 'danger');\n            this.doneProgress();\n        },\n      );\n    });\n  }\n\n  changeTheme(theme: string) {\n    this.settingsIndexedDB.put('theme', theme).then();\n    this.themeService.changeTheme(theme);\n  }\n\n}\n","<do-page-outlet [header]=\"'Settings'\">\n  <form [formGroup]=\"formGroup\" pagecontent>\n    <do-select\n      [name]=\"'locale'\"\n      [label]=\"'label.language'\"\n      [required]=\"true\"\n      [searchable]=\"false\"\n      [skeleton]=\"loadingForm\"\n      [api]=\"apiSelectLocale\"\n      formControlName=\"locale\">\n      <div *doContentSelect=\"let item\">\n        <span class=\"{{item.icon ? item.icon : localeIcon}}\"></span>\n        <span class=\"label-select\">{{item.label ? item.label : item}}</span>\n      </div>\n    </do-select>\n    <do-checkbox\n      [name]=\"'checkbox'\"\n      [label]=\"'label.dark-mode'\"\n      [data]=\"dataTheme\"\n      [skeleton]=\"loadingForm\"\n      formControlName=\"theme\">\n    </do-checkbox>\n  </form>\n  <div class=\"offset-sm-3 col-sm-9\" pagefooter>\n    <do-button\n      (onSubmit)=\"onSubmit()\"\n      [name]=\"'Update Settings'\"\n      [formGroupButton]=\"formGroup\"\n      [disabledButton]=\"disabled\"\n      [skeleton]=\"loadingForm\">\n    </do-button>\n  </div>\n</do-page-outlet>\n","import { Component, Injector, Inject } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { Validators, FormGroup } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport {\n  PROFILE_INDEXED_DB,\n  ResponseCode,\n  Pattern,\n  USER_SERVICE,\n  UserService,\n} from '@dongkap/do-core';\nimport { HttpBaseModel } from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { IndexedDBFactoryService } from '@dongkap/do-core';\nimport { BaseFormComponent, SelectParamModel, SelectResponseModel } from '@dongkap/do-shared';\nimport { AuthIndexedDBService } from '@dongkap/do-auth';\nimport { ContactUserModel, PersonalInfoModel, ProfileModel } from './profile.model';\n\n@Component({\n  selector: 'do-profile-page',\n  styleUrls: ['./profile-page.component.scss'],\n  templateUrl: './profile-page.component.html',\n})\nexport class ProfilePageComponent extends BaseFormComponent<any> implements OnInit {\n\n  public formGroupImage: FormGroup;\n  public uploadFinished: boolean;\n  public patternEmail: string = Pattern.EMAIL;\n  public patternPhoneNumber: string = Pattern.PHONE_NUMBER;\n  public minLength: number = 5;\n  public disabledUpload: boolean = false;\n  public provider: string = 'local';\n\n  public apiSelectGender: HttpBaseModel;\n  public paramSelectGender: SelectParamModel[];\n\n  public apiSelectCountry: HttpBaseModel;\n\n  public apiSelectProvince: HttpBaseModel;\n  public paramSelectProvince: SelectParamModel[];\n\n  public apiSelectCity: HttpBaseModel;\n  public paramSelectCity: SelectParamModel[];\n\n  public apiSelectDistrict: HttpBaseModel;\n  public paramSelectDistrict: SelectParamModel[];\n\n  public apiSelectSubDistrict: HttpBaseModel;\n  public paramSelectSubDistrict: SelectParamModel[];\n\n  public bloodTypeData: SelectResponseModel[] = [{\n    label: 'A',\n    value: 'A',\n    disabled: false,\n  }, {\n    label: 'B',\n    value: 'B',\n    disabled: false,\n  }, {\n    label: 'AB',\n    value: 'AB',\n    disabled: false,\n  }, {\n    label: 'O',\n    value: 'O',\n    disabled: false,\n  }];\n\n  constructor(\n    public injector: Injector,\n    @Inject(USER_SERVICE) private userService: UserService,\n    @Inject(PROFILE_INDEXED_DB) private profileIndexedDB: IndexedDBFactoryService,\n    private authIndexedDB: AuthIndexedDBService) {\n    super(injector,\n      {\n        username: [{\n          value: null,\n          disabled: true,\n        }],\n        name: [],\n        idNumber: [],\n        placeOfBirth: [],\n        dateOfBirth: [],\n        gender: [],\n        height: [],\n        weight: [],\n        bloodType: [],\n        email: [],\n        phoneNumber: [],\n        address: [null, [Validators.minLength(5)]],\n        country: [],\n        province: [],\n        city: [],\n        district: [],\n        subDistrict: [],\n      });\n    this.formGroupImage = this.formBuilder.group({\n      image: [],\n    });\n    this.apiSelectGender = this.api['master']['select-parameter'];\n    this.apiSelectCountry = this.api['master']['select-country'];\n    this.apiSelectProvince = this.api['master']['select-province'];\n    this.apiSelectCity = this.api['master']['select-city'];\n    this.apiSelectDistrict = this.api['master']['select-district'];\n    this.apiSelectSubDistrict = this.api['master']['select-subdistrict'];\n    this.authIndexedDB.getEnc('provider').then((value: string) => {\n      if (value !== 'local') {\n        this.provider = value;\n        this.formGroup.controls['email'].disable();\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.onInit('profile', 'get-profile');\n    this.profileIndexedDB.get('image-base64').then((image: any) => {\n      this.formGroupImage.get('image').setValue(image);\n      this.formGroupImage.markAsPending();\n    });\n    this.paramSelectGender = [{\n      key: 'parameterGroupCode',\n      value: 'GENDER',\n    }];\n    this.paramSelectProvince = [{\n      key: 'country',\n      value: 'undefined',\n    }];\n    this.paramSelectCity = [{\n      key: 'province',\n      value: 'undefined',\n    }];\n    this.paramSelectDistrict = [{\n      key: 'city',\n      value: 'undefined',\n    }];\n    this.paramSelectSubDistrict = [{\n      key: 'district',\n      value: 'undefined',\n    }];\n  }\n\n  onInit(serviceName: string, apiName: string): void {\n    this.loadingForm = true;\n    this.exec(serviceName, apiName)\n      .subscribe(\n        (success: ProfileModel) => {\n          this.loadingForm = false;\n          this.formGroup.controls['name'].setValue(success.name);\n          this.formGroup.controls['username'].setValue(success.username);\n          this.formGroup.controls['email'].setValue(success.email);\n          if (success?.personalInfo) {\n            this.formGroup.controls['idNumber'].setValue(success?.personalInfo?.idNumber);\n            if (success?.personalInfo?.genderCode) {\n              this.formGroup.controls['gender'].setValue({\n                label: success?.personalInfo.genderValue,\n                value: success?.personalInfo.genderCode\n              });\n            }\n            this.formGroup.controls['placeOfBirth'].setValue(success?.personalInfo?.placeOfBirth);\n            if (success?.personalInfo?.dateOfBirth) {\n              this.formGroup.controls['dateOfBirth'].setValue(success?.personalInfo?.dateOfBirth);\n            }\n            this.formGroup.controls['height'].setValue(success?.personalInfo?.height);\n            this.formGroup.controls['weight'].setValue(success?.personalInfo?.weight);\n            this.formGroup.controls['bloodType'].setValue({\n              value: success?.personalInfo?.bloodType,\n              label: success?.personalInfo?.bloodType,\n            });\n          }\n          if (success?.contact) {\n            if (success?.contact?.address) {\n              this.formGroup.controls['address'].setValue(success?.contact?.address);\n            }\n            if (success?.contact?.phoneNumber) {\n              this.formGroup.controls['phoneNumber'].setValue(success?.contact?.phoneNumber);\n            }\n            if (success?.contact?.country) {\n              this.formGroup.controls['country'].setValue({\n                label: success?.contact?.country,\n                value: success?.contact?.countryCode\n              });\n              this.paramSelectProvince = [\n                {\n                  key: 'country',\n                  value: success?.contact?.countryCode,\n                },\n              ];\n            }\n            if (success?.contact?.province) {\n              this.formGroup.controls['province'].setValue({\n                label: success?.contact?.province,\n                value: success?.contact?.provinceCode\n              });\n              this.paramSelectCity = [\n                {\n                  key: 'province',\n                  value: success?.contact?.provinceCode,\n                },\n              ];\n            }\n            if (success?.contact?.city) {\n              this.formGroup.controls['city'].setValue({\n                label: success?.contact?.city,\n                value: success?.contact?.cityCode\n              });\n              this.paramSelectDistrict = [\n                {\n                  key: 'city',\n                  value: success?.contact?.cityCode,\n                },\n              ];\n            }\n            if (success?.contact?.district) {\n              this.formGroup.controls['district'].setValue({\n                label: success?.contact?.district,\n                value: success?.contact?.districtCode\n              });\n              this.paramSelectSubDistrict = [\n                {\n                  key: 'district',\n                  value: success?.contact?.districtCode,\n                },\n              ];\n            }\n            if (success?.contact?.subDistrict) {\n              this.formGroup.controls['subDistrict'].setValue({\n                label: success?.contact?.subDistrict,\n                value: success?.contact?.subDistrictCode\n              });\n            }\n          }\n          this.authIndexedDB.getEnc('provider').then((value: string) => {\n            if (value !== 'local') {\n              this.provider = value;\n              this.formGroup.controls['email'].disable();\n            }\n          });\n          this.formGroup.markAsPristine();\n        },\n        (error: any | ApiBaseResponse) => {\n          this.loadingForm = true;\n          if (error instanceof HttpErrorResponse) {\n              error = error['error'] as ApiBaseResponse;\n          }\n          this.toastr.showI18n(error.respStatusMessage[error.respStatusCode], true, null, 'danger');\n        });\n  }\n\n  onSelectCountry(select: any): void {\n    this.paramSelectProvince = [\n      {\n        key: 'country',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearProvince();\n  }\n  onSelectProvince(select: any): void {\n    this.paramSelectCity = [\n      {\n        key: 'province',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearProvince();\n  }\n  onSelectCity(select: any): void {\n    this.paramSelectDistrict = [\n      {\n        key: 'city',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearCity();\n  }\n  onSelectDistrict(select: any): void {\n    this.paramSelectSubDistrict = [\n      {\n        key: 'district',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearDistrict();\n  }\n\n  onClearCountry(): void {\n    this.formGroup.patchValue({\n      province: null,\n      city: null,\n      district: null,\n      subDistrict: null,\n    });\n  }\n  onClearProvince(): void {\n    this.formGroup.patchValue({\n      city: null,\n      district: null,\n      subDistrict: null,\n    });\n  }\n  onClearCity(): void {\n    this.formGroup.patchValue({\n      district: null,\n      subDistrict: null,\n    });\n  }\n  onClearDistrict(): void {\n    this.formGroup.patchValue({\n      subDistrict: null,\n    });\n  }\n\n  uploadImage() {\n    const file: any = this.formGroupImage.get('image').value;\n    const data: FormData = new FormData();\n    data.append('photo', file);\n    this.formGroupImage.get('image').disable();\n    this.initProgress();\n    this.setProgress(65);\n    this.exec('profile', 'upload-photo-profile', data).subscribe(\n        (success: ApiBaseResponse) => {\n          this.setProgress(95);\n          this.userService.updatePhoto(success.respStatusMessage['checksum']);\n          this.uploadFinished = true;\n          this.formGroupImage.markAsPristine();\n          this.toastr.showI18n(success.respStatusMessage[success.respStatusCode], true, null, 'success');\n          this.doneProgress();\n        },\n        (error: ApiBaseResponse) => {\n          this.formGroupImage.get('image').enable();\n          this.toastr.showI18n(error.respStatusMessage[error.respStatusCode], true, null, 'danger');\n          this.doneProgress();\n        },\n    );\n  }\n\n  valueSelect(prop: string): string {\n    if (this.formGroup.get(prop).value) {\n      if (this.formGroup.get(prop).value.label) {\n        return this.formGroup.get(prop).value.label;\n      } else {\n        return this.formGroup.get(prop).value;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  valueSelectNonLabel(prop: string): string {\n    if (this.formGroup.get(prop).value) {\n      if (this.formGroup.get(prop).value.value) {\n        return this.formGroup.get(prop).value.value;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  onSubmit() {\n    const contact: ContactUserModel = {\n      phoneNumber: this.formGroup.get('phoneNumber').value,\n      address: this.formGroup.get('address').value,\n      country: this.valueSelect('country'),\n      countryCode: this.valueSelectNonLabel('country'),\n      province: this.valueSelect('province'),\n      provinceCode: this.valueSelectNonLabel('province'),\n      city: this.valueSelect('city'),\n      cityCode: this.valueSelectNonLabel('city'),\n      district: this.valueSelect('district'),\n      districtCode: this.valueSelectNonLabel('district'),\n      subDistrict: this.valueSelect('subDistrict'),\n      subDistrictCode: this.valueSelectNonLabel('subDistrict'),\n    };\n    const personalInfo: PersonalInfoModel = {\n      idNumber: this.formGroup.get('idNumber').value,\n      placeOfBirth: this.formGroup.get('placeOfBirth').value,\n      dateOfBirth: this.formGroup.get('dateOfBirth').value,\n      genderCode: this.valueSelectNonLabel('gender'),\n      genderValue: this.valueSelect('gender'),\n      height: this.formGroup.get('height').value,\n      weight: this.formGroup.get('weight').value,\n      bloodType: this.formGroup.get('bloodType').value?.value,\n    };\n    const data: any = {\n      name: this.formGroup.get('name').value,\n      contact,\n      personalInfo,\n    };\n    if (this.provider === 'local') {\n      data['email'] = this.formGroup.get('email').value;\n    }\n    (super.onSubmit(data, 'profile', 'change-profile') as Observable<ApiBaseResponse>)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((response: ApiBaseResponse) => {\n              if (response) {\n                switch (response.respStatusCode) {\n                  case ResponseCode.ERR_SCR0008.toString():\n                    this.formGroup.controls['email'].setErrors({\n                      email: true,\n                    });\n                    break;\n                  case ResponseCode.ERR_SCR0007A.toString():\n                    this.formGroup.controls['phoneNumber'].setErrors({\n                      'error.pattern.phoneNumber': true,\n                    });\n                    break;\n                  case ResponseCode.OK_SCR004.toString():\n                    this.userService.updateName(this.formGroup.get('name').value);\n                    break;\n                  default:\n                    break;\n                }\n              }\n            });\n  }\n\n}\n","<do-page-outlet [header]=\"'Profile'\">\n  <div class=\"row\" pagecontent>\n    <div class=\"col-md-4 col-lg-4\">\n      <form [formGroup]=\"formGroupImage\">\n        <do-image-upload\n          [radius]=\"50\"\n          [skeleton]=\"loadingForm\"\n          [required]=\"true\"\n          [uploadFn]=\"uploadFinished\"\n          formControlName=\"image\">\n        </do-image-upload>\n        <do-button\n          class=\"upload-bg\"\n          (onSubmit)=\"uploadImage()\"\n          [name]=\"'Upload'\"\n          [formGroupButton]=\"formGroupImage\"\n          [disabledButton]=\"formGroupImage.pristine\"\n          [skeleton]=\"loadingForm\">\n          <nb-icon class=\"upload-icon\" icon=\"cloud-upload-outline\" pack=\"eva\" buttonicon></nb-icon>\n        </do-button>\n      </form>\n    </div>\n    <div class=\"accordion-container col-md-8 col-lg-8\">\n      <form [formGroup]=\"formGroup\">\n        <nb-accordion multi>\n          <nb-accordion-item [expanded]=\"true\">\n            <nb-accordion-item-header>\n              {{'label.account' | translate}}\n            </nb-accordion-item-header>\n            <nb-accordion-item-body>\n              <do-input-text\n                [name]=\"'name'\"\n                [label]=\"'Name'\"\n                [required]=\"true\"\n                [skeleton]=\"loadingForm\"\n                formControlName=\"name\">\n              </do-input-text>\n              <do-input-text\n                [name]=\"'email'\"\n                [label]=\"'Email'\"\n                [required]=\"true\"\n                [pattern]=\"patternEmail\"\n                [paramError]=\"{value:5}\"\n                [skeleton]=\"loadingForm\"\n                formControlName=\"email\">\n              </do-input-text>\n              <do-input-text\n                [name]=\"'username'\"\n                [label]=\"'Username'\"\n                [required]=\"true\"\n                [skeleton]=\"loadingForm\"\n                formControlName=\"username\">\n              </do-input-text>\n            </nb-accordion-item-body>\n          </nb-accordion-item>\n          <nb-accordion-item [expanded]=\"true\">\n            <nb-accordion-item-header>\n              {{'label.personal-info' | translate}}\n            </nb-accordion-item-header>\n            <nb-accordion-item-body>\n              <do-input-text\n                [name]=\"'idNumber'\"\n                [label]=\"'ID Number'\"\n                [required]=\"true\"\n                [skeleton]=\"loadingForm\"\n                formControlName=\"idNumber\">\n              </do-input-text>\n              <do-select\n                [name]=\"'gender'\"\n                [label]=\"'Gender'\"\n                [required]=\"true\"\n                [api]=\"apiSelectGender\"\n                [queryParam]=\"paramSelectGender\"\n                [searchable]=\"false\"\n                [skeleton]=\"loadingForm\"\n                formControlName=\"gender\">\n              </do-select>\n              <do-input-text\n                [name]=\"'placeOfBirth'\"\n                [label]=\"'Place of Birth'\"\n                [required]=\"true\"\n                [skeleton]=\"loadingForm\"\n                formControlName=\"placeOfBirth\">\n              </do-input-text>\n              <do-datepicker\n                [name]=\"'dateOfBirth'\"\n                [label]=\"'Date of Birth'\"\n                [required]=\"true\"\n                [skeleton]=\"loadingForm\"\n                formControlName=\"dateOfBirth\">\n              </do-datepicker>\n              <do-input-text\n                [name]=\"'height'\"\n                [label]=\"'height.body'\"\n                [placeholder]=\"'Centimeter'\"\n                [type]=\"'number'\"\n                [step]=\"'any'\"\n                [skeleton]=\"loadingForm\"\n                formControlName=\"height\">\n              </do-input-text>\n              <do-input-text\n                [name]=\"'weight'\"\n                [label]=\"'weight.body'\"\n                [placeholder]=\"'Kilogram'\"\n                [type]=\"'number'\"\n                [step]=\"'any'\"\n                [skeleton]=\"loadingForm\"\n                formControlName=\"weight\">\n              </do-input-text>\n              <do-select\n                [name]=\"'bloodType'\"\n                [label]=\"'Blood Type'\"\n                [placeholder]=\"'Blood Type'\"\n                [items]=\"bloodTypeData\"\n                [searchable]=\"false\"\n                [skeleton]=\"loadingForm\"\n                formControlName=\"bloodType\">\n              </do-select>\n            </nb-accordion-item-body>\n          </nb-accordion-item>\n          <nb-accordion-item [expanded]=\"true\">\n            <nb-accordion-item-header>\n              {{'label.contact-person' | translate}}\n            </nb-accordion-item-header>\n            <nb-accordion-item-body >\n              <do-input-text\n                [name]=\"'phoneNumber'\"\n                [label]=\"'Telephone'\"\n                [required]=\"true\"\n                [pattern]=\"patternPhoneNumber\"\n                [skeleton]=\"loadingForm\"\n                formControlName=\"phoneNumber\">\n              </do-input-text>\n              <do-textarea\n                [name]=\"'address'\"\n                [label]=\"'Address'\"\n                [required]=\"true\"\n                [minLength]=\"minLength\"\n                [skeleton]=\"loadingForm\"\n                formControlName=\"address\">\n              </do-textarea>\n              <do-select\n                [name]=\"'country'\"\n                [label]=\"'Country'\"\n                [api]=\"apiSelectCountry\"\n                [skeleton]=\"loadingForm\"\n                (onSelect)=\"onSelectCountry($event)\"\n                (onClear)=\"onClearCountry()\"\n                formControlName=\"country\">\n              </do-select>\n              <do-select\n                [name]=\"'province'\"\n                [label]=\"'Province'\"\n                [api]=\"apiSelectProvince\"\n                [queryParam]=\"paramSelectProvince\"\n                [skeleton]=\"loadingForm\"\n                (onSelect)=\"onSelectProvince($event)\"\n                (onClear)=\"onClearProvince()\"\n                formControlName=\"province\">\n              </do-select>\n              <do-select\n                [name]=\"'city'\"\n                [label]=\"'City'\"\n                [api]=\"apiSelectCity\"\n                [queryParam]=\"paramSelectCity\"\n                [skeleton]=\"loadingForm\"\n                (onSelect)=\"onSelectCity($event)\"\n                (onClear)=\"onClearCity()\"\n                formControlName=\"city\">\n              </do-select>\n              <do-select\n                [name]=\"'district'\"\n                [label]=\"'District'\"\n                [api]=\"apiSelectDistrict\"\n                [queryParam]=\"paramSelectDistrict\"\n                [skeleton]=\"loadingForm\"\n                (onSelect)=\"onSelectDistrict($event)\"\n                (onClear)=\"onClearDistrict()\"\n                formControlName=\"district\">\n              </do-select>\n              <do-select\n                [name]=\"'subDistrict'\"\n                [label]=\"'Sub District'\"\n                [api]=\"apiSelectSubDistrict\"\n                [queryParam]=\"paramSelectSubDistrict\"\n                [skeleton]=\"loadingForm\"\n                formControlName=\"subDistrict\">\n              </do-select>\n            </nb-accordion-item-body>\n          </nb-accordion-item>\n        </nb-accordion>\n      </form>\n    </div>\n  </div>\n  <div class=\"offset-sm-6 col-sm-6\" pagefooter>\n    <do-button\n      (onSubmit)=\"onSubmit()\"\n      [name]=\"'Update Profile'\"\n      [disabledButton]=\"disabled\"\n      [formGroupButton]=\"formGroup\"\n      [skeleton]=\"loadingForm\">\n    </do-button>\n  </div>\n</do-page-outlet>\n","import { Component, Injector } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { BaseComponent } from '@dongkap/do-shared';\n\n@Component({\n  selector: 'do-terms-conditions-page',\n  styleUrls: ['./terms-conditions-page.component.scss'],\n  templateUrl: './terms-conditions-page.component.html',\n})\nexport class TermsConditionsPageComponent extends BaseComponent<any> implements OnInit, OnDestroy {\n\n  public content: string;\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(public injector: Injector) {\n    super(injector);\n  }\n\n  ngOnInit(): void {\n    const data: any = {\n      parameterCode: 'TERMS_CONDITIONS.DONGKAP'\n    };\n    this.http.HTTP_AUTH(this.api['master']['parameter'], data)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response: any) => {\n      this.content = response['parameterValue'];\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n}\n","<!-- https://www.privacypolicyonline.com/live.php?token=c7NdqfNju6oyhdnlrnLPdskC3Pft3FuH -->\n<do-page-outlet [header]=\"'header.terms-conditions'\">\n  <div [innerHTML]=\"content\" pagecontent></div>\n</do-page-outlet>\n","import { Component, Injector } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { BaseComponent } from '@dongkap/do-shared';\n\n@Component({\n  selector: 'do-privacy-policy-page-page',\n  styleUrls: ['./privacy-policy-page.component.scss'],\n  templateUrl: './privacy-policy-page.component.html',\n})\nexport class PrivacyPolicyPageComponent extends BaseComponent<any> implements OnInit, OnDestroy {\n\n  public content: string;\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(public injector: Injector) {\n    super(injector);\n  }\n\n  ngOnInit(): void {\n    const data: any = {\n      parameterCode: 'PRIVACY_POLICY.DONGKAP'\n    };\n    this.http.HTTP_AUTH(this.api['master']['parameter'], data)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response: any) => {\n      this.content = response['parameterValue'];\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n}\n","<!-- https://www.privacypolicyonline.com/live.php?token=XnC0EXuhJuJgyXGsOZNL33fGEGwzLvlU -->\n<do-page-outlet [header]=\"'header.privacy-policy'\">\n  <div [innerHTML]=\"content\" pagecontent></div>\n</do-page-outlet>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuardChildService } from '@dongkap/do-auth';\nimport { ExtraComponent } from './do-extra.component';\nimport { SecurityPageComponent } from './security/security-page.component';\nimport { SettingsPageComponent } from './settings/settings-page.component';\nimport { ProfilePageComponent } from './profile/profile-page.component';\nimport { TermsConditionsPageComponent } from './terms/terms-conditions-page.component';\nimport { PrivacyPolicyPageComponent } from './privacy-policy/privacy-policy-page.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: ExtraComponent,\n  canActivateChild: [AuthGuardChildService],\n  children: [\n    {\n      path: 'profile',\n      component: ProfilePageComponent,\n      data: {\n        code: '#PROFILE-PAGE',\n        title: 'Profile',\n      },\n    },\n    {\n      path: 'security',\n      component: SecurityPageComponent,\n      data: {\n        code: '#SECURITY-PAGE',\n      },\n    },\n    {\n      path: 'settings',\n      component: SettingsPageComponent,\n      data: {\n        code: '#SETTINGS-PAGE',\n      },\n    },\n    {\n      path: 'terms',\n      component: TermsConditionsPageComponent,\n      data: {\n        code: '#SETTINGS-PAGE',\n      },\n    },\n    {\n      path: 'privacy-policy',\n      component: PrivacyPolicyPageComponent,\n      data: {\n        code: '#SETTINGS-PAGE',\n      },\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DoExtraRoutingModule {\n}\n","import { Component, Inject } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { PROFILE_INDEXED_DB } from '@dongkap/do-core';\nimport { IndexedDBFactoryService } from '@dongkap/do-core';\n\n@Component({\n  selector: 'do-home-page',\n  styleUrls: ['./home-page.component.scss'],\n  templateUrl: './home-page.component.html',\n})\nexport class HomePageComponent implements OnInit, OnDestroy {\n\n  public name: Promise<string>;\n\n  constructor(@Inject(PROFILE_INDEXED_DB) private profileIndexedDB: IndexedDBFactoryService) {}\n\n  ngOnInit(): void {\n    this.name = this.profileIndexedDB.get('name');\n  }\n\n  ngOnDestroy(): void {}\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-12\">\n    <nb-card>\n      <div class=\"icon-container\">\n        <div class=\"icon status-primary\">\n          <i [ngClass]=\"'nb-home'\"></i>\n        </div>\n      </div>\n      <div class=\"details\">\n        <div class=\"title h5\">{{'Welcome' | translate}}</div>\n        <div class=\"paragraph-2\">{{'Hi' | translate}}, <strong>{{name | async}}</strong>!</div>\n      </div>\n    </nb-card>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NbCardModule, NbDialogModule, NbAlertModule, NbIconModule, NbButtonModule, NbAccordionModule } from '@nebular/theme';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DoThemeModule } from '@dongkap/do-theme';\nimport {\n  DoInputModule,\n  DoButtonModule,\n  DoBaseModule,\n  DoCheckBoxModule,\n  DoEditorModule,\n  DoSelectModule,\n  DoDatePickerModule,\n  DoImageModule,\n} from '@dongkap/do-shared';\nimport { ChangePasswordPageComponent } from './password/change-password-page.component';\nimport { ExtraComponent } from './do-extra.component';\nimport { DoExtraRoutingModule } from './do-extra-routing.module';\nimport { SecurityPageComponent } from './security/security-page.component';\nimport { DeactivatedPromptComponent } from './security/prompt/deactivated-prompt.component';\nimport { SettingsPageComponent } from './settings/settings-page.component';\nimport { ProfilePageComponent } from './profile/profile-page.component';\nimport { HomePageComponent } from './home/home-page.component';\nimport { TermsConditionsPageComponent } from './terms/terms-conditions-page.component';\nimport { PrivacyPolicyPageComponent } from './privacy-policy/privacy-policy-page.component';\nimport { DeactivatedProviderPromptComponent } from './security/prompt/deactivated-provider-prompt.component';\nimport { SwitchRolePageComponent } from './switch-role/switch-role-page.component';\n\nconst EXTRA_COMPONENTS = [\n  ExtraComponent,\n  ChangePasswordPageComponent,\n  DeactivatedPromptComponent,\n  DeactivatedProviderPromptComponent,\n  SecurityPageComponent,\n  SettingsPageComponent,\n  ProfilePageComponent,\n  HomePageComponent,\n  TermsConditionsPageComponent,\n  PrivacyPolicyPageComponent,\n  SwitchRolePageComponent,\n];\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    NbCardModule,\n    NbAlertModule,\n    NbIconModule,\n    NbButtonModule,\n    NbAccordionModule,\n    NbDialogModule.forChild(),\n    DoThemeModule,\n    DoInputModule,\n    DoCheckBoxModule,\n    DoButtonModule,\n    DoBaseModule,\n    DoEditorModule,\n    DoSelectModule,\n    DoDatePickerModule,\n    DoImageModule,\n    DoExtraRoutingModule,\n  ],\n  declarations: [\n    ...EXTRA_COMPONENTS,\n  ],\n})\nexport class DoExtraModule { }\n","/*\n * Public API Surface of do-extra\n */\n\nexport * from './lib/do-extra.module';\n\nexport { HomePageComponent } from './lib/home/home-page.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}