import { Injector, EventEmitter } from '@angular/core';
import { ColumnMode, SelectionType, SortType } from '@swimlane/ngx-datatable';
import { Page, DatatableColumn } from '../models/datatable.model';
import * as i0 from "@angular/core";
export declare class DoDatatableBaseComponent {
    locale: string;
    injector: Injector;
    rows: any[];
    selected: any[];
    limit: number | undefined;
    count: number;
    offset: number;
    externalPaging: boolean;
    externalSorting: boolean;
    loadingIndicator: boolean;
    scrollbarH: boolean;
    scrollbarV: boolean;
    reorderable: boolean;
    sortType: SortType;
    sortsDefault: any[];
    messages: any;
    selectionType: SelectionType;
    columnMode: ColumnMode;
    headerHeight: any;
    footerHeight: any;
    rowHeight: number | 'auto' | ((row?: any) => number);
    header: boolean;
    column: boolean;
    footer: boolean;
    add: boolean;
    edit: boolean;
    delete: boolean;
    filter: boolean;
    startWithOpenData: boolean;
    page: EventEmitter<Page>;
    sort: EventEmitter<any>;
    select: EventEmitter<any>;
    activate: EventEmitter<any>;
    onButtonCell: EventEmitter<any>;
    private cols;
    set columns(val: DatatableColumn[]);
    get columns(): DatatableColumn[];
    constructor(locale: string, injector: Injector);
    setPage(page: Page): void;
    onSort(order: any): void;
    onSelect(selected: any): void;
    onActivate(event: any): void;
    sanitizedValue(value: any): any;
    stripHtml(html: string): string;
    onClickButton(event: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DoDatatableBaseComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DoDatatableBaseComponent, "do-datatable-base", never, { "rows": "rows"; "selected": "selected"; "limit": "limit"; "count": "count"; "offset": "offset"; "externalPaging": "externalPaging"; "externalSorting": "externalSorting"; "loadingIndicator": "loadingIndicator"; "scrollbarH": "scrollbarH"; "scrollbarV": "scrollbarV"; "reorderable": "reorderable"; "sortType": "sortType"; "sortsDefault": "sortsDefault"; "messages": "messages"; "selectionType": "selectionType"; "columnMode": "columnMode"; "headerHeight": "headerHeight"; "footerHeight": "footerHeight"; "rowHeight": "rowHeight"; "header": "header"; "column": "column"; "footer": "footer"; "add": "add"; "edit": "edit"; "delete": "delete"; "filter": "filter"; "startWithOpenData": "startWithOpenData"; "columns": "columns"; }, { "page": "page"; "sort": "sort"; "select": "select"; "activate": "activate"; "onButtonCell": "onButtonCell"; }, never, never>;
}
