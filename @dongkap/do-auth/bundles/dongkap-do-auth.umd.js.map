{"version":3,"file":"dongkap-do-auth.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../@dongkap/do-auth/src/lib/pages/layout/auth-block/auth-block.component.ts","../../../../@dongkap/do-auth/src/lib/pages/layout/auth.component.ts","../../../../@dongkap/do-auth/src/lib/pages/layout/auth.component.html","../../../../@dongkap/do-auth/src/lib/do-layout-auth.module.ts","../../../../@dongkap/do-auth/src/lib/services/storage/auth-indexeddb.service.ts","../../../../@dongkap/do-auth/src/lib/services/storage/profile-indexeddb.service.ts","../../../../@dongkap/do-auth/src/lib/services/storage/settings-indexeddb.service.ts","../../../../@dongkap/do-auth/src/lib/services/auth-token.service.ts","../../../../@dongkap/do-auth/src/lib/services/unauth-guard.service.ts","../../../../@dongkap/do-auth/src/lib/services/auth-guard.service.ts","../../../../@dongkap/do-auth/src/lib/pages/terms-conditions/terms-conditions.component.ts","../../../../@dongkap/do-auth/src/lib/pages/terms-conditions/terms-conditions.component.html","../../../../@dongkap/do-auth/src/lib/services/auth-force.service.ts","../../../../@dongkap/do-auth/src/lib/pages/login/login-page.component.ts","../../../../@dongkap/do-auth/src/lib/pages/login/login-page.component.html","../../../../@dongkap/do-auth/src/lib/pages/logout/logout.component.ts","../../../../@dongkap/do-auth/src/lib/pages/logout/logout.component.html","../../../../@dongkap/do-auth/src/lib/pages/force/force-login-page.component.ts","../../../../@dongkap/do-auth/src/lib/pages/force/force-login-page.component.html","../../../../@dongkap/do-auth/src/lib/pages/forgot/request-forgot-page.component.ts","../../../../@dongkap/do-auth/src/lib/pages/forgot/request-forgot-page.component.html","../../../../@dongkap/do-auth/src/lib/pages/forgot/forgot-page.component.ts","../../../../@dongkap/do-auth/src/lib/pages/forgot/forgot-page.component.html","../../../../@dongkap/do-auth/src/lib/pages/register/register-page.component.ts","../../../../@dongkap/do-auth/src/lib/pages/register/register-page.component.html","../../../../@dongkap/do-auth/src/lib/pages/activate-account/activate-account-page.component.ts","../../../../@dongkap/do-auth/src/lib/pages/activate-account/activate-account-page.component.html","../../../../@dongkap/do-auth/src/lib/pages/oauth2/oauth2-callback.component.ts","../../../../@dongkap/do-auth/src/lib/pages/oauth2/oauth2-callback.component.html","../../../../@dongkap/do-auth/src/lib/do-auth-routing.module.ts","../../../../@dongkap/do-auth/src/lib/services/auth-guard-child.service.ts","../../../../@dongkap/do-auth/src/lib/services/auth-lang.service.ts","../../../../@dongkap/do-auth/src/lib/services/auth-signature.service.ts","../../../../@dongkap/do-auth/src/lib/services/auth-user.service.ts","../../../../@dongkap/do-auth/src/lib/services/http-error.handler.ts","../../../../@dongkap/do-auth/src/lib/services/http-interceptor-error.service.ts","../../../../@dongkap/do-auth/src/lib/services/http-interceptor-lang.service.ts","../../../../@dongkap/do-auth/src/lib/services/http-interceptor-signature.service.ts","../../../../@dongkap/do-auth/src/lib/services/http-interceptor-token.service.ts","../../../../@dongkap/do-auth/src/lib/do-auth.module.ts","../../../../@dongkap/do-auth/src/lib/pages/404/404.component.ts","../../../../@dongkap/do-auth/src/lib/pages/404/404.component.html","../../../../@dongkap/do-auth/src/lib/miscellaneous-routing.module.ts","../../../../@dongkap/do-auth/src/lib/miscellaneous.module.ts","../../../../@dongkap/do-auth/src/public-api.ts","../../../../@dongkap/do-auth/src/dongkap-do-auth.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'do-auth-block',\n  styleUrls: ['auth-block.component.scss'],\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class AuthBlockComponent {\n\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'do-auth',\n  styleUrls: ['auth.component.scss'],\n  templateUrl: 'auth.component.html',\n})\nexport class AuthComponent implements OnDestroy {\n\n    alive: boolean;\n    subscription: any;\n    authenticated: boolean;\n    token: string;\n\n    constructor(private location: Location) {}\n\n    public back(): boolean {\n        this.location.back();\n        return false;\n    }\n\n    ngOnDestroy(): void {\n        this.alive = false;\n    }\n\n}\n","<nb-layout>\n    <nb-layout-column>\n        <nb-card>\n            <nb-card-header>\n                <nav class=\"navigation\">\n                    <a href=\"#\" (click)=\"back()\" class=\"link back-link\" aria-label=\"Back\" tabindex=\"-1\">\n                        <nb-icon icon=\"arrow-back\"></nb-icon>\n                    </a>\n                </nav>\n            </nb-card-header>\n            <nb-card-body>\n                <do-auth-block>\n                    <router-outlet></router-outlet>\n                </do-auth-block>\n            </nb-card-body>\n        </nb-card>\n    </nb-layout-column>\n</nb-layout>","import { NgModule } from '@angular/core';\nimport {\n  NbCardModule,\n  NbLayoutModule,\n  NbIconModule,\n} from '@nebular/theme';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { DoThemeModule } from '@dongkap/do-theme';\nimport { AuthComponent } from './pages/layout/auth.component';\nimport { AuthBlockComponent } from './pages/layout/auth-block/auth-block.component';\n\n@NgModule({\n  declarations: [\n    AuthComponent,\n    AuthBlockComponent,\n  ],\n  imports: [\n    NbLayoutModule,\n    NbCardModule,\n    NbIconModule,\n    CommonModule,\n    HttpClientModule,\n    RouterModule,\n    DoThemeModule,\n  ],\n  exports: [\n    AuthComponent,\n    AuthBlockComponent,\n  ],\n})\nexport class DoLayoutAuthModule {}\n","import { Injectable, Injector } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { StoreKey } from 'idb';\nimport {\n  additionalInfoModels,\n  IndexedDBEncFactoryService,\n  IndexedDBService,\n  oauthInfo,\n  oauthInfoModels,\n  TypeDataOauth,\n} from '@dongkap/do-core';\nimport { AuthIDB } from '../../models/auth.schema';\n\n@Injectable({providedIn : 'root'})\nexport class AuthIndexedDBService extends IndexedDBService<AuthIDB> implements IndexedDBEncFactoryService {\n\n  constructor(injector: Injector) {\n      super(injector, 'do-core', 1, '#do-auth');\n  }\n\n  public async getEnc(key, storeName?: any): Promise<AuthIDB['#do-auth']['value']> {\n    const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n    return ((await this.$dbPromise).get(storeName ? storeName : '#do-auth', keyEncrypted)).then((value: any) => {\n      return this.enc.decryptAES(this.oauthResource['aes_key'], value);\n    });\n  }\n  public async putEnc(key, val, storeName?: any): Promise<StoreKey<AuthIDB, any>> {\n    const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n    const valueEncrypted = this.enc.encryptAES(this.oauthResource['aes_key'], val);\n    return (await this.$dbPromise).put(storeName ? storeName : '#do-auth', valueEncrypted, keyEncrypted);\n  }\n  public async removeEnc(key, storeName?: any): Promise<void> {\n    const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n    return (await this.$dbPromise).delete(storeName ? storeName : '#do-auth', keyEncrypted);\n  }\n\n  public getOfEnc(key, storeName?: any): Observable<any> {\n    const result$: Subject<any> = new Subject<any>();\n    this.getEnc(key, storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n  public putOfEnc(key, val, storeName?: any): Observable<any> {\n    const result$: Subject<any> = new Subject<any>();\n    this.putEnc(key, val, storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n  public removeOfEnc(key, storeName?: any): Observable<void> {\n    const result$: Subject<any> = new Subject<any>();\n    this.removeEnc(key, storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n\n  public loginStorage(response: any): void {\n    oauthInfoModels.forEach(data => {\n      if (response[data.key]) {\n        if (data.type === TypeDataOauth.OAUTH && data.persist) {\n          if (data.enc) {\n            this.putEnc(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          } else {\n            this.put(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          }\n        }\n      }\n    });\n  }\n\n  public logout(): void {\n    oauthInfoModels.forEach(data => {\n      if (data.enc) {\n        if (data.type === TypeDataOauth.OAUTH) {\n          this.removeEnc(data.key).then();\n        }\n      }\n    });\n    additionalInfoModels.forEach(data => {\n      if (data.enc) {\n        if (data.type === TypeDataOauth.OAUTH) {\n          this.removeEnc(data.key).then();\n        }\n      }\n    });\n  }\n\n  public async isLogin(): Promise<boolean> {\n      if (await this.getEnc(oauthInfo.access_token)) {\n        return true;\n      }\n      oauthInfoModels.forEach(data => {\n        this.removeEnc(data.key).then();\n      });\n      return false;\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport {\n  additionalInfoModels,\n  IndexedDBFactoryService,\n  IndexedDBService,\n  oauthInfoModels,\n  TypeDataOauth,\n} from '@dongkap/do-core';\nimport { ProfileIDB } from '../../models/profile.schema';\n\n@Injectable({providedIn : 'root'})\nexport class ProfileIndexedDBService extends IndexedDBService<ProfileIDB> implements IndexedDBFactoryService {\n\n  constructor(injector: Injector) {\n    super(injector, 'do-core', 1, '#do-profile');\n  }\n\n  public loginStorage(response: any): void {\n    oauthInfoModels.forEach(data => {\n        if (response[data.key]) {\n          if (data.type === TypeDataOauth.PROFILE && data.persist) {\n            this.put(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          }\n        }\n    });\n  }\n\n  public logout(): void {\n    oauthInfoModels.forEach(data => {\n      if (data.type === TypeDataOauth.PROFILE) {\n        this.remove(data.key);\n      }\n    });\n    additionalInfoModels.forEach(data => {\n      if (data.type === TypeDataOauth.PROFILE) {\n        this.remove(data.key);\n      }\n    });\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  IndexedDBFactoryService,\n  IndexedDBService,\n  oauthInfoModels,\n  TypeDataOauth,\n} from '@dongkap/do-core';\nimport { SettingsIDB } from '../../models/settings.schema';\n\n@Injectable({providedIn : 'root'})\nexport class SettingsIndexedDBService extends IndexedDBService<SettingsIDB> implements IndexedDBFactoryService {\n\n  private translate: TranslateService;\n\n  constructor(injector: Injector) {\n    super(injector, 'do-core', 1, '#do-settings');\n    this.translate = injector.get(TranslateService);\n  }\n\n  public loginStorage(response: any): void {\n    oauthInfoModels.forEach(data => {\n      if (response[data.key]) {\n        if (data.type === TypeDataOauth.SETTINGS && data.persist) {\n          this.put(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          if (data.key === 'locale') {\n            this.translate.getTranslation(response[data.key]).subscribe((lang: any) => {\n              this.translate.use(response[data.key]);\n              this.translate.setTranslation(response[data.key], lang, true);\n            });\n          }\n        }\n      }\n    });\n  }\n\n}\n","import { Injectable, Inject, OnDestroy } from '@angular/core';\nimport { HttpHeaders, HttpResponse, HttpRequest } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { map, switchMap, takeUntil } from 'rxjs/operators';\nimport { Idle, DEFAULT_INTERRUPTSOURCES } from '@ng-idle/core';\nimport {\n    API,\n    APIModel,\n    HttpFactoryService,\n    HTTP_SERVICE,\n    oauthInfo,\n    OAUTH_INFO,\n    SecurityResourceModel,\n    signatureHeader,\n} from '@dongkap/do-core';\nimport { AuthIndexedDBService } from './storage/auth-indexeddb.service';\nimport { ProfileIndexedDBService } from './storage/profile-indexeddb.service';\nimport { SettingsIndexedDBService } from './storage/settings-indexeddb.service';\n\n@Injectable()\nexport class AuthTokenService implements OnDestroy {\n\n    private timer: any;\n    protected destroy$: Subject<any> = new Subject<any>();\n\n    constructor(\n        @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n        @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n        @Inject(API)private apiPath: APIModel,\n        private router: Router,\n        private authIndexedDB: AuthIndexedDBService,\n        private profileIndexedDB: ProfileIndexedDBService,\n        private settingsIndexedDB: SettingsIndexedDBService,\n        private idle: Idle) {\n        idle.setIdle(oauthResource['session_idle']);\n        idle.setTimeout(oauthResource['session_timeout']);\n        idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\n        idle.onTimeout.subscribe(() => {\n            /* console.log('[Dongkap] Session Timeout'); */\n            this.logout();\n        });\n        idle.onIdleEnd.subscribe(() => {\n            /* console.log('[Dongkap] Session Idle End'); */\n        });\n    }\n\n    ngOnDestroy(): void {\n        clearInterval(this.timer);\n        this.destroy$.next(true);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public login(username: string, password: string): Promise<any> {\n        this.authIndexedDB.logout();\n        return this.httpBaseService.\n        HTTP_BASE(this.apiPath['auth']['token'],\n            this.getAuthBody(username, password).toString(),\n            this.getAuthHeader())\n                .pipe(takeUntil(this.destroy$))\n                .toPromise()\n                .then((response: HttpResponse<any>) => {\n                    this.idle.setIdle(+response['expires_in']);\n                    this.idle.watch();\n                    /* console.log('[DONGKAP] Session Idle Start'); */\n                    /* console.log('[DONGKAP] Session Timeout in ' + response['expires_in'] + ' seconds'); */\n                    this.authIndexedDB.loginStorage(response);\n                    this.profileIndexedDB.loginStorage(response);\n                    this.settingsIndexedDB.loginStorage(response);\n                });\n    }\n\n    public force(username: string, password: string): Promise<any> {\n        this.authIndexedDB.logout();\n        return this.httpBaseService.\n        HTTP_BASE(this.apiPath['auth']['force'],\n            this.getAuthBody(username, password).toString(),\n            this.getAuthHeader())\n                .pipe(takeUntil(this.destroy$))\n                .toPromise()\n                .then((response: HttpResponse<any>) => {\n                    this.idle.setIdle(+response['expires_in']);\n                    this.idle.watch();\n                    /* console.log('[DONGKAP] Session Idle Start'); */\n                    /* console.log('[DONGKAP] Session Timeout in ' + response['expires_in'] + ' seconds'); */\n                    this.authIndexedDB.loginStorage(response);\n                    this.profileIndexedDB.loginStorage(response);\n                    this.settingsIndexedDB.loginStorage(response);\n                });\n    }\n\n    public refresh(): Observable<any> {\n        return this.getBodyRefresh().pipe(switchMap((body: any) => {\n            return this.httpBaseService.\n            HTTP_BASE(this.apiPath['auth']['token'],\n                body,\n                this.getAuthHeader())\n                .pipe(takeUntil(this.destroy$))\n                .pipe(map((response: any) => {\n                    this.idle.setIdle(response['expires_in']);\n                    this.authIndexedDB.logout();\n                    this.authIndexedDB.loginStorage(response);\n                }));\n        }));\n    }\n\n    public logout() {\n        this.timer = setInterval(() => {\n            this.doLogout();\n        }, 5000);\n        this.httpBaseService.HTTP_AUTH(this.apiPath['security']['revoke'])\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n                this.doLogout();\n            });\n    }\n\n    private doLogout() {\n        this.authIndexedDB.logout();\n        this.profileIndexedDB.logout();\n        clearInterval(this.timer);\n        this.idle.stop();\n        this.router.navigate(['/auth']);\n    }\n\n    public async isLogin(): Promise<boolean> {\n        return await this.authIndexedDB.isLogin();\n    }\n\n    public oauthHeaders(request: HttpRequest<any>): Observable<HttpRequest<any>> {\n        const result$: Subject<HttpRequest<any>> = new Subject<HttpRequest<any>>();\n        let httpHeaders: HttpHeaders = request.headers ? request.headers : new HttpHeaders();\n        httpHeaders = httpHeaders.has(signatureHeader.authorization) ?\n                        httpHeaders.delete(signatureHeader.authorization) : httpHeaders;\n        Promise.all([\n            this.authIndexedDB.getEnc(oauthInfo.token_type),\n            this.authIndexedDB.getEnc(oauthInfo.access_token)])\n        .then((value: string[]) => {\n            httpHeaders = httpHeaders.set(signatureHeader.authorization, value[0] + ' ' + value[1]);\n            result$.next(request.clone({ headers: httpHeaders }));\n        });\n        return result$.asObservable();\n    }\n\n    private getAuthHeader(): HttpHeaders {\n        return new HttpHeaders({\n            'Content-Type': 'application/x-www-form-urlencoded',\n            Authorization: 'Basic ' +\n                btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n            Accept: 'application/json',\n        });\n    }\n\n    private getAuthBody(username: string, password: string): URLSearchParams {\n        const body = new URLSearchParams();\n        body.append('client_id', this.oauthResource['client_id']);\n        body.append('grant_type', this.oauthResource['grant_type']);\n        body.append('username', username);\n        body.append('password', password);\n        body.append('platform', 'web');\n        return body;\n    }\n\n    private getBodyRefresh(): Observable<string> {\n        const result$: Subject<string> = new Subject<string>();\n        this.authIndexedDB.getEnc(oauthInfo.refresh_token).then((value: string) => {\n            const body: URLSearchParams = new URLSearchParams();\n            body.append('client_id', this.oauthResource['client_id']);\n            body.append('grant_type', 'refresh_token');\n            body.append('refresh_token', value);\n            result$.next(body.toString());\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { RouterStateSnapshot } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { CanActivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { AuthTokenService } from './auth-token.service';\n\n@Injectable()\nexport class UnauthorizeGuardService implements CanActivate {\n    constructor(private router: Router, private authTokenService: AuthTokenService) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n        const result$: Subject<boolean> = new Subject<boolean>();\n        this.authTokenService.isLogin().then((value: boolean) => {\n            result$.next(!value);\n            if (value) {\n                this.router.navigate(['/app']);\n            }\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { RouterStateSnapshot } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { CanActivate } from '@angular/router';\nimport { Injectable, Inject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { UserService, USER_SERVICE } from '@dongkap/do-core';\nimport { AuthTokenService } from './auth-token.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n    constructor(\n        private router: Router,\n        private authTokenService: AuthTokenService,\n        @Inject(USER_SERVICE) private authService: UserService) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n        const result$: Subject<boolean> = new Subject<boolean>();\n        this.authTokenService.isLogin().then((value: boolean) => {\n            result$.next(value);\n            if (!value) {\n                this.router.navigate(['/auth']);\n            } else {\n                if (state.url !== '/auth/logout') {\n                    this.authService.loadUser();\n                }\n            }\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'do-terms-conditions',\n  templateUrl: 'terms-conditions.component.html',\n  styleUrls: ['terms-conditions.component.scss'],\n})\nexport class TermsConditionsComponent {\n\n  @Input() content: string;\n  @Input() action: 'Agree' | 'Close' = 'Agree';\n\n  constructor(protected ref: NbDialogRef<TermsConditionsComponent>) {\n  }\n\n  submit() {\n    this.ref.close(true);\n  }\n}\n","<nb-card [size]=\"'medium'\">\n  <nb-card-header>\n    <h2>\n      <strong>\n        {{ 'header.terms-conditions' | translate }}\n      </strong>\n    </h2>\n  </nb-card-header>\n  <nb-card-body>\n    <div [innerHTML]=\"content\"></div>\n  </nb-card-body>\n  <nb-card-footer>\n    <button\n      type=\"submit\"\n      status=\"primary\"\n      size=\"large\"\n      class=\"terms-button\"\n      (click)=\"submit()\"\n      nbButton>\n      {{ action | translate }}\n    </button>\n  </nb-card-footer>\n</nb-card>\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthForceService {\n\n    private user: string;\n    private pass: string;\n\n    public isEmpty(): boolean {\n        return (this.user && this.pass) ? false: true;\n    }\n\n    public setData(user: string, pass: string) {\n        this.user = user;\n        this.pass = pass;\n    }\n\n    public get username(): string {\n        return this.user;\n    }\n\n    public get password(): string {\n        return this.pass;\n    }\n\n}\n","import { Component, Inject } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NbAuthSocialLink } from '@nebular/auth';\nimport { NbDialogService } from '@nebular/theme';\nimport {\n  API,\n  HTTP_SERVICE,\n  OAUTH_INFO,\n  ResponseCode,\n} from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { APIModel } from '@dongkap/do-core';\nimport { HttpFactoryService } from '@dongkap/do-core';\nimport { SecurityResourceModel } from '@dongkap/do-core';\nimport { AuthTokenService } from '../../services/auth-token.service';\nimport { AuthForceService } from '../../services/auth-force.service';\nimport { TermsConditionsComponent } from '../terms-conditions/terms-conditions.component';\n\n@Component({\n    selector: 'do-login-page',\n    styleUrls: ['login-page.component.scss'],\n    templateUrl: 'login-page.component.html',\n})\nexport class LoginPageComponent implements OnDestroy {\n\n  public responseError: any;\n  public responseErrorCode: any;\n  public buttonLogin: boolean = false;\n  public showPassword: boolean = false;\n  public icon: string = 'eye-outline';\n  private progress: number = 25;\n  protected progressDOM: HTMLElement;\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  public formGroup: FormGroup = new FormGroup({\n    username: new FormControl(),\n    password: new FormControl(),\n  });\n\n  private urlAuthorizeGoogle: string = this.httpBaseService.API(this.apiPath['auth']['authorize']) +\n    '/google?redirect_uri=' +\n    `${document.getElementsByTagName('base')[0].href}auth/callback`;\n\n  public socialLinks: NbAuthSocialLink[] = [\n    {\n      url: this.urlAuthorizeGoogle,\n      target: '_self',\n      icon: 'google',\n    }\n  ];\n\n  constructor(\n    private router: Router,\n    private dialogService: NbDialogService,\n    private translate: TranslateService,\n    private authTokenService: AuthTokenService,\n    private authForceService: AuthForceService,\n    @Inject(API) private apiPath: APIModel,\n    @Inject(HTTP_SERVICE) private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    route: ActivatedRoute) {\n    if (route.snapshot.queryParams['error']) {\n      this.responseError = 'error.' + route.snapshot.queryParams['error'];\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n  public login() {\n    if (!this.formGroup.invalid) {\n      this.initProgress();\n      if (this.progress < 35) {\n        this.setProgress(this.progress = 35);\n      }\n      this.buttonLogin = true;\n      this.authTokenService.login(\n        this.formGroup.get('username').value,\n        this.formGroup.get('password').value)\n        .then(() => {\n          this.setProgress(this.progress = 95);\n          this.progress = 0;\n          this.responseError = null;\n          this.router.navigate(['/app/home']);\n        })\n        .catch((error: any) => {\n          try {\n            if (error instanceof HttpErrorResponse) {\n              error = error['error'] as ApiBaseResponse;\n            }\n            const response: ApiBaseResponse = (error as ApiBaseResponse);\n            this.responseErrorCode = response?.respStatusCode;\n            this.responseError = response?.respStatusMessage[response?.respStatusCode];\n          } catch (error) {\n            this.responseError = 'error.500';\n          }\n          this.buttonLogin = false;\n          this.progress = 0;\n          this.doneProgress();\n          if (this.responseErrorCode === ResponseCode.ERR_SCR0000.toString()) {\n            this.authForceService.setData(\n              this.formGroup.get('username').value,\n              this.formGroup.get('password').value);\n            this.router.navigate(['/auth/force']);\n          }\n        });\n      if (this.progress >= 35 && this.progress < 65) {\n        this.setProgress(this.progress = 65);\n      }\n    }\n  }\n\n  onShowPassword(): void {\n    this.showPassword = !this.showPassword;\n    this.icon = this.showPassword ? 'eye-off-outline' :  'eye-outline';\n  }\n\n  get hasErrorUsername(): boolean {\n    return (\n      this.formGroup.controls['username'] &&\n      this.formGroup.controls['username'].invalid &&\n      this.formGroup.controls['username'].touched\n    );\n  }\n\n  get hasSuccessUsername(): boolean {\n    return (\n      this.formGroup.controls['username'] &&\n      this.formGroup.controls['username'].valid &&\n      this.formGroup.controls['username'].touched\n    );\n  }\n\n  get hasErrorPassword(): boolean {\n    return (\n      this.formGroup.controls['password'] &&\n      this.formGroup.controls['password'].invalid &&\n      this.formGroup.controls['password'].touched\n    );\n  }\n\n  get hasSuccessPassword(): boolean {\n    return (\n      this.formGroup.controls['password'] &&\n      this.formGroup.controls['password'].valid &&\n      this.formGroup.controls['password'].touched\n    );\n  }\n\n  public onClickTermsConditions() {\n    const data: any = {\n      parameterCode: 'TERMS_CONDITIONS.DONGKAP'\n    };\n    const httpHeaders: HttpHeaders = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n      'Content-Type': 'application/json',\n      'Accept-Language': this.translate.currentLang,\n    });\n    this.httpBaseService.HTTP_BASE(this.apiPath['openapi']['parameter'], data, httpHeaders)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response: any) => {\n      this.dialogService.open(TermsConditionsComponent, {\n        context: {\n          content: response['parameterValue'],\n          action: 'Close',\n        },\n        });\n    });\n  }\n\n  protected initProgress(): void {\n    document.querySelectorAll('.pace-done').forEach(pace => {\n    pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n    pace.className = pace.className.replace('pace-done', 'pace-running');\n    });\n    document.querySelectorAll('.pace-inactive').forEach(pace => {\n    pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n    pace.className = pace.className.replace('pace-inactive', 'pace-active');\n    });\n    this.progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n  }\n\n  protected doneProgress() {\n    document.querySelectorAll('.pace-running').forEach(pace => {\n    pace.className = pace.className.replace('pace-running', 'pace-done');\n    });\n    document.querySelectorAll('.pace-active').forEach(pace => {\n    pace.className = pace.className.replace('pace-active', 'pace-inactive');\n    });\n  }\n\n  protected setProgress(progress: number) {\n    this.progressDOM.style.transform = 'translate3d(' + progress + '%, 0px, 0px)';\n    this.progressDOM.getAttributeNode('data-progress-text').value = progress + '%';\n    this.progressDOM.getAttributeNode('data-progress').value = progress.toString();\n  }\n\n}\n","<h1 id=\"title\" class=\"title\">{{ 'Login' | translate }}</h1>\n<p class=\"sub-title\">{{ 'subtitle.login' | translate }}</p>\n<nb-alert *ngIf=\"responseError\" outline=\"danger\" role=\"alert\">\n  <p class=\"alert-title\"><b>{{ 'alert.title.login' | translate }}</b></p>\n  <ul class=\"alert-message-list\">\n    <li class=\"alert-message\">{{ responseError | translate }}</li>\n  </ul>\n</nb-alert>\n\n<form [formGroup]=\"formGroup\" (ngSubmit)=\"login()\" aria-labelledby=\"title\">\n  <div class=\"form-control-group\">\n    <label class=\"label\">{{ 'message.username-login' | translate }} :</label>\n    <input [formControlName]=\"'username'\"\n          [required]=\"true\"\n          [ngClass]=\"{\n            'status-danger': hasErrorUsername,\n            'status-success': hasSuccessUsername\n          }\"\n          name=\"username\"\n          id=\"inputUsername\"\n          placeholder=\"{{ 'message.username-login-placeholder' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"1\"\n          autofocus\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorUsername\">\n      <span class=\"caption status-danger\">{{'error.username-login' | translate}}</span>\n    </ng-container>\n  </div>\n\n  <div class=\"form-control-group\">\n    <span class=\"label-with-link\">\n      <label class=\"label\">{{ 'Password' | translate }} :</label>\n      <a class=\"forgot-password caption-2\" routerLink=\"/auth/forgot-password\" tabindex=\"-1\">{{ 'Forgot Password' | translate}}?</a>\n    </span>\n    <div class=\"input-group\">\n      <input [formControlName]=\"'password'\"\n            [required]=\"true\"\n            [ngClass]=\"{\n              'status-danger': hasErrorPassword,\n              'status-success': hasSuccessPassword\n            }\"\n            name=\"password\"\n            [type]=\"!showPassword ? 'password' : 'text'\"\n            id=\"inputPassword\"\n            placeholder=\"{{ 'Password' | translate }}\"\n            fieldSize=\"large\"\n            tabindex=\"2\"\n            nbInput\n            fullWidth>\n      <div class=\"input-icon\">\n        <nb-icon [options]=\"{ animation: { type: 'zoom' } }\" class=\"input-icon-hover\" icon=\"{{icon}}\" (click)=\"onShowPassword()\"></nb-icon>\n      </div>\n    </div>\n    <ng-container *ngIf=\"hasErrorPassword\">\n      <span class=\"caption status-danger\">{{ 'error.password' | translate}}</span>\n    </ng-container>\n  </div>\n\n  <button [disabled]=\"formGroup.invalid || buttonLogin\"\n          fullWidth\n          nbButton\n          status=\"primary\"\n          size=\"large\"\n          [class.btn-pulse]=\"formGroup.invalid || buttonLogin\">\n    {{ 'Login' | translate }}\n  </button>\n</form>\n<!--\n<section *ngIf=\"socialLinks && socialLinks.length > 0\" class=\"links\" aria-label=\"Social sign in\">\n  {{ 'message.login-footer-social' | translate}}:\n  <div class=\"socials\">\n    <ng-container *ngFor=\"let socialLink of socialLinks\">\n      <a *ngIf=\"socialLink.link\"\n         [routerLink]=\"socialLink.link\"\n         [attr.target]=\"socialLink.target\"\n         [attr.class]=\"socialLink.icon\"\n         [class.with-icon]=\"socialLink.icon\">\n        <nb-icon *ngIf=\"socialLink.icon; else title\" [icon]=\"socialLink.icon\"></nb-icon>\n        <ng-template #title>{{ socialLink.title }}</ng-template>\n      </a>\n      <a *ngIf=\"socialLink.url\"\n         [attr.href]=\"socialLink.url\"\n         [attr.target]=\"socialLink.target\"\n         [attr.class]=\"socialLink.icon\"\n         [class.with-icon]=\"socialLink.icon\">\n        <nb-icon *ngIf=\"socialLink.icon; else title\" [icon]=\"socialLink.icon\"></nb-icon>\n        <ng-template #title>{{ socialLink.title }}</ng-template>\n      </a>\n    </ng-container>\n  </div>\n</section>\n\n<section class=\"another-action\" aria-label=\"Register\">\n  {{ 'message.login-footer' | translate}} <a class=\"text-link\" routerLink=\"/auth/register\">{{ 'Register' | translate}}</a>\n</section>\n-->\n<section class=\"another-action\" aria-label=\"Terms and Conditions\">\n  <span class=\"terms-conditions\" (click)=\"onClickTermsConditions()\" tabindex=\"-1\">{{ 'message.terms-conditions' | translate}}</span>\n</section>\n","import { Component } from '@angular/core';\nimport { AuthTokenService } from '../../services/auth-token.service';\n\n@Component({\n    selector: 'do-logout',\n    styleUrls: ['logout.component.scss'],\n    templateUrl: 'logout.component.html',\n})\nexport class LogoutComponent {\n\n    constructor(private authTokenService: AuthTokenService) {\n        this.authTokenService.logout();\n    }\n}\n","<p class=\"sub-title\">{{ 'message.logout' | translate }}</p>\n<div class=\"spinner-area\" [nbSpinner]=\"true\" nbSpinnerSize=\"small\" nbSpinnerStatus=\"info\">","import { Component } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { DoToastrService } from '@dongkap/do-shared';\nimport { AuthTokenService } from '../../services/auth-token.service';\nimport { AuthForceService } from '../../services/auth-force.service';\n\n@Component({\n    selector: 'do-force-login-page',\n    styleUrls: ['./force-login-page.component.scss'],\n    templateUrl: 'force-login-page.component.html',\n})\nexport class ForceLoginPageComponent implements OnDestroy {\n\n  public responseError: any;\n  public responseErrorCode: any;\n  public buttonForceLogin: boolean = false;\n  private progress: number = 25;\n  protected progressDOM: HTMLElement;\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(\n    private router: Router,\n    private authTokenService: AuthTokenService,\n    private authForceService: AuthForceService,\n    private toastr: DoToastrService) {\n      if (this.authForceService.isEmpty()) {\n        this.router.navigate(['/auth']);\n      }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n  public forcelogin() {\n    if (!this.authForceService.isEmpty()) {\n      this.initProgress();\n      if (this.progress < 35) {\n        this.setProgress(this.progress = 35);\n      }\n      this.buttonForceLogin = true;\n      this.authTokenService.force(\n        this.authForceService.username,\n        this.authForceService.password)\n        .then(() => {\n          this.setProgress(this.progress = 95);\n          this.progress = 0;\n          this.responseError = null;\n          this.router.navigate(['/app/home']);\n        })\n        .catch((error: any) => {\n          try {\n            if (error instanceof HttpErrorResponse) {\n              error = error['error'] as ApiBaseResponse;\n            }\n            const response: ApiBaseResponse = (error as ApiBaseResponse);\n            this.responseError = response?.respStatusMessage[response?.respStatusCode];\n          } catch (error) {\n            this.responseError = 'error.500';\n          }\n          this.toastr.showI18n(this.responseError, true, null, 'danger');\n          this.buttonForceLogin = false;\n          this.progress = 0;\n          this.doneProgress();\n        });\n      if (this.progress >= 35 && this.progress < 65) {\n        this.setProgress(this.progress = 65);\n      }\n    }\n  }\n\n  protected initProgress(): void {\n    document.querySelectorAll('.pace-done').forEach(pace => {\n    pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n    pace.className = pace.className.replace('pace-done', 'pace-running');\n    });\n    document.querySelectorAll('.pace-inactive').forEach(pace => {\n    pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n    pace.className = pace.className.replace('pace-inactive', 'pace-active');\n    });\n    this.progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n  }\n\n  protected doneProgress() {\n    document.querySelectorAll('.pace-running').forEach(pace => {\n    pace.className = pace.className.replace('pace-running', 'pace-done');\n    });\n    document.querySelectorAll('.pace-active').forEach(pace => {\n    pace.className = pace.className.replace('pace-active', 'pace-inactive');\n    });\n  }\n\n  protected setProgress(progress: number) {\n    this.progressDOM.style.transform = 'translate3d(' + progress + '%, 0px, 0px)';\n    this.progressDOM.getAttributeNode('data-progress-text').value = progress + '%';\n    this.progressDOM.getAttributeNode('data-progress').value = progress.toString();\n  }\n\n}\n","<h1 id=\"title\" class=\"title\">{{ 'Login Warning' | translate }}</h1>\n<p class=\"sub-title\">{{ 'subtitle.force' | translate }}</p>\n\n<div class=\"form-control-group\">\n  <button fullWidth\n          nbButton\n          status=\"primary\"\n          size=\"large\"\n          [class.btn-pulse]=\"buttonForceLogin\"\n          [disabled]=\"buttonForceLogin\"\n          (click)=\"forcelogin()\">\n    {{ 'Force Login' | translate }}\n  </button>\n</div>\n\n<section class=\"sign-in-or-up\" aria-label=\"Sign in or sign up\">\n  <p>\n    {{ 'subtitle.force-footer' | translate }} <a class=\"text-link\" routerLink=\"/auth/login\">{{ 'Click here' | translate }}</a>\n  </p>\n  <!--\n  <p><a routerLink=\"/auth/register\" class=\"text-link\">{{ 'Register' | translate}}</a></p>\n  -->\n</section>\n","import { Component, Inject } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  API,\n  HTTP_SERVICE,\n  OAUTH_INFO,\n  Pattern,\n  ResponseCode,\n} from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { APIModel } from '@dongkap/do-core';\nimport { HttpFactoryService } from '@dongkap/do-core';\nimport { SecurityResourceModel } from '@dongkap/do-core';\nimport { DoToastrService } from '@dongkap/do-shared';\n\n@Component({\n    selector: 'do-request-forgot-page',\n    styleUrls: ['request-forgot-page.component.scss'],\n    templateUrl: 'request-forgot-page.component.html',\n})\nexport class RequestForgotPageComponent implements OnDestroy {\n\n  public responseError: any;\n  public buttonForgotPassword: boolean = false;\n  private progressBar: number = 25;\n  protected progressDOM: HTMLElement;\n\n  public patternEmail: string = Pattern.EMAIL;\n\n  public form: FormGroup = new FormGroup({\n    email: new FormControl(),\n  });\n\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(\n    private router: Router,\n    private toastr: DoToastrService,\n    private translate: TranslateService,\n    @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    @Inject(API)private apiPath: APIModel) {}\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n  public forgotPassword() {\n    if (!this.form.invalid) {\n      this.initProgress();\n      if (this.progressBar < 35) {\n        this.setProgress(this.progressBar = 35);\n      }\n\n      this.responseError = null;\n\n      // const urlForgotPassword: string = `${document.getElementsByTagName('base')[0].href}auth/forgot-password`;\n      const data: any = {\n        email: this.form.controls['email'].value,\n      };\n      const httpHeaders: HttpHeaders = new HttpHeaders({\n        Authorization: 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n        'Content-Type': 'application/json',\n        'Accept-Language': this.translate.currentLang,\n      });\n      this.buttonForgotPassword = true;\n      this.httpBaseService.HTTP_BASE(this.apiPath['auth']['request-forgot-password'], data, httpHeaders)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (response: ApiBaseResponse) => {\n          if (response) {\n            this.toastr.showI18n(response.respStatusMessage[response.respStatusCode]);\n            this.setProgress(this.progressBar = 95);\n            this.progressBar = 0;\n            if (response.respStatusCode === ResponseCode.OK_REQUEST_FORGOT_PASSWORD) {\n              this.router.navigate(['/auth/login']);\n            } else {\n              this.form.reset();\n              this.buttonForgotPassword = false;\n            }\n          } else {\n            this.form.reset();\n            this.buttonForgotPassword = false;\n          }\n        },\n        (error: any) => {\n          this.buttonForgotPassword = false;\n          this.progressBar = 0;\n          this.doneProgress();\n\n          if (!(error instanceof HttpErrorResponse)) {\n            if (error['respStatusCode']) {\n              this.responseError = error['respStatusMessage'][error['respStatusCode']];\n            }\n          } else {\n          }\n        });\n    }\n  }\n\n  get hasErrorEmail(): boolean {\n    return (\n      this.form.controls['email'] &&\n      this.form.controls['email'].invalid &&\n      this.form.controls['email'].touched\n    );\n  }\n\n  get hasSuccessEmail(): boolean {\n    return (\n      this.form.controls['email'] &&\n      this.form.controls['email'].valid &&\n      this.form.controls['email'].touched\n    );\n  }\n\n  protected initProgress(): void {\n    document.querySelectorAll('.pace-done').forEach(pace => {\n    pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n    pace.className = pace.className.replace('pace-done', 'pace-running');\n    });\n    document.querySelectorAll('.pace-inactive').forEach(pace => {\n    pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n    pace.className = pace.className.replace('pace-inactive', 'pace-active');\n    });\n    this.progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n  }\n\n  protected doneProgress() {\n    document.querySelectorAll('.pace-running').forEach(pace => {\n    pace.className = pace.className.replace('pace-running', 'pace-done');\n    });\n    document.querySelectorAll('.pace-active').forEach(pace => {\n    pace.className = pace.className.replace('pace-active', 'pace-inactive');\n    });\n  }\n\n  protected setProgress(progress: number) {\n    this.progressDOM.style.transform = 'translate3d(' + progress + '%, 0px, 0px)';\n    this.progressDOM.getAttributeNode('data-progress-text').value = progress + '%';\n    this.progressDOM.getAttributeNode('data-progress').value = progress.toString();\n  }\n\n}\n","<h1 id=\"title\" class=\"title\">{{ 'Forgot Password' | translate }}</h1>\n<p class=\"sub-title\">{{ 'subtitle.forgot-password' | translate }}</p>\n\n<nb-alert *ngIf=\"responseError\" outline=\"danger\" role=\"alert\">\n  <p class=\"alert-title\"><b>{{ 'alert.title.forgot' | translate }}</b></p>\n  <ul class=\"alert-message-list\">\n    <li class=\"alert-message\">{{ responseError }}</li>\n  </ul>\n</nb-alert>\n\n<form [formGroup]=\"form\" (ngSubmit)=\"forgotPassword()\" aria-labelledby=\"title\">\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-name\">{{ 'message.email-forgot-password' | translate }} :</label>\n    <input [formControlName]=\"'email'\"\n          [required]=\"true\"\n          minlength=\"4\"\n          maxlength=\"50\"\n          [pattern]=\"patternEmail\"\n          [ngClass]=\"{\n            'status-danger': hasErrorEmail,\n            'status-success': hasSuccessEmail\n          }\"\n          name=\"email\"\n          id=\"inputEmail\"\n          placeholder=\"{{ 'Email' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"1\"\n          autofocus\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorEmail\">\n      <span class=\"caption status-danger\">{{'error.pattern.email' | translate}}</span>\n    </ng-container>\n  </div>\n\n  <button [disabled]=\"form.invalid || buttonForgotPassword\"\n          fullWidth\n          nbButton\n          status=\"primary\"\n          size=\"large\"\n          [class.btn-pulse]=\"form.invalid || buttonForgotPassword\">\n    {{ 'Send' | translate }}\n  </button>\n</form>\n\n<section class=\"sign-in-or-up\" aria-label=\"Sign in or sign up\">\n  <p><a class=\"text-link\" routerLink=\"/auth/login\">{{ 'message.forgot-password-link' | translate}}</a></p>\n  <!--\n  <p><a routerLink=\"/auth/register\" class=\"text-link\">{{ 'Register' | translate}}</a></p>\n  -->\n</section>\n","import { Component, Inject } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  API,\n  EncryptionService,\n  HTTP_SERVICE,\n  OAUTH_INFO,\n  Pattern,\n  ResponseCode,\n} from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { APIModel } from '@dongkap/do-core';\nimport { HttpFactoryService } from '@dongkap/do-core';\nimport { SecurityResourceModel } from '@dongkap/do-core';\nimport { DoToastrService } from '@dongkap/do-shared';\n\n@Component({\n    selector: 'do-forgot-page',\n    styleUrls: ['forgot-page.component.scss'],\n    templateUrl: 'forgot-page.component.html',\n})\nexport class ForgotPageComponent implements OnDestroy {\n\n  public responseError: any;\n  public buttonForgotPassword: boolean = false;\n  private progressBar: number = 25;\n  protected progressDOM: HTMLElement;\n\n  public patternPassword: string = Pattern.PASSWORD_MEDIUM;\n  public errorMsgNewPassword: string;\n  public errorMsgConfirmPassword: string;\n\n  private verificationId: string;\n  private verificationCode: string;\n\n  public form: FormGroup = new FormGroup({\n    newPassword: new FormControl(),\n    confirmPassword: new FormControl(),\n  });\n\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastr: DoToastrService,\n    private translate: TranslateService,\n    private enc: EncryptionService,\n    @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    @Inject(API)private apiPath: APIModel) {\n    if (this.route.snapshot.params['id'] !== null && this.route.snapshot.params['code'] !== null) {\n      this.verificationId = this.route.snapshot.params['id'];\n      this.verificationCode = this.route.snapshot.params['code'];\n    } else {\n      this.router.navigate(['/auth/login']);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n  public forgotPassword() {\n    if (!this.form.invalid) {\n      this.initProgress();\n      if (this.progressBar < 35) {\n        this.setProgress(this.progressBar = 35);\n      }\n\n      this.responseError = null;\n\n      const newPassword: string = this.enc.encryptAES(this.oauthResource['aes_key'], this.form.controls['newPassword'].value);\n      const confirmPassword: string = this.enc.encryptAES(this.oauthResource['aes_key'], this.form.controls['confirmPassword'].value);\n      const data: any = {\n        verificationId: this.verificationId,\n        verificationCode: this.verificationCode,\n        newPassword,\n        confirmPassword,\n      };\n      const httpHeaders: HttpHeaders = new HttpHeaders({\n        Authorization: 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n        'Content-Type': 'application/json',\n        'Accept-Language': this.translate.currentLang,\n      });\n      this.buttonForgotPassword = true;\n      this.httpBaseService.HTTP_BASE(this.apiPath['auth']['forgot-password'], data, httpHeaders)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (response: ApiBaseResponse) => {\n          if (response) {\n            this.toastr.showI18n(response.respStatusMessage[response.respStatusCode]);\n            this.setProgress(this.progressBar = 95);\n            this.progressBar = 0;\n            if (response.respStatusCode === ResponseCode.OK_FORGOT_PASSWORD) {\n              this.router.navigate(['/auth/login']);\n            } else {\n              this.form.reset();\n              this.buttonForgotPassword = false;\n            }\n          } else {\n            this.form.reset();\n            this.buttonForgotPassword = false;\n          }\n        },\n        (error: any) => {\n          this.buttonForgotPassword = false;\n          this.progressBar = 0;\n          this.doneProgress();\n\n          if (!(error instanceof HttpErrorResponse)) {\n            if (error['respStatusCode']) {\n              this.responseError = error['respStatusMessage'][error['respStatusCode']];\n            }\n          }\n        });\n    }\n  }\n\n  get hasErrorNewPassword(): boolean {\n    if (this.form.controls['newPassword'].errors &&\n      this.form.controls['newPassword'].invalid &&\n      this.form.controls['newPassword'].touched) {\n      this.errorMsgNewPassword = 'error.pattern.Password';\n    } else {\n      this.errorMsgNewPassword = null;\n    }\n    return (\n      this.form.controls['newPassword'] &&\n      this.form.controls['newPassword'].invalid &&\n      this.form.controls['newPassword'].touched\n    );\n  }\n\n  get hasSuccessNewPassword(): boolean {\n    return (\n      this.form.controls['newPassword'] &&\n      this.form.controls['newPassword'].valid &&\n      this.form.controls['newPassword'].touched\n    );\n  }\n\n  get hasErrorConfirmPassword(): boolean {\n    if (\n      this.form.controls['confirmPassword'].errors &&\n      this.form.controls['confirmPassword'].invalid &&\n      this.form.controls['confirmPassword'].touched) {\n      this.errorMsgConfirmPassword = 'error.equal.confirmPassword';\n    } else {\n      if (this.form.controls['newPassword'].value !== this.form.controls['confirmPassword'].value) {\n        this.errorMsgConfirmPassword = 'error.equal.confirmPassword';\n        this.form.controls['confirmPassword'].setValidators([confirmPasswordValidator(this.form)]);\n        this.form.controls['confirmPassword'].updateValueAndValidity();\n      } else {\n        this.errorMsgConfirmPassword = null;\n      }\n    }\n    return (\n      this.form.controls['confirmPassword'] &&\n      this.form.controls['confirmPassword'].invalid &&\n      this.form.controls['confirmPassword'].touched\n    );\n  }\n\n  get hasSuccessConfirmPassword(): boolean {\n    return (\n      this.form.controls['confirmPassword'] &&\n      this.form.controls['confirmPassword'].valid &&\n      this.form.controls['confirmPassword'].touched\n    );\n  }\n\n  protected initProgress(): void {\n    document.querySelectorAll('.pace-done').forEach(pace => {\n    pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n    pace.className = pace.className.replace('pace-done', 'pace-running');\n    });\n    document.querySelectorAll('.pace-inactive').forEach(pace => {\n    pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n    pace.className = pace.className.replace('pace-inactive', 'pace-active');\n    });\n    this.progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n  }\n\n  protected doneProgress() {\n    document.querySelectorAll('.pace-running').forEach(pace => {\n    pace.className = pace.className.replace('pace-running', 'pace-done');\n    });\n    document.querySelectorAll('.pace-active').forEach(pace => {\n    pace.className = pace.className.replace('pace-active', 'pace-inactive');\n    });\n  }\n\n  protected setProgress(progress: number) {\n    this.progressDOM.style.transform = 'translate3d(' + progress + '%, 0px, 0px)';\n    this.progressDOM.getAttributeNode('data-progress-text').value = progress + '%';\n    this.progressDOM.getAttributeNode('data-progress').value = progress.toString();\n  }\n\n}\n\nexport function confirmPasswordValidator(form: FormGroup): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    if (form.controls) {\n      if (form.controls['newPassword'].value !== form.controls['confirmPassword'].value){\n        return { equal: true };\n      }\n    }\n    return null;\n  };\n}\n","<h1 id=\"title\" class=\"title\">{{ 'Reset Password' | translate }}</h1>\n<p class=\"sub-title\">{{ 'subtitle.reset-password' | translate }}</p>\n\n<nb-alert *ngIf=\"responseError\" outline=\"danger\" role=\"alert\">\n  <p class=\"alert-title\"><b>{{ 'alert.title.reset-password' | translate }}</b></p>\n  <ul class=\"alert-message-list\">\n    <li class=\"alert-message\">{{ responseError }}</li>\n  </ul>\n</nb-alert>\n\n<form [formGroup]=\"form\" (ngSubmit)=\"forgotPassword()\" aria-labelledby=\"title\">\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-newpassword\">{{ 'New Password' | translate }}* :</label>\n    <input [formControlName]=\"'newPassword'\"\n          [required]=\"true\"\n          minlength=\"8\"\n          maxlength=\"50\"\n          [pattern]=\"patternPassword\"\n          [ngClass]=\"{\n            'status-danger': hasErrorNewPassword,\n            'status-success': hasSuccessNewPassword\n          }\"\n          name=\"newPassword\"\n          type=\"password\"\n          id=\"inputNewPassword\"\n          placeholder=\"{{ 'New Password' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"4\"\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorNewPassword\">\n      <span class=\"caption status-danger\">{{ errorMsgNewPassword | translate}}</span>\n    </ng-container>\n  </div>\n\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-confirmpassword\">{{ 'Confirm Password' | translate }}* :</label>\n    <input [formControlName]=\"'confirmPassword'\"\n          [required]=\"true\"\n          minlength=\"8\"\n          maxlength=\"50\"\n          [ngClass]=\"{\n            'status-danger': hasErrorConfirmPassword,\n            'status-success': hasSuccessConfirmPassword\n          }\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          id=\"inputConfirmPassword\"\n          placeholder=\"{{ 'Confirm Password' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"5\"\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorConfirmPassword\">\n      <span class=\"caption status-danger\">{{ errorMsgConfirmPassword | translate}}</span>\n    </ng-container>\n  </div>\n\n  <button [disabled]=\"form.invalid || buttonForgotPassword\"\n          fullWidth\n          nbButton\n          status=\"primary\"\n          size=\"large\"\n          [class.btn-pulse]=\"form.invalid || buttonForgotPassword\">\n    {{ 'Reset Password' | translate }}\n  </button>\n</form>\n\n<section class=\"another-action\" aria-label=\"Sign in\">\n  {{ 'message.reset-password-footer' | translate}} <a class=\"text-link\" routerLink=\"/auth/login\" tabindex=\"-1\">{{ 'Login' | translate}}</a>\n</section>\n","import { Component, Inject } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  ValidatorFn,\n  AbstractControl,\n  AsyncValidatorFn,\n} from '@angular/forms';\nimport { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { of, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, first, switchMap, takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NbDialogService } from '@nebular/theme';\nimport {\n  API,\n  EncryptionService,\n  HTTP_SERVICE,\n  OAUTH_INFO,\n  Pattern,\n  ResponseCode,\n} from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { APIModel } from '@dongkap/do-core';\nimport { HttpFactoryService } from '@dongkap/do-core';\nimport { SecurityResourceModel } from '@dongkap/do-core';\nimport { DoToastrService } from '@dongkap/do-shared';\nimport { TermsConditionsComponent } from '../terms-conditions/terms-conditions.component';\n\n@Component({\n    selector: 'do-register-page',\n    styleUrls: ['register-page.component.scss'],\n    templateUrl: 'register-page.component.html',\n})\nexport class RegisterPageComponent implements OnDestroy {\n\n  public patternFullname: string = Pattern.FULLNAME;\n  public patternUsername: string = Pattern.USERNAME;\n  public patternEmail: string = Pattern.EMAIL;\n  public patternPassword: string = Pattern.PASSWORD_MEDIUM;\n  public errorMsgFullname: string;\n  public errorMsgUsername: string;\n  public errorMsgEmail: string;\n  public errorMsgPassword: string;\n  public errorMsgConfirmPassword: string;\n  public paramMsgUsername: any;\n  public paramMsgEmail: any;\n  public minlengthUsername: number = 4;\n  public minlengthEmail: number = 5;\n\n  public form: FormGroup = new FormGroup({\n    fullname: new FormControl(),\n    username: new FormControl(),\n    email: new FormControl(),\n    password: new FormControl(),\n    confirmPassword: new FormControl(),\n    terms: new FormControl(),\n    recaptcha: new FormControl(),\n  });\n\n  public responseError: any;\n  public buttonRegister: boolean = false;\n  private progressBar: number = 25;\n  protected progressDOM: HTMLElement;\n  private isCheckUsername: boolean = true;\n  private isCheckEmail: boolean = true;\n\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(\n    private router: Router,\n    private enc: EncryptionService,\n    private toastr: DoToastrService,\n    private dialogService: NbDialogService,\n    private translate: TranslateService,\n    @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    @Inject(API)private apiPath: APIModel) {\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n  public register() {\n    if (!this.form.invalid) {\n      this.initProgress();\n      if (this.progressBar < 35) {\n        this.setProgress(this.progressBar = 35);\n      }\n\n      this.responseError = null;\n      const data: any = this.form.value;\n      data['password'] = this.enc.encryptAES(this.oauthResource['aes_key'], this.form.controls['password'].value);\n      data['confirmPassword'] = this.enc.encryptAES(this.oauthResource['aes_key'], this.form.controls['confirmPassword'].value);\n      const httpHeaders: HttpHeaders = new HttpHeaders({\n        Authorization: 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n        'Content-Type': 'application/json',\n        'Accept-Language': this.translate.currentLang,\n      });\n      this.buttonRegister = true;\n      this.httpBaseService.HTTP_BASE(this.apiPath['auth']['signup'], data, httpHeaders)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (response: ApiBaseResponse) => {\n          if (response) {\n            this.toastr.showI18n(response.respStatusMessage[response.respStatusCode]);\n            this.setProgress(this.progressBar = 95);\n            this.progressBar = 0;\n            if (response.respStatusCode === ResponseCode.OK_REGISTERED) {\n              this.router.navigate(['/auth/login']);\n            } else {\n              this.form.reset();\n              this.buttonRegister = false;\n            }\n          } else {\n            this.form.reset();\n            this.buttonRegister = false;\n          }\n        },\n        (error: any) => {\n          this.buttonRegister = false;\n          this.progressBar = 0;\n          this.doneProgress();\n\n          if (!(error instanceof HttpErrorResponse)) {\n            if (error['respStatusCode']) {\n              switch (error['respStatusCode']) {\n                case ResponseCode.ERR_SCR0005.toString():\n                  this.form.controls['password'].setErrors({\n                    invalid: true,\n                  });\n                  break;\n                case ResponseCode.ERR_SCR0011.toString():\n                  this.form.controls['confirmPassword'].setErrors({\n                    equal: true,\n                  });\n                  break;\n                default:\n                  break;\n              }\n              this.responseError = error['respStatusMessage'][error['respStatusCode']];\n            }\n          } else {\n          }\n        });\n    }\n  }\n\n  get hasErrorFullname(): boolean {\n    if (this.form.controls['fullname'].errors && this.form.controls['fullname'].invalid && this.form.controls['fullname'].touched) {\n      if (this.form.controls['fullname'].errors['required']){\n        this.errorMsgFullname = 'error.fullname.required';\n      } else {\n        this.errorMsgFullname = 'error.fullname.invalid';\n      }\n    } else {\n      this.errorMsgFullname = null;\n    }\n    return (\n      this.form.controls['fullname'] &&\n      this.form.controls['fullname'].invalid &&\n      this.form.controls['fullname'].touched\n    );\n  }\n\n  get hasSuccessFullname(): boolean {\n    return (\n      this.form.controls['fullname'] &&\n      this.form.controls['fullname'].valid &&\n      this.form.controls['fullname'].touched\n    );\n  }\n\n  get hasErrorUsername(): boolean {\n    if (this.form.controls['username'].errors && this.form.controls['username'].invalid && this.form.controls['username'].touched) {\n      if (this.form.controls['username'].errors['required']) {\n        this.errorMsgUsername = 'error.username.required';\n      } else if (this.form.controls['username'].errors['not-available']) {\n        this.errorMsgUsername = 'error.username.not-available';\n        this.paramMsgUsername = {\n          value: this.form.controls['username'].value,\n        };\n      } else if (this.form.controls['username'].errors['timeout']) {\n        this.errorMsgUsername = 'error.0';\n      } else if (this.form.controls['username'].errors['error']) {\n        this.errorMsgUsername = 'error.500';\n      } else {\n        this.errorMsgUsername = 'error.username.invalid';\n      }\n    } else {\n      if ((this.form.controls['username'].touched || this.form.controls['username'].dirty) && this.isCheckUsername) {\n        this.isCheckUsername = false;\n        this.form.controls['username'].setAsyncValidators([userValidator(this.oauthResource, this.httpBaseService, this.apiPath)]);\n        this.form.controls['username'].updateValueAndValidity();\n      }\n      this.errorMsgUsername = null;\n    }\n    return (\n      this.form.controls['username'] &&\n      this.form.controls['username'].invalid &&\n      this.form.controls['username'].touched\n    );\n  }\n\n  get hasSuccessUsername(): boolean {\n    return (\n      this.form.controls['username'] &&\n      this.form.controls['username'].valid &&\n      this.form.controls['username'].touched\n      );\n  }\n\n  get hasErrorEmail(): boolean {\n    if (this.form.controls['email'].errors && this.form.controls['email'].invalid && this.form.controls['email'].touched) {\n      if (this.form.controls['email'].errors['required']) {\n        this.errorMsgEmail = 'error.email.required';\n      } else if (this.form.controls['email'].errors['not-available']) {\n        this.errorMsgEmail = 'error.email.not-available';\n        this.paramMsgEmail = {\n          value: this.form.controls['email'].value,\n        };\n      } else if (this.form.controls['email'].errors['timeout']) {\n        this.errorMsgEmail = 'error.0';\n      } else if (this.form.controls['email'].errors['error']) {\n        this.errorMsgEmail = 'error.500';\n      } else {\n        this.errorMsgEmail = 'error.email.invalid';\n      }\n    } else {\n      if ((this.form.controls['email'].touched || this.form.controls['email'].dirty) && this.isCheckEmail) {\n        this.isCheckEmail = false;\n        this.form.controls['email'].setAsyncValidators([userValidator(this.oauthResource, this.httpBaseService, this.apiPath)]);\n        this.form.controls['email'].updateValueAndValidity();\n      }\n      this.errorMsgEmail = null;\n    }\n    return (\n      this.form.controls['email'] &&\n      this.form.controls['email'].invalid &&\n      this.form.controls['email'].touched\n    );\n  }\n\n  get hasSuccessEmail(): boolean {\n    return (\n      this.form.controls['email'] &&\n      this.form.controls['email'].valid &&\n      this.form.controls['email'].touched\n      );\n  }\n\n  get hasErrorPassword(): boolean {\n    if (this.form.controls['password'].errors && this.form.controls['password'].invalid && this.form.controls['password'].touched) {\n      this.errorMsgPassword = 'error.pattern.Password';\n    } else {\n      this.errorMsgPassword = null;\n    }\n    return (\n      this.form.controls['password'] &&\n      this.form.controls['password'].invalid &&\n      this.form.controls['password'].touched\n    );\n  }\n\n  get hasSuccessPassword(): boolean {\n    return (\n      this.form.controls['password'] &&\n      this.form.controls['password'].valid &&\n      this.form.controls['password'].touched\n    );\n  }\n\n  get hasErrorConfirmPassword(): boolean {\n    if (\n      this.form.controls['confirmPassword'].errors &&\n      this.form.controls['confirmPassword'].invalid &&\n      this.form.controls['confirmPassword'].touched) {\n      this.errorMsgConfirmPassword = 'error.equal.confirmPassword-register';\n    } else {\n      if (this.form.controls['password'].value !== this.form.controls['confirmPassword'].value) {\n        this.errorMsgConfirmPassword = 'error.equal.confirmPassword-register';\n        this.form.controls['confirmPassword'].setValidators([confirmPasswordValidator(this.form)]);\n        this.form.controls['confirmPassword'].updateValueAndValidity();\n      } else {\n        this.errorMsgConfirmPassword = null;\n      }\n    }\n    return (\n      this.form.controls['confirmPassword'] &&\n      this.form.controls['confirmPassword'].invalid &&\n      this.form.controls['confirmPassword'].touched\n    );\n  }\n\n  get hasSuccessConfirmPassword(): boolean {\n    return (\n      this.form.controls['confirmPassword'] &&\n      this.form.controls['confirmPassword'].valid &&\n      this.form.controls['confirmPassword'].touched\n    );\n  }\n\n  onCheckedChange(){\n    if (!this.form.controls['terms'].value) {\n      this.form.controls['terms'].setValue(null);\n    }\n  }\n\n  onClickTermsConditions(){\n    const data: any = {\n      parameterCode: 'TERMS_CONDITIONS.DONGKAP'\n    };\n    const httpHeaders: HttpHeaders = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n      'Content-Type': 'application/json',\n      'Accept-Language': this.translate.currentLang,\n    });\n    this.httpBaseService.HTTP_BASE(this.apiPath['openapi']['parameter'], data, httpHeaders)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response: any) => {\n      this.dialogService.open(TermsConditionsComponent, {\n        context: {\n          content: response['parameterValue'],\n        },\n        })\n        .onClose.subscribe((terms: string) => {\n        if (terms) {\n          this.form.controls['terms'].setValue(true);\n        }\n      });\n    });\n  }\n\n  onKeyDownUsername(event: KeyboardEvent){\n    if (event.key) {\n      if (!event.key.match(/[!@#$%^&*()?\":{}|<>\\[\\];\\\\=~`]/g)) {\n        if (([\n          'TAB',\n          'ESCAPE',\n          'ENTER',\n          'HOME',\n          'END',\n          'ARROWLEFT',\n          'ARROWRIGHT',\n          'ARROWUP',\n          'ARROWDOWN',\n          'PAGEUP',\n          'PAGEDOWN'].indexOf(event.key.toUpperCase()) === -1) &&\n        !event.ctrlKey && !event.metaKey && !event.altKey) {\n            this.isCheckUsername = true;\n        }\n      }\n    }\n  }\n\n  onKeyDownEmail(event: KeyboardEvent){\n    if (event.key) {\n      if (!event.key.match(/[!#$%^&*()?\":{}|<>\\[\\];\\\\=~`]/g)) {\n        if (([\n          'TAB',\n          'ESCAPE',\n          'ENTER',\n          'HOME',\n          'END',\n          'ARROWLEFT',\n          'ARROWRIGHT',\n          'ARROWUP',\n          'ARROWDOWN',\n          'PAGEUP',\n          'PAGEDOWN'].indexOf(event.key.toUpperCase()) === -1) &&\n        !event.ctrlKey && !event.metaKey && !event.altKey) {\n          this.isCheckEmail = true;\n        }\n      }\n    }\n  }\n\n  protected initProgress(): void {\n    document.querySelectorAll('.pace-done').forEach(pace => {\n    pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n    pace.className = pace.className.replace('pace-done', 'pace-running');\n    });\n    document.querySelectorAll('.pace-inactive').forEach(pace => {\n    pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n    pace.className = pace.className.replace('pace-inactive', 'pace-active');\n    });\n    this.progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n  }\n\n  protected doneProgress() {\n    document.querySelectorAll('.pace-running').forEach(pace => {\n    pace.className = pace.className.replace('pace-running', 'pace-done');\n    });\n    document.querySelectorAll('.pace-active').forEach(pace => {\n    pace.className = pace.className.replace('pace-active', 'pace-inactive');\n    });\n  }\n\n  protected setProgress(progress: number) {\n    this.progressDOM.style.transform = 'translate3d(' + progress + '%, 0px, 0px)';\n    this.progressDOM.getAttributeNode('data-progress-text').value = progress + '%';\n    this.progressDOM.getAttributeNode('data-progress').value = progress.toString();\n  }\n\n}\n\nexport function confirmPasswordValidator(form: FormGroup): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    if (form.controls) {\n      if (form.controls['password'].value !== form.controls['confirmPassword'].value){\n        return { equal: true };\n      }\n    }\n    return null;\n  };\n}\n\nexport function userValidator(\n  oauthResource: SecurityResourceModel,\n  httpBaseService: HttpFactoryService,\n  apiPath: APIModel): AsyncValidatorFn {\n  return (control: AbstractControl) => {\n    if (!control.valueChanges) {\n      return of(null);\n    } else {\n      return control.valueChanges.pipe(\n        debounceTime(500),\n        distinctUntilChanged(),\n        switchMap(() => {\n          const validatorSubject$: Subject<any> = new Subject<ApiBaseResponse>();\n          const httpHeaders: HttpHeaders = new HttpHeaders({\n            Authorization: 'Basic ' + btoa(oauthResource['client_id'] + ':' + oauthResource['client_secret']),\n            'Content-Type': 'application/json',\n          });\n          const data: any = {\n            user: control.value,\n          };\n          let dataValidator: any;\n          if (control.value){\n            httpBaseService.HTTP_BASE(apiPath['auth']['check-user'], data, httpHeaders).subscribe(\n              (response: any) => {\n                if (response['respStatusCode'] === ResponseCode.OK_SCR012.toString()) {\n                  validatorSubject$.next(null);\n                } else {\n                  dataValidator = {\n                    error: true,\n                  };\n                  validatorSubject$.next(dataValidator);\n                }\n              },\n              (error: any) => {\n                if (!(error instanceof HttpErrorResponse)) {\n                  dataValidator = {\n                    error: true,\n                  };\n                } else {\n                  if (error.status === 302) {\n                    dataValidator = {\n                      'not-available': true,\n                    };\n                  } else {\n                    dataValidator = {\n                      timeout: true,\n                    };\n                  }\n                }\n                validatorSubject$.next(dataValidator);\n              });\n          }\n          return validatorSubject$.asObservable();\n        })).pipe(first());\n    }\n  };\n}\n","<h1 id=\"title\" class=\"title\">{{ 'Register' | translate }}</h1>\n\n<nb-alert *ngIf=\"responseError\" outline=\"danger\" role=\"alert\">\n  <p class=\"alert-title\"><b>{{ 'alert.title.register' | translate }}</b></p>\n  <ul class=\"alert-message-list\">\n    <li class=\"alert-message\">{{ responseError }}</li>\n  </ul>\n</nb-alert>\n\n<form [formGroup]=\"form\" (ngSubmit)=\"register()\" aria-labelledby=\"title\">\n\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-name\">{{ 'Full name' | translate }}* :</label>\n    <input [formControlName]=\"'fullname'\"\n          [required]=\"true\"\n          minlength=\"4\"\n          maxlength=\"50\"\n          [pattern]=\"patternFullname\"\n          [ngClass]=\"{\n            'status-danger': hasErrorFullname,\n            'status-success': hasSuccessFullname\n          }\"\n          name=\"fullname\"\n          id=\"inputFullname\"\n          placeholder=\"{{ 'Full name' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"1\"\n          autofocus\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorFullname\">\n      <span class=\"caption status-danger\">{{errorMsgFullname | translate}}</span>\n    </ng-container>\n  </div>\n\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-username\">{{ 'Username' | translate }}* :</label>\n    <input [formControlName]=\"'username'\"\n          [required]=\"true\"\n          minlength=\"5\"\n          maxlength=\"20\"\n          [pattern]=\"patternUsername\"\n          [ngClass]=\"{\n            'status-danger': hasErrorUsername,\n            'status-success': hasSuccessUsername\n          }\"\n          name=\"username\"\n          id=\"inputUsername\"\n          (keydown)=\"onKeyDownUsername($event)\"\n          placeholder=\"{{ 'Username' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"2\"\n          autofocus\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorUsername\">\n      <span class=\"caption status-danger\">{{errorMsgUsername | translate:paramMsgUsername}}</span>\n    </ng-container>\n  </div>\n\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-email\">{{ 'Email' | translate }}* :</label>\n    <input [formControlName]=\"'email'\"\n          [required]=\"true\"\n          minlength=\"5\"\n          maxlength=\"50\"\n          [pattern]=\"patternEmail\"\n          [ngClass]=\"{\n            'status-danger': hasErrorEmail,\n            'status-success': hasSuccessEmail\n          }\"\n          name=\"email\"\n          id=\"inputEmail\"\n          (keydown)=\"onKeyDownEmail($event)\"\n          placeholder=\"{{ 'Email' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"3\"\n          autofocus\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorEmail\">\n      <span class=\"caption status-danger\">{{errorMsgEmail | translate:paramMsgEmail}}</span>\n    </ng-container>\n  </div>\n\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-password\">{{ 'Password' | translate }}* :</label>\n    <input [formControlName]=\"'password'\"\n          [required]=\"true\"\n          minlength=\"8\"\n          maxlength=\"50\"\n          [pattern]=\"patternPassword\"\n          [ngClass]=\"{\n            'status-danger': hasErrorPassword,\n            'status-success': hasSuccessPassword\n          }\"\n          name=\"password\"\n          type=\"password\"\n          id=\"inputPassword\"\n          placeholder=\"{{ 'Password' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"4\"\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorPassword\">\n      <span class=\"caption status-danger\">{{ errorMsgPassword | translate}}</span>\n    </ng-container>\n  </div>\n\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-confirmpassword\">{{ 'Confirm Password' | translate }}* :</label>\n    <input [formControlName]=\"'confirmPassword'\"\n          [required]=\"true\"\n          minlength=\"8\"\n          maxlength=\"50\"\n          [ngClass]=\"{\n            'status-danger': hasErrorConfirmPassword,\n            'status-success': hasSuccessConfirmPassword\n          }\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          id=\"inputConfirmPassword\"\n          placeholder=\"{{ 'Confirm Password' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"5\"\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorConfirmPassword\">\n      <span class=\"caption status-danger\">{{ errorMsgConfirmPassword | translate}}</span>\n    </ng-container>\n  </div>\n\n  <div class=\"form-control-group accept-group\">\n    <div class=\"terms-row row\">\n      <nb-checkbox\n        name=\"terms\"\n        [formControlName]=\"'terms'\"\n        [required]=\"true\"\n        (change)=\"onCheckedChange()\">\n        {{ 'message.terms-conditions-label' | translate}}\n      </nb-checkbox>\n      <span class=\"terms-conditions\" (click)=\"onClickTermsConditions()\" tabindex=\"-1\"><strong>{{ 'message.terms-conditions' | translate}}</strong></span>\n    </div>\n  </div>\n\n  <div class=\"form-control-group\" style=\"transform:scale(0.7);transform-origin:0;\">\n    <re-captcha\n      [formControlName]=\"'recaptcha'\"\n      required>\n    </re-captcha>\n  </div>\n\n  <button [disabled]=\"!form.valid || buttonRegister\"\n          fullWidth\n          nbButton\n          status=\"primary\"\n          size=\"large\"\n          [class.btn-pulse]=\"!form.valid || buttonRegister\">\n    {{ 'Register' | translate }}\n  </button>\n</form>\n\n<section class=\"another-action\" aria-label=\"Sign in\">\n  {{ 'message.register-footer' | translate}} <a class=\"text-link\" routerLink=\"/auth/login\" tabindex=\"-1\">{{ 'Login' | translate}}</a>\n</section>\n","import { Component, Inject } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  API,\n  EncryptionService,\n  HTTP_SERVICE,\n  OAUTH_INFO,\n  Pattern,\n  ResponseCode,\n} from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { APIModel } from '@dongkap/do-core';\nimport { HttpFactoryService } from '@dongkap/do-core';\nimport { SecurityResourceModel } from '@dongkap/do-core';\nimport { DoToastrService } from '@dongkap/do-shared';\n\n@Component({\n    selector: 'do-activate-account-page',\n    styleUrls: ['activate-account-page.component.scss'],\n    templateUrl: 'activate-account-page.component.html',\n})\nexport class ActivateAccountPageComponent implements OnDestroy {\n\n  public responseError: any;\n  public buttonForgotPassword: boolean = false;\n  private progressBar: number = 25;\n  protected progressDOM: HTMLElement;\n\n  public patternPassword: string = Pattern.PASSWORD_MEDIUM;\n  public errorMsgPassword: string;\n  public errorMsgConfirmPassword: string;\n\n  private activateId: string;\n  private activateCode: string;\n\n  public form: FormGroup = new FormGroup({\n    password: new FormControl(),\n    confirmPassword: new FormControl(),\n  });\n\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastr: DoToastrService,\n    private translate: TranslateService,\n    private enc: EncryptionService,\n    @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    @Inject(API)private apiPath: APIModel) {\n    if (this.route.snapshot.params['id'] !== null && this.route.snapshot.params['code'] !== null) {\n      this.activateId = this.route.snapshot.params['id'];\n      this.activateCode = this.route.snapshot.params['code'];\n    } else {\n      this.router.navigate(['/auth/login']);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n  public activateAccount() {\n    if (!this.form.invalid) {\n      this.initProgress();\n      if (this.progressBar < 35) {\n        this.setProgress(this.progressBar = 35);\n      }\n\n      this.responseError = null;\n\n      const password: string = this.enc.encryptAES(this.oauthResource['aes_key'], this.form.controls['password'].value);\n      const confirmPassword: string = this.enc.encryptAES(this.oauthResource['aes_key'], this.form.controls['confirmPassword'].value);\n      const data: any = {\n        activateId: this.activateId,\n        activateCode: this.activateCode,\n        password,\n        confirmPassword,\n      };\n      const httpHeaders: HttpHeaders = new HttpHeaders({\n        Authorization: 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n        'Content-Type': 'application/json',\n        'Accept-Language': this.translate.currentLang,\n      });\n      this.buttonForgotPassword = true;\n      this.httpBaseService.HTTP_BASE(this.apiPath['auth']['activate-account'], data, httpHeaders)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (response: ApiBaseResponse) => {\n          if (response) {\n            this.toastr.showI18n(response.respStatusMessage[response.respStatusCode]);\n            this.setProgress(this.progressBar = 95);\n            this.progressBar = 0;\n            if (response.respStatusCode === ResponseCode.OK_ACTIVATE_ACCOUNT) {\n              this.router.navigate(['/auth/login']);\n            } else {\n              this.form.reset();\n              this.buttonForgotPassword = false;\n            }\n          } else {\n            this.form.reset();\n            this.buttonForgotPassword = false;\n          }\n        },\n        (error: any) => {\n          this.buttonForgotPassword = false;\n          this.progressBar = 0;\n          this.doneProgress();\n\n          if (!(error instanceof HttpErrorResponse)) {\n            if (error['respStatusCode']) {\n              this.responseError = error['respStatusMessage'][error['respStatusCode']];\n            }\n          }\n        });\n    }\n  }\n\n  get hasErrorPassword(): boolean {\n    if (this.form.controls['password'].errors &&\n      this.form.controls['password'].invalid &&\n      this.form.controls['password'].touched) {\n      this.errorMsgPassword = 'error.pattern.Password';\n    } else {\n      this.errorMsgPassword = null;\n    }\n    return (\n      this.form.controls['password'] &&\n      this.form.controls['password'].invalid &&\n      this.form.controls['password'].touched\n    );\n  }\n\n  get hasSuccessPassword(): boolean {\n    return (\n      this.form.controls['password'] &&\n      this.form.controls['password'].valid &&\n      this.form.controls['password'].touched\n    );\n  }\n\n  get hasErrorConfirmPassword(): boolean {\n    if (\n      this.form.controls['confirmPassword'].errors &&\n      this.form.controls['confirmPassword'].invalid &&\n      this.form.controls['confirmPassword'].touched) {\n      this.errorMsgConfirmPassword = 'error.equal.confirmPassword';\n    } else {\n      if (this.form.controls['password'].value !== this.form.controls['confirmPassword'].value) {\n        this.errorMsgConfirmPassword = 'error.equal.confirmPassword';\n        this.form.controls['confirmPassword'].setValidators([confirmPasswordValidator(this.form)]);\n        this.form.controls['confirmPassword'].updateValueAndValidity();\n      } else {\n        this.errorMsgConfirmPassword = null;\n      }\n    }\n    return (\n      this.form.controls['confirmPassword'] &&\n      this.form.controls['confirmPassword'].invalid &&\n      this.form.controls['confirmPassword'].touched\n    );\n  }\n\n  get hasSuccessConfirmPassword(): boolean {\n    return (\n      this.form.controls['confirmPassword'] &&\n      this.form.controls['confirmPassword'].valid &&\n      this.form.controls['confirmPassword'].touched\n    );\n  }\n\n  protected initProgress(): void {\n    document.querySelectorAll('.pace-done').forEach(pace => {\n    pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n    pace.className = pace.className.replace('pace-done', 'pace-running');\n    });\n    document.querySelectorAll('.pace-inactive').forEach(pace => {\n    pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n    pace.className = pace.className.replace('pace-inactive', 'pace-active');\n    });\n    this.progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n  }\n\n  protected doneProgress() {\n    document.querySelectorAll('.pace-running').forEach(pace => {\n    pace.className = pace.className.replace('pace-running', 'pace-done');\n    });\n    document.querySelectorAll('.pace-active').forEach(pace => {\n    pace.className = pace.className.replace('pace-active', 'pace-inactive');\n    });\n  }\n\n  protected setProgress(progress: number) {\n    this.progressDOM.style.transform = 'translate3d(' + progress + '%, 0px, 0px)';\n    this.progressDOM.getAttributeNode('data-progress-text').value = progress + '%';\n    this.progressDOM.getAttributeNode('data-progress').value = progress.toString();\n  }\n\n}\n\nexport function confirmPasswordValidator(form: FormGroup): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    if (form.controls) {\n      if (form.controls['password'].value !== form.controls['confirmPassword'].value){\n        return { equal: true };\n      }\n    }\n    return null;\n  };\n}\n","<h1 id=\"title\" class=\"title\">{{ 'header.set-password' | translate }}</h1>\n<p class=\"sub-title\">{{ 'subtitle.set-password' | translate }}</p>\n\n<nb-alert *ngIf=\"responseError\" outline=\"danger\" role=\"alert\">\n  <p class=\"alert-title\"><b>{{ 'alert.title.set-password' | translate }}</b></p>\n  <ul class=\"alert-message-list\">\n    <li class=\"alert-message\">{{ responseError }}</li>\n  </ul>\n</nb-alert>\n\n<form [formGroup]=\"form\" (ngSubmit)=\"activateAccount()\" aria-labelledby=\"title\">\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-newpassword\">{{ 'Password' | translate }}* :</label>\n    <input [formControlName]=\"'password'\"\n          [required]=\"true\"\n          minlength=\"8\"\n          maxlength=\"50\"\n          [pattern]=\"patternPassword\"\n          [ngClass]=\"{\n            'status-danger': hasErrorPassword,\n            'status-success': hasSuccessPassword\n          }\"\n          name=\"password\"\n          type=\"password\"\n          id=\"inputPassword\"\n          placeholder=\"{{ 'Password' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"4\"\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorPassword\">\n      <span class=\"caption status-danger\">{{ errorMsgPassword | translate}}</span>\n    </ng-container>\n  </div>\n\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-confirmpassword\">{{ 'Confirm Password' | translate }}* :</label>\n    <input [formControlName]=\"'confirmPassword'\"\n          [required]=\"true\"\n          minlength=\"8\"\n          maxlength=\"50\"\n          [ngClass]=\"{\n            'status-danger': hasErrorConfirmPassword,\n            'status-success': hasSuccessConfirmPassword\n          }\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          id=\"inputConfirmPassword\"\n          placeholder=\"{{ 'Confirm Password' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"5\"\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorConfirmPassword\">\n      <span class=\"caption status-danger\">{{ errorMsgConfirmPassword | translate}}</span>\n    </ng-container>\n  </div>\n\n  <button [disabled]=\"form.invalid || buttonForgotPassword\"\n          fullWidth\n          nbButton\n          status=\"primary\"\n          size=\"large\"\n          [class.btn-pulse]=\"form.invalid || buttonForgotPassword\">\n    {{ 'Set Password' | translate }}\n  </button>\n</form>\n\n<section class=\"another-action\" aria-label=\"Sign in\">\n  {{ 'message.set-password-footer' | translate}} <a class=\"text-link\" routerLink=\"/auth/login\" tabindex=\"-1\">{{ 'Login' | translate}}</a>\n</section>\n","import { Component, Inject, OnDestroy } from '@angular/core';\nimport { HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Idle } from '@ng-idle/core';\nimport { API, APIModel, HttpFactoryService, HTTP_SERVICE, OAUTH_INFO, SecurityResourceModel } from '@dongkap/do-core';\nimport { AuthIndexedDBService } from '../../services/storage/auth-indexeddb.service';\nimport { ProfileIndexedDBService } from '../../services/storage/profile-indexeddb.service';\nimport { SettingsIndexedDBService } from '../../services/storage/settings-indexeddb.service';\n\n@Component({\n  selector: 'do-oauth2-callback',\n  styleUrls: ['oauth2-callback.component.scss'],\n  templateUrl: 'oauth2-callback.component.html',\n})\nexport class OAuth2CallbackComponent implements OnDestroy {\n\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(\n    private router: Router,\n    route: ActivatedRoute,\n    @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    @Inject(API)private apiPath: APIModel,\n    private authIndexedDB: AuthIndexedDBService,\n    private profileIndexedDB: ProfileIndexedDBService,\n    private settingsIndexedDB: SettingsIndexedDBService,\n    private idle: Idle) {\n    if (route.snapshot.queryParams['access_token']) {\n      this.extractToken(route.snapshot.queryParams['access_token']);\n    } else if (route.snapshot.queryParams['error']) {\n      this.router.navigate(['/auth'], { queryParams: { error: route.snapshot.queryParams['error'] }});\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private extractToken(accessToken: string) {\n    return this.httpBaseService.\n    HTTP_BASE(this.apiPath['auth']['extract-token'],\n        this.getAuthBody(accessToken).toString(),\n        this.getAuthHeader())\n            .pipe(takeUntil(this.destroy$))\n            .toPromise()\n            .then((response: HttpResponse<any>) => {\n                this.idle.setIdle(+response['expires_in']);\n                this.idle.watch();\n                /* console.log('[DONGKAP] Session Idle Start'); */\n                /* console.log('[DONGKAP] Session Timeout in ' + response['expires_in'] + ' seconds'); */\n                this.authIndexedDB.loginStorage(response);\n                this.profileIndexedDB.loginStorage(response);\n                this.settingsIndexedDB.loginStorage(response);\n                this.router.navigate(['/app/home']);\n            })\n            .catch((error: any) => {\n              this.router.navigate(['/auth']);\n            });\n  }\n\n  private getAuthBody(accessToken: string): URLSearchParams {\n    const body = new URLSearchParams();\n    body.append('access_token', accessToken);\n    return body;\n  }\n\n  private getAuthHeader(): HttpHeaders {\n    return new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: 'Basic ' +\n            btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n        Accept: 'application/json',\n    });\n}\n}\n","<p class=\"sub-title\">{{ 'message.callback' | translate }}</p>\n<div class=\"spinner-area\" [nbSpinner]=\"true\" nbSpinnerSize=\"small\" nbSpinnerStatus=\"info\">","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { UnauthorizeGuardService } from './services/unauth-guard.service';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { AuthComponent } from './pages/layout/auth.component';\nimport { LoginPageComponent } from './pages/login/login-page.component';\nimport { LogoutComponent } from './pages/logout/logout.component';\nimport { ForceLoginPageComponent } from './pages/force/force-login-page.component';\nimport { RequestForgotPageComponent } from './pages/forgot/request-forgot-page.component';\nimport { ForgotPageComponent } from './pages/forgot/forgot-page.component';\nimport { RegisterPageComponent } from './pages/register/register-page.component';\nimport { ActivateAccountPageComponent } from './pages/activate-account/activate-account-page.component';\nimport { OAuth2CallbackComponent } from './pages/oauth2/oauth2-callback.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: AuthComponent,\n  children: [\n    {\n      path: '',\n      component: LoginPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'login',\n      component: LoginPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'force',\n      component: ForceLoginPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'register',\n      component: RegisterPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'forgot-password',\n      component: RequestForgotPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'forgot-password/:id/:code',\n      component: ForgotPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'activate/:id/:code',\n      component: ActivateAccountPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'callback',\n      component: OAuth2CallbackComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'logout',\n      component: LogoutComponent,\n      canActivate: [AuthGuardService],\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DoAuthRoutingModule {\n}\n","import { Injectable } from '@angular/core';\nimport { RouterStateSnapshot } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { CanActivateChild } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { EncryptionService } from '@dongkap/do-core';\nimport { AuthTokenService } from './auth-token.service';\nimport { AuthIndexedDBService } from './storage/auth-indexeddb.service';\n\n@Injectable()\nexport class AuthGuardChildService implements CanActivateChild {\n    constructor(\n        private router: Router,\n        private authTokenService: AuthTokenService,\n        private translate: TranslateService,\n        private enc: EncryptionService,\n        private storage: AuthIndexedDBService) {}\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n        const result$: Subject<boolean> = new Subject<boolean>();\n        this.authTokenService.isLogin().then((value: boolean) => {\n            result$.next(value);\n            if (route.data) {\n                if (route.data['title']) {\n                    this.translate.get(route.data['title']).subscribe(trans => {\n                        route.data['title'] = trans;\n                    });\n                }\n                Promise.all([\n                    this.storage.getEnc('menus'),\n                    this.storage.getEnc('extras'),\n                ]).then((strg: string[]) => {\n                    if (!(strg[0].includes(route.data['code']) || strg[1].includes(route.data['code']))) {\n                        this.router.navigate(['/app/home']);\n                    }\n                    return result$.asObservable();\n                });\n            }\n            if (!value) {\n                this.router.navigate(['/auth']);\n            }\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { Injectable, Inject, LOCALE_ID } from '@angular/core';\nimport { HttpHeaders, HttpRequest } from '@angular/common/http';\nimport { Observable, of, from } from 'rxjs';\nimport { take, switchMap } from 'rxjs/operators';\nimport { Pattern } from '@dongkap/do-core';\nimport { SettingsIndexedDBService } from './storage/settings-indexeddb.service';\n\n@Injectable()\nexport class AuthLanguageService {\n\n    constructor(\n        @Inject(LOCALE_ID) private locale: string,\n        private settingsIndexedDB: SettingsIndexedDBService) {}\n\n    getLocale(req: HttpRequest<any>): Observable<HttpRequest<any>> {\n        return from(this.settingsIndexedDB.get('locale')).pipe(\n            take(1),\n            switchMap((value: any) => {\n            let httpHeaders: HttpHeaders = req.headers ? req.headers : new HttpHeaders();\n            const localeCode: string = value ?\n            (\n                value.match(new RegExp(Pattern.LOCALE, 'g')) ?\n                value :\n                this.locale\n            ) : this.locale;\n            httpHeaders = httpHeaders.append('Accept-Language', localeCode);\n            return of(req.clone({ headers: httpHeaders }));\n        }));\n    }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpHeaders, HttpRequest } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DatePipe } from '@angular/common';\nimport { Observable, of, combineLatest } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport {\n    DateFormat,\n    EncryptionService,\n    oauthInfo,\n    OAUTH_INFO,\n    SecurityResourceModel,\n    signatureHeader,\n} from '@dongkap/do-core';\nimport { AuthIndexedDBService } from './storage/auth-indexeddb.service';\n\n@Injectable()\nexport class AuthSignatureService {\n\n    constructor(\n        private translate: TranslateService,\n        private enc: EncryptionService,\n        @Inject(OAUTH_INFO) private oauthResource: SecurityResourceModel,\n        private authStorage: AuthIndexedDBService) {}\n\n    private timeStamp: any;\n\n    public signHeaders(req: HttpRequest<any>): Observable<HttpRequest<any>> {\n        return combineLatest([\n            this.key(),\n            this.signature(this.getPath(req.url)),\n        ]).pipe(\n            take(1),\n            switchMap((value: string[]) => {\n            if (signatureHeader.signature) {\n                let httpHeaders: HttpHeaders = req.headers ? req.headers : new HttpHeaders();\n                httpHeaders.keys().forEach((key: string) => {\n                    if (key === signatureHeader.key) {\n                        httpHeaders = httpHeaders.delete(signatureHeader.key);\n                    }\n                    if (key === signatureHeader.timestamp) {\n                        httpHeaders = httpHeaders.delete(signatureHeader.timestamp);\n                    }\n                    if (key === signatureHeader.signature) {\n                        httpHeaders = httpHeaders.delete(signatureHeader.signature);\n                    }\n                });\n                httpHeaders = httpHeaders.set(signatureHeader.key, value[0]);\n                httpHeaders = httpHeaders.set(signatureHeader.timestamp, this.timeStamp);\n                httpHeaders = httpHeaders.set(signatureHeader.signature, value[1]);\n                return of(req.clone({ headers: httpHeaders }));\n            }\n            return of(req);\n        }));\n    }\n\n    public key(): Observable<string> {\n        return this.authStorage.getOfEnc(oauthInfo.public_key);\n    }\n\n    public timestamp(): string {\n        this.timeStamp = Math.floor(new Date().getTime() / 1000).toString();\n        return this.timeStamp;\n    }\n\n    public date(): string {\n        return new DatePipe(this.translate.currentLang).transform(new Date(), DateFormat.DATE);\n    }\n\n    public signature(url: string): Observable<string> {\n        return combineLatest([\n            this.key(),\n            this.authStorage.getOfEnc(oauthInfo.access_token),\n        ]).pipe(\n            take(1),\n            switchMap((value: string[]) => {\n            const key = value[0] + ':' +\n                         this.timestamp() + ':' +\n                        // this.date() + ':' +\n                        url + ':' +\n                        value[1];\n            return of(this.enc.getHmacSha256(this.oauthResource['private_key'], key));\n        }));\n    }\n\n    private getPath(url: string): string {\n        return '/' + url\n        .replace(/^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*(:[0-9]{1,5})?(\\/).*?/g, '');\n    }\n\n}\n","import { Injectable, Inject, OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport {\n    API,\n    APIModel,\n    HttpFactoryService,\n    HTTP_SERVICE,\n    UserModel,\n    UserService,\n} from '@dongkap/do-core';\nimport { ProfileIndexedDBService } from './storage/profile-indexeddb.service';\n\n@Injectable()\nexport class AuthUserService extends UserService implements OnDestroy {\n\n    constructor(\n        private profileIndexedDB: ProfileIndexedDBService,\n        @Inject(API)private apiPath: APIModel,\n        @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService) {\n        super();\n    }\n\n    private loaderUserSubject$ = new Subject<UserModel>();\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    public loadUser(): void {\n        this.profileIndexedDB.get('image').then((checksum: string) => {\n            this.putImageBase64(checksum);\n        });\n        this.httpBaseService.HTTP_AUTH(\n            this.apiPath['profile']['get-profile'])\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((response: any) => {\n                Promise.all([\n                    this.profileIndexedDB.put('name', response['name']),\n                    this.profileIndexedDB.put('email', response['email']),\n                    this.profileIndexedDB.put('image', response['image']),\n                ]).then();\n            });\n    }\n\n    public updateName(name: string): Observable<UserModel> {\n        this.profileIndexedDB.put('name', name).then(() => {\n            this.awaitUser();\n        });\n        return this.loaderUserSubject$.asObservable();\n    }\n\n    public updatePhoto(checksum: string): Observable<UserModel> {\n        this.profileIndexedDB.put('image', checksum).then(() => {\n            this.putImageBase64(checksum);\n        });\n        return this.loaderUserSubject$.asObservable();\n    }\n\n    public get onUserChange(): Observable<UserModel> {\n        this.awaitUser();\n        return this.loaderUserSubject$.asObservable();\n    }\n\n    private awaitUser(): void {\n        Promise.all([\n          this.profileIndexedDB.get('name'),\n          this.profileIndexedDB.get('image-base64'),\n        ]).then((value: any[]) => {\n            const user: UserModel = {\n                name: value[0],\n                image: value[1],\n            };\n            this.loaderUserSubject$.next(user);\n        });\n    }\n\n    private putImageBase64(checksum: any): void {\n        if (checksum) {\n            this.httpBaseService.HTTP_AUTH(\n            this.apiPath['profile']['get-photo-profile'], null, null, null,\n            [checksum], 'arraybuffer')\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((response: any) => {\n                const imageBlob = new Blob([response], {\n                    type: 'image/png',\n                });\n                const reader: FileReader = new FileReader();\n                reader.readAsDataURL(imageBlob);\n                reader.onloadend = () => {\n                    const imageBase64: string = reader.result.toString();\n                    this.profileIndexedDB.put('image-base64', imageBase64).then(() => {\n                        this.awaitUser();\n                    });\n                };\n            });\n        }\n    }\n\n}\n","import { HttpErrorResponse, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, EMPTY, Observable, throwError } from 'rxjs';\nimport { filter, take, switchMap, catchError } from 'rxjs/operators';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { AuthTokenService } from './auth-token.service';\nimport { AuthSignatureService } from './auth-signature.service';\nimport { AuthIndexedDBService } from './storage/auth-indexeddb.service';\n\nexport class HttpErrorHandler {\n\n    protected isRefreshingToken: boolean = false;\n    protected refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n    constructor(\n        protected translate: TranslateService,\n        protected authToken: AuthTokenService,\n        protected authStorage: AuthIndexedDBService,\n        protected authSignature: AuthSignatureService) {}\n\n    protected errorHandler(error: HttpErrorResponse, req: HttpRequest<any>, next: HttpHandler): Observable<any> {\n        let err: HttpErrorResponse = new HttpErrorResponse({\n            error: error.error,\n            headers: error.headers,\n            status: error.status,\n            statusText: error.statusText,\n            url: error.url,\n        });\n\n        if (error.error instanceof ArrayBuffer) {\n            const decodedString = String.fromCharCode.apply(null, new Uint8Array(error.error));\n            err = new HttpErrorResponse({\n                error: JSON.parse(decodedString),\n                headers: error.headers,\n                status: error.status,\n                statusText: error.statusText,\n                url: error.url,\n            });\n        }\n        switch (err.status) {\n            case 200:\n            case 201:\n            case 304:\n                return EMPTY;\n            case 400:\n                return this.error400(err);\n            case 401:\n                return this.error401(err, req, next);\n            case 404:\n            case 403:\n            case 500:\n            case 504:\n            case 0:\n                return throwError(this.errorDefault(err));\n            default:\n                break;\n        }\n        return throwError(err);\n    }\n\n    protected errorDefault(error: any | HttpErrorResponse): ApiBaseResponse {\n        let err: ApiBaseResponse = {\n            respStatusCode: error.status,\n            respStatusMessage: {},\n        };\n        err.respStatusMessage[err.respStatusCode] = error.statusText;\n        let msgKey: string = 'error.' + err.respStatusCode;\n        if (error.error) {\n            if (error.error['respStatusCode']) {\n                err = error.error;\n                msgKey = err.respStatusMessage[err.respStatusCode];\n            }\n        }\n        this.translate.get(msgKey).subscribe((result: string) => {\n            err.respStatusMessage[err.respStatusCode] = result;\n        });\n        return err;\n    }\n\n    protected error400(error: HttpErrorResponse): Observable<HttpEvent<any>> {\n        if (error.error['respStatusCode']) {\n            if (error.error['respStatusCode'] === 'invalid_grant') {\n                switch (error.error['respStatusMessage']['invalid_grant']) {\n                    case 'Bad credentials':\n                    case 'User account is locked':\n                    case 'User is disabled':\n                    case 'User account has expired':\n                    case 'User credentials have expired':\n                    case 'LDAP Server Error':\n                    case 'Invalid credentials.':\n                        return throwError(this.errorDefault(error));\n                    default:\n                        this.authToken.logout();\n                        return throwError(this.errorDefault(error));\n                }\n            } else {\n                return throwError(this.errorDefault(error));\n            }\n        }\n        return throwError(error);\n    }\n\n    protected error401(error: HttpErrorResponse, request: HttpRequest<any>, next: HttpHandler):\n        Observable<HttpEvent<any>> {\n        if (error.error) {\n            if (error.error['respStatusCode'] === 'invalid_token') {\n                if (!this.isRefreshingToken) {\n                    this.isRefreshingToken = true;\n                    this.refreshTokenSubject.next(null);\n                    return this.authToken.refresh().pipe(\n                        switchMap((response: any) => {\n                            this.isRefreshingToken = false;\n                            this.refreshTokenSubject.next(response);\n                            return this.authToken.oauthHeaders(request).pipe(\n                                switchMap((req: any) => {\n                                    request = req;\n                                    return this.authSignature.signHeaders(request).pipe(\n                                        switchMap((valReq: any) => {\n                                            return next.handle(valReq);\n                                        }),\n                                    );\n                                }));\n                        }),\n                        catchError((err: HttpErrorResponse) => {\n                            return this.errorHandler(err, request, next);\n                        }));\n                } else {\n                    const msg: string = error.error['respStatusMessage']['invalid_token'];\n                    if (msg.includes('expired')) {\n                        this.authToken.logout();\n                    } else {\n                        return this.refreshTokenSubject.pipe(\n                            filter(response => response != null),\n                            take(1),\n                            switchMap(() => {\n                                return this.authToken.oauthHeaders(request).pipe(\n                                    switchMap((req: any) => {\n                                        request = req;\n                                        return this.authSignature.signHeaders(request).pipe(\n                                            switchMap((valReq: any) => {\n                                                return next.handle(valReq);\n                                            }),\n                                        );\n                                    }));\n                            }));\n                    }\n                }\n            }\n        }\n        return throwError(error);\n    }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { catchError, takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { HttpErrorHandler } from './http-error.handler';\nimport { AuthTokenService } from './auth-token.service';\nimport { AuthSignatureService } from './auth-signature.service';\nimport { AuthIndexedDBService } from './storage/auth-indexeddb.service';\n\n@Injectable()\nexport class HttpInterceptorErrorService extends HttpErrorHandler implements HttpInterceptor, OnDestroy {\n\n    constructor(\n        public translate: TranslateService,\n        public authToken: AuthTokenService,\n        public authStorage: AuthIndexedDBService,\n        public authSignature: AuthSignatureService) {\n        super(translate, authToken, authStorage, authSignature);\n    }\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(req).pipe(\n            catchError(error => {\n                if (error instanceof HttpErrorResponse) {\n                    return this.errorHandler(error, req, next);\n                } else {\n                    return throwError(error);\n                }\n        })).pipe(takeUntil(this.destroy$));\n    }\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { signatureHeader } from '@dongkap/do-core';\nimport { AuthLanguageService } from './auth-lang.service';\n\n@Injectable()\nexport class HttpInterceptorLangService implements HttpInterceptor, OnDestroy {\n\n    constructor(private authLanguage: AuthLanguageService) {}\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.headers) {\n            if (req.headers.has(signatureHeader.mark)) {\n                return this.authLanguage.getLocale(req).pipe(switchMap((value: HttpRequest<any>) => {\n                    return next.handle(value);\n                }));\n            }\n        }\n        return next.handle(req).pipe(takeUntil(this.destroy$));\n    }\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable, OnDestroy, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { OAUTH_INFO, SecurityResourceModel, signatureHeader } from '@dongkap/do-core';\nimport { AuthSignatureService } from './auth-signature.service';\n\n@Injectable()\nexport class HttpInterceptorSignatureService implements HttpInterceptor, OnDestroy {\n\n    constructor(\n        private authSignature: AuthSignatureService,\n        @Inject(OAUTH_INFO) private oauthResource: SecurityResourceModel) {}\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.headers) {\n            if (req.headers.has(signatureHeader.mark) && this.oauthResource.signature) {\n                return this.authSignature.signHeaders(req).pipe(switchMap((value: HttpRequest<any>) => {\n                    return next.handle(value);\n                }));\n            }\n        }\n        return next.handle(req).pipe(takeUntil(this.destroy$));\n    }\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { signatureHeader } from '@dongkap/do-core';\nimport { AuthTokenService } from './auth-token.service';\n\n@Injectable()\nexport class HttpInterceptorTokenService implements HttpInterceptor, OnDestroy {\n\n    constructor(private authToken: AuthTokenService) {}\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.headers) {\n            if (req.headers.has(signatureHeader.mark)) {\n                return this.authToken.oauthHeaders(req).pipe(switchMap((reqAuth: any) => {\n                    return next.handle(reqAuth);\n                }));\n            }\n        }\n        return next.handle(req).pipe(takeUntil(this.destroy$));\n    }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { RecaptchaFormsModule, RecaptchaModule } from 'ng-recaptcha';\nimport {\n  NbAlertModule,\n  NbButtonModule,\n  NbCardModule,\n  NbCheckboxModule,\n  NbDialogModule,\n  NbIconModule,\n  NbInputModule,\n  NbSpinnerModule,\n} from '@nebular/theme';\nimport { DoThemeModule } from '@dongkap/do-theme';\nimport { DoToastrModule } from '@dongkap/do-shared';\nimport {\n  AUTH_INDEXED_DB,\n  PROFILE_INDEXED_DB,\n  SETTINGS_INDEXED_DB,\n  USER_SERVICE,\n} from '@dongkap/do-core';\nimport { DoLayoutAuthModule } from './do-layout-auth.module';\nimport { DoAuthRoutingModule } from './do-auth-routing.module';\nimport { AuthForceService } from './services/auth-force.service';\nimport { AuthGuardChildService } from './services/auth-guard-child.service';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { AuthLanguageService } from './services/auth-lang.service';\nimport { AuthSignatureService } from './services/auth-signature.service';\nimport { AuthTokenService } from './services/auth-token.service';\nimport { AuthUserService } from './services/auth-user.service';\nimport { HttpInterceptorErrorService } from './services/http-interceptor-error.service';\nimport { HttpInterceptorLangService } from './services/http-interceptor-lang.service';\nimport { HttpInterceptorSignatureService } from './services/http-interceptor-signature.service';\nimport { HttpInterceptorTokenService } from './services/http-interceptor-token.service';\nimport { AuthIndexedDBService } from './services/storage/auth-indexeddb.service';\nimport { ProfileIndexedDBService } from './services/storage/profile-indexeddb.service';\nimport { SettingsIndexedDBService } from './services/storage/settings-indexeddb.service';\nimport { UnauthorizeGuardService } from './services/unauth-guard.service';\nimport { LoginPageComponent } from './pages/login/login-page.component';\nimport { TermsConditionsComponent } from './pages/terms-conditions/terms-conditions.component';\nimport { LogoutComponent } from './pages/logout/logout.component';\nimport { ForceLoginPageComponent } from './pages/force/force-login-page.component';\nimport { ForgotPageComponent } from './pages/forgot/forgot-page.component';\nimport { RequestForgotPageComponent } from './pages/forgot/request-forgot-page.component';\nimport { RegisterPageComponent } from './pages/register/register-page.component';\nimport { ActivateAccountPageComponent } from './pages/activate-account/activate-account-page.component';\nimport { OAuth2CallbackComponent } from './pages/oauth2/oauth2-callback.component';\n\nexport const AUTH_PROVIDERS = [\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorTokenService, multi: true},\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorSignatureService, multi: true},\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorLangService, multi: true},\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorErrorService, multi: true},\n  { provide: USER_SERVICE, useClass: AuthUserService },\n  { provide: AUTH_INDEXED_DB, useClass: AuthIndexedDBService },\n  { provide: PROFILE_INDEXED_DB, useClass: ProfileIndexedDBService },\n  { provide: SETTINGS_INDEXED_DB, useClass: SettingsIndexedDBService },\n  AuthGuardService,\n  UnauthorizeGuardService,\n  AuthTokenService,\n  AuthGuardChildService,\n  AuthSignatureService,\n  AuthLanguageService,\n  AuthForceService\n];\n\nexport const AUTH_COMPONENTS = [\n  LoginPageComponent,\n  LogoutComponent,\n  ForceLoginPageComponent,\n  ForgotPageComponent,\n  RequestForgotPageComponent,\n  RegisterPageComponent,\n  ActivateAccountPageComponent,\n  TermsConditionsComponent,\n  OAuth2CallbackComponent,\n];\n\n@NgModule({\n  declarations: [\n    ...AUTH_COMPONENTS,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RecaptchaModule,\n    RecaptchaFormsModule,\n    NbCheckboxModule,\n    NbAlertModule,\n    NbInputModule,\n    NbButtonModule,\n    NbIconModule,\n    NbCardModule,\n    NbSpinnerModule,\n    NbDialogModule.forChild(),\n    DoThemeModule,\n    DoToastrModule.forRoot(),\n    DoLayoutAuthModule,\n    DoAuthRoutingModule,\n  ],\n  exports: [\n    ...AUTH_COMPONENTS,\n  ],\n})\nexport class DoAuthModule {\n  static forRoot(): ModuleWithProviders<DoAuthModule> {\n    return {\n      ngModule: DoAuthModule,\n      providers: [\n        ...AUTH_PROVIDERS,\n      ],\n    };\n  }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'do-404',\n  styleUrls: ['./404.component.scss'],\n  templateUrl: './404.component.html',\n})\nexport class PageNotFoundComponent {\n\n  constructor(private router: Router) {\n  }\n\n  goToHome() {\n    this.router.navigate(['/app/home']);\n    return;\n  }\n}\n","<div class=\"flex-centered\">\n  <h2 class=\"title\">404</h2>\n  <h2 class=\"title\">Page Not Found</h2>\n  <small class=\"sub-title\">The page you were looking for doesn't exist</small>\n  <button nbButton fullWidth (click)=\"goToHome()\" type=\"button\" class=\"home-button\">\n    Take me home\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PageNotFoundComponent } from './pages/404/404.component';\nimport { AuthComponent } from './pages/layout/auth.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      {\n        path: '404',\n        component: PageNotFoundComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MiscellaneousRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { NbButtonModule, NbIconModule } from '@nebular/theme';\nimport { CommonModule } from '@angular/common';\n\nimport { DoThemeModule } from '@dongkap/do-theme';\nimport { DoLayoutAuthModule } from './do-layout-auth.module';\nimport { MiscellaneousRoutingModule } from './miscellaneous-routing.module';\nimport { PageNotFoundComponent } from './pages/404/404.component';\n\n@NgModule({\n  imports: [\n    NbButtonModule,\n    NbIconModule,\n    CommonModule,\n    DoThemeModule,\n    DoLayoutAuthModule,\n    MiscellaneousRoutingModule,\n  ],\n  declarations: [\n    PageNotFoundComponent,\n  ],\n})\nexport class MiscellaneousModule { }\n","/*\n * Public API Surface of do-auth\n */\n\nexport * from './lib/do-auth.module';\nexport * from './lib/miscellaneous.module';\nexport { AuthGuardChildService } from './lib/services/auth-guard-child.service';\nexport { AuthGuardService } from './lib/services/auth-guard.service';\nexport { AuthIndexedDBService } from './lib/services/storage/auth-indexeddb.service';\nexport { ProfileIndexedDBService } from './lib/services/storage/profile-indexeddb.service';\nexport { SettingsIndexedDBService } from './lib/services/storage/settings-indexeddb.service';\nexport { AuthTokenService } from './lib/services/auth-token.service';\nexport { UnauthorizeGuardService } from './lib/services/unauth-guard.service';\nexport { AuthSignatureService } from './lib/services/auth-signature.service';\nexport { AuthUserService } from './lib/services/auth-user.service';\n\nexport { LoginPageComponent } from './lib/pages/login/login-page.component';\nexport { ForceLoginPageComponent } from './lib/pages/force/force-login-page.component';\nexport { TermsConditionsComponent } from './lib/pages/terms-conditions/terms-conditions.component';\nexport { RequestForgotPageComponent } from './lib/pages/forgot/request-forgot-page.component';\nexport { ForgotPageComponent } from './lib/pages/forgot/forgot-page.component';\nexport { ActivateAccountPageComponent } from './lib/pages/activate-account/activate-account-page.component';\nexport { RegisterPageComponent } from './lib/pages/register/register-page.component';\nexport { LogoutComponent } from './lib/pages/logout/logout.component';\nexport { OAuth2CallbackComponent } from './lib/pages/oauth2/oauth2-callback.component';\nexport { PageNotFoundComponent } from './lib/pages/404/404.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0","Component","i1","i2","i3.AuthBlockComponent","i4","NbLayoutModule","NbCardModule","NbIconModule","CommonModule","HttpClientModule","RouterModule","DoThemeModule","NgModule","Subject","oauthInfoModels","TypeDataOauth","additionalInfoModels","oauthInfo","IndexedDBService","Injectable","TranslateService","DEFAULT_INTERRUPTSOURCES","takeUntil","switchMap","map","HttpHeaders","signatureHeader","HTTP_SERVICE","OAUTH_INFO","API","i2.AuthIndexedDBService","i3.ProfileIndexedDBService","i4.SettingsIndexedDBService","i5","Inject","i2.AuthTokenService","USER_SERVICE","Input","FormGroup","FormControl","HttpErrorResponse","ResponseCode","i3","i4.AuthTokenService","i5.AuthForceService","i6","i7","i1.AuthTokenService","i3.AuthForceService","Pattern","confirmPasswordValidator","i8","of","debounceTime","distinctUntilChanged","first","routes","i5.AuthIndexedDBService","from","take","LOCALE_ID","i1.SettingsIndexedDBService","combineLatest","DatePipe","DateFormat","i3.AuthIndexedDBService","UserService","i1.ProfileIndexedDBService","BehaviorSubject","EMPTY","throwError","catchError","filter","i4.AuthSignatureService","i1.AuthLanguageService","HTTP_INTERCEPTORS","AUTH_INDEXED_DB","PROFILE_INDEXED_DB","SETTINGS_INDEXED_DB","FormsModule","TranslateModule","ReactiveFormsModule","RecaptchaModule","RecaptchaFormsModule","NbCheckboxModule","NbAlertModule","NbInputModule","NbButtonModule","NbSpinnerModule","NbDialogModule","DoToastrModule"],"mappings":"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"}