{"version":3,"file":"dongkap-do-auth.js","sources":["../../../../@dongkap/do-auth/src/lib/pages/layout/auth-block/auth-block.component.ts","../../../../@dongkap/do-auth/src/lib/pages/layout/auth.component.ts","../../../../@dongkap/do-auth/src/lib/pages/layout/auth.component.html","../../../../@dongkap/do-auth/src/lib/do-layout-auth.module.ts","../../../../@dongkap/do-auth/src/lib/services/storage/auth-indexeddb.service.ts","../../../../@dongkap/do-auth/src/lib/services/storage/profile-indexeddb.service.ts","../../../../@dongkap/do-auth/src/lib/services/storage/settings-indexeddb.service.ts","../../../../@dongkap/do-auth/src/lib/services/auth-token.service.ts","../../../../@dongkap/do-auth/src/lib/services/unauth-guard.service.ts","../../../../@dongkap/do-auth/src/lib/services/auth-guard.service.ts","../../../../@dongkap/do-auth/src/lib/pages/terms-conditions/terms-conditions.component.ts","../../../../@dongkap/do-auth/src/lib/pages/terms-conditions/terms-conditions.component.html","../../../../@dongkap/do-auth/src/lib/services/auth-force.service.ts","../../../../@dongkap/do-auth/src/lib/pages/login/login-page.component.ts","../../../../@dongkap/do-auth/src/lib/pages/login/login-page.component.html","../../../../@dongkap/do-auth/src/lib/pages/logout/logout.component.ts","../../../../@dongkap/do-auth/src/lib/pages/logout/logout.component.html","../../../../@dongkap/do-auth/src/lib/pages/force/force-login-page.component.ts","../../../../@dongkap/do-auth/src/lib/pages/force/force-login-page.component.html","../../../../@dongkap/do-auth/src/lib/pages/forgot/request-forgot-page.component.ts","../../../../@dongkap/do-auth/src/lib/pages/forgot/request-forgot-page.component.html","../../../../@dongkap/do-auth/src/lib/pages/forgot/forgot-page.component.ts","../../../../@dongkap/do-auth/src/lib/pages/forgot/forgot-page.component.html","../../../../@dongkap/do-auth/src/lib/pages/register/register-page.component.ts","../../../../@dongkap/do-auth/src/lib/pages/register/register-page.component.html","../../../../@dongkap/do-auth/src/lib/pages/activate-account/activate-account-page.component.ts","../../../../@dongkap/do-auth/src/lib/pages/activate-account/activate-account-page.component.html","../../../../@dongkap/do-auth/src/lib/pages/oauth2/oauth2-callback.component.ts","../../../../@dongkap/do-auth/src/lib/pages/oauth2/oauth2-callback.component.html","../../../../@dongkap/do-auth/src/lib/do-auth-routing.module.ts","../../../../@dongkap/do-auth/src/lib/services/auth-guard-child.service.ts","../../../../@dongkap/do-auth/src/lib/services/auth-lang.service.ts","../../../../@dongkap/do-auth/src/lib/services/auth-signature.service.ts","../../../../@dongkap/do-auth/src/lib/services/auth-user.service.ts","../../../../@dongkap/do-auth/src/lib/services/http-error.handler.ts","../../../../@dongkap/do-auth/src/lib/services/http-interceptor-error.service.ts","../../../../@dongkap/do-auth/src/lib/services/http-interceptor-lang.service.ts","../../../../@dongkap/do-auth/src/lib/services/http-interceptor-signature.service.ts","../../../../@dongkap/do-auth/src/lib/services/http-interceptor-token.service.ts","../../../../@dongkap/do-auth/src/lib/do-auth.module.ts","../../../../@dongkap/do-auth/src/lib/pages/404/404.component.ts","../../../../@dongkap/do-auth/src/lib/pages/404/404.component.html","../../../../@dongkap/do-auth/src/lib/miscellaneous-routing.module.ts","../../../../@dongkap/do-auth/src/lib/miscellaneous.module.ts","../../../../@dongkap/do-auth/src/public-api.ts","../../../../@dongkap/do-auth/src/dongkap-do-auth.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'do-auth-block',\n  styleUrls: ['auth-block.component.scss'],\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class AuthBlockComponent {\n\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'do-auth',\n  styleUrls: ['auth.component.scss'],\n  templateUrl: 'auth.component.html',\n})\nexport class AuthComponent implements OnDestroy {\n\n    alive: boolean;\n    subscription: any;\n    authenticated: boolean;\n    token: string;\n\n    constructor(private location: Location) {}\n\n    public back(): boolean {\n        this.location.back();\n        return false;\n    }\n\n    ngOnDestroy(): void {\n        this.alive = false;\n    }\n\n}\n","<nb-layout>\n    <nb-layout-column>\n        <nb-card>\n            <nb-card-header>\n                <nav class=\"navigation\">\n                    <a href=\"#\" (click)=\"back()\" class=\"link back-link\" aria-label=\"Back\" tabindex=\"-1\">\n                        <nb-icon icon=\"arrow-back\"></nb-icon>\n                    </a>\n                </nav>\n            </nb-card-header>\n            <nb-card-body>\n                <do-auth-block>\n                    <router-outlet></router-outlet>\n                </do-auth-block>\n            </nb-card-body>\n        </nb-card>\n    </nb-layout-column>\n</nb-layout>","import { NgModule } from '@angular/core';\nimport {\n  NbCardModule,\n  NbLayoutModule,\n  NbIconModule,\n} from '@nebular/theme';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { DoThemeModule } from '@dongkap/do-theme';\nimport { AuthComponent } from './pages/layout/auth.component';\nimport { AuthBlockComponent } from './pages/layout/auth-block/auth-block.component';\n\n@NgModule({\n  declarations: [\n    AuthComponent,\n    AuthBlockComponent,\n  ],\n  imports: [\n    NbLayoutModule,\n    NbCardModule,\n    NbIconModule,\n    CommonModule,\n    HttpClientModule,\n    RouterModule,\n    DoThemeModule,\n  ],\n  exports: [\n    AuthComponent,\n    AuthBlockComponent,\n  ],\n})\nexport class DoLayoutAuthModule {}\n","import { Injectable, Injector } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { StoreKey } from 'idb';\nimport {\n  additionalInfoModels,\n  IndexedDBEncFactoryService,\n  IndexedDBService,\n  oauthInfo,\n  oauthInfoModels,\n  TypeDataOauth,\n} from '@dongkap/do-core';\nimport { AuthIDB } from '../../models/auth.schema';\n\n@Injectable({providedIn : 'root'})\nexport class AuthIndexedDBService extends IndexedDBService<AuthIDB> implements IndexedDBEncFactoryService {\n\n  constructor(injector: Injector) {\n      super(injector, 'do-core', 1, '#do-auth');\n  }\n\n  public async getEnc(key, storeName?: any): Promise<AuthIDB['#do-auth']['value']> {\n    const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n    return ((await this.$dbPromise).get(storeName ? storeName : '#do-auth', keyEncrypted)).then((value: any) => {\n      return this.enc.decryptAES(this.oauthResource['aes_key'], value);\n    });\n  }\n  public async putEnc(key, val, storeName?: any): Promise<StoreKey<AuthIDB, any>> {\n    const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n    const valueEncrypted = this.enc.encryptAES(this.oauthResource['aes_key'], val);\n    return (await this.$dbPromise).put(storeName ? storeName : '#do-auth', valueEncrypted, keyEncrypted);\n  }\n  public async removeEnc(key, storeName?: any): Promise<void> {\n    const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n    return (await this.$dbPromise).delete(storeName ? storeName : '#do-auth', keyEncrypted);\n  }\n\n  public getOfEnc(key, storeName?: any): Observable<any> {\n    const result$: Subject<any> = new Subject<any>();\n    this.getEnc(key, storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n  public putOfEnc(key, val, storeName?: any): Observable<any> {\n    const result$: Subject<any> = new Subject<any>();\n    this.putEnc(key, val, storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n  public removeOfEnc(key, storeName?: any): Observable<void> {\n    const result$: Subject<any> = new Subject<any>();\n    this.removeEnc(key, storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n\n  public loginStorage(response: any): void {\n    oauthInfoModels.forEach(data => {\n      if (response[data.key]) {\n        if (data.type === TypeDataOauth.OAUTH && data.persist) {\n          if (data.enc) {\n            this.putEnc(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          } else {\n            this.put(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          }\n        }\n      }\n    });\n  }\n\n  public logout(): void {\n    oauthInfoModels.forEach(data => {\n      if (data.enc) {\n        if (data.type === TypeDataOauth.OAUTH) {\n          this.removeEnc(data.key).then();\n        }\n      }\n    });\n    additionalInfoModels.forEach(data => {\n      if (data.enc) {\n        if (data.type === TypeDataOauth.OAUTH) {\n          this.removeEnc(data.key).then();\n        }\n      }\n    });\n  }\n\n  public async isLogin(): Promise<boolean> {\n      if (await this.getEnc(oauthInfo.access_token)) {\n        return true;\n      }\n      oauthInfoModels.forEach(data => {\n        this.removeEnc(data.key).then();\n      });\n      return false;\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport {\n  additionalInfoModels,\n  IndexedDBFactoryService,\n  IndexedDBService,\n  oauthInfoModels,\n  TypeDataOauth,\n} from '@dongkap/do-core';\nimport { ProfileIDB } from '../../models/profile.schema';\n\n@Injectable({providedIn : 'root'})\nexport class ProfileIndexedDBService extends IndexedDBService<ProfileIDB> implements IndexedDBFactoryService {\n\n  constructor(injector: Injector) {\n    super(injector, 'do-core', 1, '#do-profile');\n  }\n\n  public loginStorage(response: any): void {\n    oauthInfoModels.forEach(data => {\n        if (response[data.key]) {\n          if (data.type === TypeDataOauth.PROFILE && data.persist) {\n            this.put(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          }\n        }\n    });\n  }\n\n  public logout(): void {\n    oauthInfoModels.forEach(data => {\n      if (data.type === TypeDataOauth.PROFILE) {\n        this.remove(data.key);\n      }\n    });\n    additionalInfoModels.forEach(data => {\n      if (data.type === TypeDataOauth.PROFILE) {\n        this.remove(data.key);\n      }\n    });\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  IndexedDBFactoryService,\n  IndexedDBService,\n  oauthInfoModels,\n  TypeDataOauth,\n} from '@dongkap/do-core';\nimport { SettingsIDB } from '../../models/settings.schema';\n\n@Injectable({providedIn : 'root'})\nexport class SettingsIndexedDBService extends IndexedDBService<SettingsIDB> implements IndexedDBFactoryService {\n\n  private translate: TranslateService;\n\n  constructor(injector: Injector) {\n    super(injector, 'do-core', 1, '#do-settings');\n    this.translate = injector.get(TranslateService);\n  }\n\n  public loginStorage(response: any): void {\n    oauthInfoModels.forEach(data => {\n      if (response[data.key]) {\n        if (data.type === TypeDataOauth.SETTINGS && data.persist) {\n          this.put(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          if (data.key === 'locale') {\n            this.translate.getTranslation(response[data.key]).subscribe((lang: any) => {\n              this.translate.use(response[data.key]);\n              this.translate.setTranslation(response[data.key], lang, true);\n            });\n          }\n        }\n      }\n    });\n  }\n\n}\n","import { Injectable, Inject, OnDestroy } from '@angular/core';\nimport { HttpHeaders, HttpResponse, HttpRequest } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { map, switchMap, takeUntil } from 'rxjs/operators';\nimport { Idle, DEFAULT_INTERRUPTSOURCES } from '@ng-idle/core';\nimport {\n    API,\n    APIModel,\n    HttpFactoryService,\n    HTTP_SERVICE,\n    oauthInfo,\n    OAUTH_INFO,\n    SecurityResourceModel,\n    signatureHeader,\n} from '@dongkap/do-core';\nimport { AuthIndexedDBService } from './storage/auth-indexeddb.service';\nimport { ProfileIndexedDBService } from './storage/profile-indexeddb.service';\nimport { SettingsIndexedDBService } from './storage/settings-indexeddb.service';\n\n@Injectable()\nexport class AuthTokenService implements OnDestroy {\n\n    private timer: any;\n    protected destroy$: Subject<any> = new Subject<any>();\n\n    constructor(\n        @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n        @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n        @Inject(API)private apiPath: APIModel,\n        private router: Router,\n        private authIndexedDB: AuthIndexedDBService,\n        private profileIndexedDB: ProfileIndexedDBService,\n        private settingsIndexedDB: SettingsIndexedDBService,\n        private idle: Idle) {\n        idle.setIdle(oauthResource['session_idle']);\n        idle.setTimeout(oauthResource['session_timeout']);\n        idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\n        idle.onTimeout.subscribe(() => {\n            /* console.log('[Dongkap] Session Timeout'); */\n            this.logout();\n        });\n        idle.onIdleEnd.subscribe(() => {\n            /* console.log('[Dongkap] Session Idle End'); */\n        });\n    }\n\n    ngOnDestroy(): void {\n        clearInterval(this.timer);\n        this.destroy$.next(true);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public login(username: string, password: string): Promise<any> {\n        this.authIndexedDB.logout();\n        return this.httpBaseService.\n        HTTP_BASE(this.apiPath['auth']['token'],\n            this.getAuthBody(username, password).toString(),\n            this.getAuthHeader())\n                .pipe(takeUntil(this.destroy$))\n                .toPromise()\n                .then((response: HttpResponse<any>) => {\n                    this.idle.setIdle(+response['expires_in']);\n                    this.idle.watch();\n                    /* console.log('[DONGKAP] Session Idle Start'); */\n                    /* console.log('[DONGKAP] Session Timeout in ' + response['expires_in'] + ' seconds'); */\n                    this.authIndexedDB.loginStorage(response);\n                    this.profileIndexedDB.loginStorage(response);\n                    this.settingsIndexedDB.loginStorage(response);\n                });\n    }\n\n    public force(username: string, password: string): Promise<any> {\n        this.authIndexedDB.logout();\n        return this.httpBaseService.\n        HTTP_BASE(this.apiPath['auth']['force'],\n            this.getAuthBody(username, password).toString(),\n            this.getAuthHeader())\n                .pipe(takeUntil(this.destroy$))\n                .toPromise()\n                .then((response: HttpResponse<any>) => {\n                    this.idle.setIdle(+response['expires_in']);\n                    this.idle.watch();\n                    /* console.log('[DONGKAP] Session Idle Start'); */\n                    /* console.log('[DONGKAP] Session Timeout in ' + response['expires_in'] + ' seconds'); */\n                    this.authIndexedDB.loginStorage(response);\n                    this.profileIndexedDB.loginStorage(response);\n                    this.settingsIndexedDB.loginStorage(response);\n                });\n    }\n\n    public refresh(): Observable<any> {\n        return this.getBodyRefresh().pipe(switchMap((body: any) => {\n            return this.httpBaseService.\n            HTTP_BASE(this.apiPath['auth']['token'],\n                body,\n                this.getAuthHeader())\n                .pipe(takeUntil(this.destroy$))\n                .pipe(map((response: any) => {\n                    this.idle.setIdle(response['expires_in']);\n                    this.authIndexedDB.logout();\n                    this.authIndexedDB.loginStorage(response);\n                }));\n        }));\n    }\n\n    public logout() {\n        this.timer = setInterval(() => {\n            this.doLogout();\n        }, 5000);\n        this.httpBaseService.HTTP_AUTH(this.apiPath['security']['revoke'])\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n                this.doLogout();\n            });\n    }\n\n    private doLogout() {\n        this.authIndexedDB.logout();\n        this.profileIndexedDB.logout();\n        clearInterval(this.timer);\n        this.idle.stop();\n        this.router.navigate(['/auth']);\n    }\n\n    public async isLogin(): Promise<boolean> {\n        return await this.authIndexedDB.isLogin();\n    }\n\n    public oauthHeaders(request: HttpRequest<any>): Observable<HttpRequest<any>> {\n        const result$: Subject<HttpRequest<any>> = new Subject<HttpRequest<any>>();\n        let httpHeaders: HttpHeaders = request.headers ? request.headers : new HttpHeaders();\n        httpHeaders = httpHeaders.has(signatureHeader.authorization) ?\n                        httpHeaders.delete(signatureHeader.authorization) : httpHeaders;\n        Promise.all([\n            this.authIndexedDB.getEnc(oauthInfo.token_type),\n            this.authIndexedDB.getEnc(oauthInfo.access_token)])\n        .then((value: string[]) => {\n            httpHeaders = httpHeaders.set(signatureHeader.authorization, value[0] + ' ' + value[1]);\n            result$.next(request.clone({ headers: httpHeaders }));\n        });\n        return result$.asObservable();\n    }\n\n    private getAuthHeader(): HttpHeaders {\n        return new HttpHeaders({\n            'Content-Type': 'application/x-www-form-urlencoded',\n            Authorization: 'Basic ' +\n                btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n            Accept: 'application/json',\n        });\n    }\n\n    private getAuthBody(username: string, password: string): URLSearchParams {\n        const body = new URLSearchParams();\n        body.append('client_id', this.oauthResource['client_id']);\n        body.append('grant_type', this.oauthResource['grant_type']);\n        body.append('username', username);\n        body.append('password', password);\n        body.append('platform', 'web');\n        return body;\n    }\n\n    private getBodyRefresh(): Observable<string> {\n        const result$: Subject<string> = new Subject<string>();\n        this.authIndexedDB.getEnc(oauthInfo.refresh_token).then((value: string) => {\n            const body: URLSearchParams = new URLSearchParams();\n            body.append('client_id', this.oauthResource['client_id']);\n            body.append('grant_type', 'refresh_token');\n            body.append('refresh_token', value);\n            result$.next(body.toString());\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { RouterStateSnapshot } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { CanActivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { AuthTokenService } from './auth-token.service';\n\n@Injectable()\nexport class UnauthorizeGuardService implements CanActivate {\n    constructor(private router: Router, private authTokenService: AuthTokenService) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n        const result$: Subject<boolean> = new Subject<boolean>();\n        this.authTokenService.isLogin().then((value: boolean) => {\n            result$.next(!value);\n            if (value) {\n                this.router.navigate(['/app']);\n            }\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { RouterStateSnapshot } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { CanActivate } from '@angular/router';\nimport { Injectable, Inject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { UserService, USER_SERVICE } from '@dongkap/do-core';\nimport { AuthTokenService } from './auth-token.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n    constructor(\n        private router: Router,\n        private authTokenService: AuthTokenService,\n        @Inject(USER_SERVICE) private authService: UserService) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n        const result$: Subject<boolean> = new Subject<boolean>();\n        this.authTokenService.isLogin().then((value: boolean) => {\n            result$.next(value);\n            if (!value) {\n                this.router.navigate(['/auth']);\n            } else {\n                if (state.url !== '/auth/logout') {\n                    this.authService.loadUser();\n                }\n            }\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'do-terms-conditions',\n  templateUrl: 'terms-conditions.component.html',\n  styleUrls: ['terms-conditions.component.scss'],\n})\nexport class TermsConditionsComponent {\n\n  @Input() content: string;\n  @Input() action: 'Agree' | 'Close' = 'Agree';\n\n  constructor(protected ref: NbDialogRef<TermsConditionsComponent>) {\n  }\n\n  submit() {\n    this.ref.close(true);\n  }\n}\n","<nb-card [size]=\"'medium'\">\n  <nb-card-header>\n    <h2>\n      <strong>\n        {{ 'header.terms-conditions' | translate }}\n      </strong>\n    </h2>\n  </nb-card-header>\n  <nb-card-body>\n    <div [innerHTML]=\"content\"></div>\n  </nb-card-body>\n  <nb-card-footer>\n    <button\n      type=\"submit\"\n      status=\"primary\"\n      size=\"large\"\n      class=\"terms-button\"\n      (click)=\"submit()\"\n      nbButton>\n      {{ action | translate }}\n    </button>\n  </nb-card-footer>\n</nb-card>\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthForceService {\n\n    private user: string;\n    private pass: string;\n\n    public isEmpty(): boolean {\n        return (this.user && this.pass) ? false: true;\n    }\n\n    public setData(user: string, pass: string) {\n        this.user = user;\n        this.pass = pass;\n    }\n\n    public get username(): string {\n        return this.user;\n    }\n\n    public get password(): string {\n        return this.pass;\n    }\n\n}\n","import { Component, Inject } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NbAuthSocialLink } from '@nebular/auth';\nimport { NbDialogService } from '@nebular/theme';\nimport {\n  API,\n  HTTP_SERVICE,\n  OAUTH_INFO,\n  ResponseCode,\n} from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { APIModel } from '@dongkap/do-core';\nimport { HttpFactoryService } from '@dongkap/do-core';\nimport { SecurityResourceModel } from '@dongkap/do-core';\nimport { AuthTokenService } from '../../services/auth-token.service';\nimport { AuthForceService } from '../../services/auth-force.service';\nimport { TermsConditionsComponent } from '../terms-conditions/terms-conditions.component';\n\n@Component({\n    selector: 'do-login-page',\n    styleUrls: ['login-page.component.scss'],\n    templateUrl: 'login-page.component.html',\n})\nexport class LoginPageComponent implements OnDestroy {\n\n  public responseError: any;\n  public responseErrorCode: any;\n  public buttonLogin: boolean = false;\n  public showPassword: boolean = false;\n  public icon: string = 'eye-outline';\n  private progress: number = 25;\n  protected progressDOM: HTMLElement;\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  public formGroup: FormGroup = new FormGroup({\n    username: new FormControl(),\n    password: new FormControl(),\n  });\n\n  private urlAuthorizeGoogle: string = this.httpBaseService.API(this.apiPath['auth']['authorize']) +\n    '/google?redirect_uri=' +\n    `${document.getElementsByTagName('base')[0].href}auth/callback`;\n\n  public socialLinks: NbAuthSocialLink[] = [\n    {\n      url: this.urlAuthorizeGoogle,\n      target: '_self',\n      icon: 'google',\n    }\n  ];\n\n  constructor(\n    private router: Router,\n    private dialogService: NbDialogService,\n    private translate: TranslateService,\n    private authTokenService: AuthTokenService,\n    private authForceService: AuthForceService,\n    @Inject(API) private apiPath: APIModel,\n    @Inject(HTTP_SERVICE) private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    route: ActivatedRoute) {\n    if (route.snapshot.queryParams['error']) {\n      this.responseError = 'error.' + route.snapshot.queryParams['error'];\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n  public login() {\n    if (!this.formGroup.invalid) {\n      this.initProgress();\n      if (this.progress < 35) {\n        this.setProgress(this.progress = 35);\n      }\n      this.buttonLogin = true;\n      this.authTokenService.login(\n        this.formGroup.get('username').value,\n        this.formGroup.get('password').value)\n        .then(() => {\n          this.setProgress(this.progress = 95);\n          this.progress = 0;\n          this.responseError = null;\n          this.router.navigate(['/app/home']);\n        })\n        .catch((error: any) => {\n          try {\n            if (error instanceof HttpErrorResponse) {\n              error = error['error'] as ApiBaseResponse;\n            }\n            const response: ApiBaseResponse = (error as ApiBaseResponse);\n            this.responseErrorCode = response?.respStatusCode;\n            this.responseError = response?.respStatusMessage[response?.respStatusCode];\n          } catch (error) {\n            this.responseError = 'error.500';\n          }\n          this.buttonLogin = false;\n          this.progress = 0;\n          this.doneProgress();\n          if (this.responseErrorCode === ResponseCode.ERR_SCR0000.toString()) {\n            this.authForceService.setData(\n              this.formGroup.get('username').value,\n              this.formGroup.get('password').value);\n            this.router.navigate(['/auth/force']);\n          }\n        });\n      if (this.progress >= 35 && this.progress < 65) {\n        this.setProgress(this.progress = 65);\n      }\n    }\n  }\n\n  onShowPassword(): void {\n    this.showPassword = !this.showPassword;\n    this.icon = this.showPassword ? 'eye-off-outline' :  'eye-outline';\n  }\n\n  get hasErrorUsername(): boolean {\n    return (\n      this.formGroup.controls['username'] &&\n      this.formGroup.controls['username'].invalid &&\n      this.formGroup.controls['username'].touched\n    );\n  }\n\n  get hasSuccessUsername(): boolean {\n    return (\n      this.formGroup.controls['username'] &&\n      this.formGroup.controls['username'].valid &&\n      this.formGroup.controls['username'].touched\n    );\n  }\n\n  get hasErrorPassword(): boolean {\n    return (\n      this.formGroup.controls['password'] &&\n      this.formGroup.controls['password'].invalid &&\n      this.formGroup.controls['password'].touched\n    );\n  }\n\n  get hasSuccessPassword(): boolean {\n    return (\n      this.formGroup.controls['password'] &&\n      this.formGroup.controls['password'].valid &&\n      this.formGroup.controls['password'].touched\n    );\n  }\n\n  public onClickTermsConditions() {\n    const data: any = {\n      parameterCode: 'TERMS_CONDITIONS.DONGKAP'\n    };\n    const httpHeaders: HttpHeaders = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n      'Content-Type': 'application/json',\n      'Accept-Language': this.translate.currentLang,\n    });\n    this.httpBaseService.HTTP_BASE(this.apiPath['openapi']['parameter'], data, httpHeaders)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response: any) => {\n      this.dialogService.open(TermsConditionsComponent, {\n        context: {\n          content: response['parameterValue'],\n          action: 'Close',\n        },\n        });\n    });\n  }\n\n  protected initProgress(): void {\n    document.querySelectorAll('.pace-done').forEach(pace => {\n    pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n    pace.className = pace.className.replace('pace-done', 'pace-running');\n    });\n    document.querySelectorAll('.pace-inactive').forEach(pace => {\n    pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n    pace.className = pace.className.replace('pace-inactive', 'pace-active');\n    });\n    this.progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n  }\n\n  protected doneProgress() {\n    document.querySelectorAll('.pace-running').forEach(pace => {\n    pace.className = pace.className.replace('pace-running', 'pace-done');\n    });\n    document.querySelectorAll('.pace-active').forEach(pace => {\n    pace.className = pace.className.replace('pace-active', 'pace-inactive');\n    });\n  }\n\n  protected setProgress(progress: number) {\n    this.progressDOM.style.transform = 'translate3d(' + progress + '%, 0px, 0px)';\n    this.progressDOM.getAttributeNode('data-progress-text').value = progress + '%';\n    this.progressDOM.getAttributeNode('data-progress').value = progress.toString();\n  }\n\n}\n","<h1 id=\"title\" class=\"title\">{{ 'Login' | translate }}</h1>\n<p class=\"sub-title\">{{ 'subtitle.login' | translate }}</p>\n<nb-alert *ngIf=\"responseError\" outline=\"danger\" role=\"alert\">\n  <p class=\"alert-title\"><b>{{ 'alert.title.login' | translate }}</b></p>\n  <ul class=\"alert-message-list\">\n    <li class=\"alert-message\">{{ responseError | translate }}</li>\n  </ul>\n</nb-alert>\n\n<form [formGroup]=\"formGroup\" (ngSubmit)=\"login()\" aria-labelledby=\"title\">\n  <div class=\"form-control-group\">\n    <label class=\"label\">{{ 'message.username-login' | translate }} :</label>\n    <input [formControlName]=\"'username'\"\n          [required]=\"true\"\n          [ngClass]=\"{\n            'status-danger': hasErrorUsername,\n            'status-success': hasSuccessUsername\n          }\"\n          name=\"username\"\n          id=\"inputUsername\"\n          placeholder=\"{{ 'message.username-login-placeholder' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"1\"\n          autofocus\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorUsername\">\n      <span class=\"caption status-danger\">{{'error.username-login' | translate}}</span>\n    </ng-container>\n  </div>\n\n  <div class=\"form-control-group\">\n    <span class=\"label-with-link\">\n      <label class=\"label\">{{ 'Password' | translate }} :</label>\n      <a class=\"forgot-password caption-2\" routerLink=\"/auth/forgot-password\" tabindex=\"-1\">{{ 'Forgot Password' | translate}}?</a>\n    </span>\n    <div class=\"input-group\">\n      <input [formControlName]=\"'password'\"\n            [required]=\"true\"\n            [ngClass]=\"{\n              'status-danger': hasErrorPassword,\n              'status-success': hasSuccessPassword\n            }\"\n            name=\"password\"\n            [type]=\"!showPassword ? 'password' : 'text'\"\n            id=\"inputPassword\"\n            placeholder=\"{{ 'Password' | translate }}\"\n            fieldSize=\"large\"\n            tabindex=\"2\"\n            nbInput\n            fullWidth>\n      <div class=\"input-icon\">\n        <nb-icon [options]=\"{ animation: { type: 'zoom' } }\" class=\"input-icon-hover\" icon=\"{{icon}}\" (click)=\"onShowPassword()\"></nb-icon>\n      </div>\n    </div>\n    <ng-container *ngIf=\"hasErrorPassword\">\n      <span class=\"caption status-danger\">{{ 'error.password' | translate}}</span>\n    </ng-container>\n  </div>\n\n  <button [disabled]=\"formGroup.invalid || buttonLogin\"\n          fullWidth\n          nbButton\n          status=\"primary\"\n          size=\"large\"\n          [class.btn-pulse]=\"formGroup.invalid || buttonLogin\">\n    {{ 'Login' | translate }}\n  </button>\n</form>\n<!--\n<section *ngIf=\"socialLinks && socialLinks.length > 0\" class=\"links\" aria-label=\"Social sign in\">\n  {{ 'message.login-footer-social' | translate}}:\n  <div class=\"socials\">\n    <ng-container *ngFor=\"let socialLink of socialLinks\">\n      <a *ngIf=\"socialLink.link\"\n         [routerLink]=\"socialLink.link\"\n         [attr.target]=\"socialLink.target\"\n         [attr.class]=\"socialLink.icon\"\n         [class.with-icon]=\"socialLink.icon\">\n        <nb-icon *ngIf=\"socialLink.icon; else title\" [icon]=\"socialLink.icon\"></nb-icon>\n        <ng-template #title>{{ socialLink.title }}</ng-template>\n      </a>\n      <a *ngIf=\"socialLink.url\"\n         [attr.href]=\"socialLink.url\"\n         [attr.target]=\"socialLink.target\"\n         [attr.class]=\"socialLink.icon\"\n         [class.with-icon]=\"socialLink.icon\">\n        <nb-icon *ngIf=\"socialLink.icon; else title\" [icon]=\"socialLink.icon\"></nb-icon>\n        <ng-template #title>{{ socialLink.title }}</ng-template>\n      </a>\n    </ng-container>\n  </div>\n</section>\n\n<section class=\"another-action\" aria-label=\"Register\">\n  {{ 'message.login-footer' | translate}} <a class=\"text-link\" routerLink=\"/auth/register\">{{ 'Register' | translate}}</a>\n</section>\n-->\n<section class=\"another-action\" aria-label=\"Terms and Conditions\">\n  <span class=\"terms-conditions\" (click)=\"onClickTermsConditions()\" tabindex=\"-1\">{{ 'message.terms-conditions' | translate}}</span>\n</section>\n","import { Component } from '@angular/core';\nimport { AuthTokenService } from '../../services/auth-token.service';\n\n@Component({\n    selector: 'do-logout',\n    styleUrls: ['logout.component.scss'],\n    templateUrl: 'logout.component.html',\n})\nexport class LogoutComponent {\n\n    constructor(private authTokenService: AuthTokenService) {\n        this.authTokenService.logout();\n    }\n}\n","<p class=\"sub-title\">{{ 'message.logout' | translate }}</p>\n<div class=\"spinner-area\" [nbSpinner]=\"true\" nbSpinnerSize=\"small\" nbSpinnerStatus=\"info\">","import { Component } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { DoToastrService } from '@dongkap/do-shared';\nimport { AuthTokenService } from '../../services/auth-token.service';\nimport { AuthForceService } from '../../services/auth-force.service';\n\n@Component({\n    selector: 'do-force-login-page',\n    styleUrls: ['./force-login-page.component.scss'],\n    templateUrl: 'force-login-page.component.html',\n})\nexport class ForceLoginPageComponent implements OnDestroy {\n\n  public responseError: any;\n  public responseErrorCode: any;\n  public buttonForceLogin: boolean = false;\n  private progress: number = 25;\n  protected progressDOM: HTMLElement;\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(\n    private router: Router,\n    private authTokenService: AuthTokenService,\n    private authForceService: AuthForceService,\n    private toastr: DoToastrService) {\n      if (this.authForceService.isEmpty()) {\n        this.router.navigate(['/auth']);\n      }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n  public forcelogin() {\n    if (!this.authForceService.isEmpty()) {\n      this.initProgress();\n      if (this.progress < 35) {\n        this.setProgress(this.progress = 35);\n      }\n      this.buttonForceLogin = true;\n      this.authTokenService.force(\n        this.authForceService.username,\n        this.authForceService.password)\n        .then(() => {\n          this.setProgress(this.progress = 95);\n          this.progress = 0;\n          this.responseError = null;\n          this.router.navigate(['/app/home']);\n        })\n        .catch((error: any) => {\n          try {\n            if (error instanceof HttpErrorResponse) {\n              error = error['error'] as ApiBaseResponse;\n            }\n            const response: ApiBaseResponse = (error as ApiBaseResponse);\n            this.responseError = response?.respStatusMessage[response?.respStatusCode];\n          } catch (error) {\n            this.responseError = 'error.500';\n          }\n          this.toastr.showI18n(this.responseError, true, null, 'danger');\n          this.buttonForceLogin = false;\n          this.progress = 0;\n          this.doneProgress();\n        });\n      if (this.progress >= 35 && this.progress < 65) {\n        this.setProgress(this.progress = 65);\n      }\n    }\n  }\n\n  protected initProgress(): void {\n    document.querySelectorAll('.pace-done').forEach(pace => {\n    pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n    pace.className = pace.className.replace('pace-done', 'pace-running');\n    });\n    document.querySelectorAll('.pace-inactive').forEach(pace => {\n    pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n    pace.className = pace.className.replace('pace-inactive', 'pace-active');\n    });\n    this.progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n  }\n\n  protected doneProgress() {\n    document.querySelectorAll('.pace-running').forEach(pace => {\n    pace.className = pace.className.replace('pace-running', 'pace-done');\n    });\n    document.querySelectorAll('.pace-active').forEach(pace => {\n    pace.className = pace.className.replace('pace-active', 'pace-inactive');\n    });\n  }\n\n  protected setProgress(progress: number) {\n    this.progressDOM.style.transform = 'translate3d(' + progress + '%, 0px, 0px)';\n    this.progressDOM.getAttributeNode('data-progress-text').value = progress + '%';\n    this.progressDOM.getAttributeNode('data-progress').value = progress.toString();\n  }\n\n}\n","<h1 id=\"title\" class=\"title\">{{ 'Login Warning' | translate }}</h1>\n<p class=\"sub-title\">{{ 'subtitle.force' | translate }}</p>\n\n<div class=\"form-control-group\">\n  <button fullWidth\n          nbButton\n          status=\"primary\"\n          size=\"large\"\n          [class.btn-pulse]=\"buttonForceLogin\"\n          [disabled]=\"buttonForceLogin\"\n          (click)=\"forcelogin()\">\n    {{ 'Force Login' | translate }}\n  </button>\n</div>\n\n<section class=\"sign-in-or-up\" aria-label=\"Sign in or sign up\">\n  <p>\n    {{ 'subtitle.force-footer' | translate }} <a class=\"text-link\" routerLink=\"/auth/login\">{{ 'Click here' | translate }}</a>\n  </p>\n  <!--\n  <p><a routerLink=\"/auth/register\" class=\"text-link\">{{ 'Register' | translate}}</a></p>\n  -->\n</section>\n","import { Component, Inject } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  API,\n  HTTP_SERVICE,\n  OAUTH_INFO,\n  Pattern,\n  ResponseCode,\n} from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { APIModel } from '@dongkap/do-core';\nimport { HttpFactoryService } from '@dongkap/do-core';\nimport { SecurityResourceModel } from '@dongkap/do-core';\nimport { DoToastrService } from '@dongkap/do-shared';\n\n@Component({\n    selector: 'do-request-forgot-page',\n    styleUrls: ['request-forgot-page.component.scss'],\n    templateUrl: 'request-forgot-page.component.html',\n})\nexport class RequestForgotPageComponent implements OnDestroy {\n\n  public responseError: any;\n  public buttonForgotPassword: boolean = false;\n  private progressBar: number = 25;\n  protected progressDOM: HTMLElement;\n\n  public patternEmail: string = Pattern.EMAIL;\n\n  public form: FormGroup = new FormGroup({\n    email: new FormControl(),\n  });\n\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(\n    private router: Router,\n    private toastr: DoToastrService,\n    private translate: TranslateService,\n    @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    @Inject(API)private apiPath: APIModel) {}\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n  public forgotPassword() {\n    if (!this.form.invalid) {\n      this.initProgress();\n      if (this.progressBar < 35) {\n        this.setProgress(this.progressBar = 35);\n      }\n\n      this.responseError = null;\n\n      // const urlForgotPassword: string = `${document.getElementsByTagName('base')[0].href}auth/forgot-password`;\n      const data: any = {\n        email: this.form.controls['email'].value,\n      };\n      const httpHeaders: HttpHeaders = new HttpHeaders({\n        Authorization: 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n        'Content-Type': 'application/json',\n        'Accept-Language': this.translate.currentLang,\n      });\n      this.buttonForgotPassword = true;\n      this.httpBaseService.HTTP_BASE(this.apiPath['auth']['request-forgot-password'], data, httpHeaders)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (response: ApiBaseResponse) => {\n          if (response) {\n            this.toastr.showI18n(response.respStatusMessage[response.respStatusCode]);\n            this.setProgress(this.progressBar = 95);\n            this.progressBar = 0;\n            if (response.respStatusCode === ResponseCode.OK_REQUEST_FORGOT_PASSWORD) {\n              this.router.navigate(['/auth/login']);\n            } else {\n              this.form.reset();\n              this.buttonForgotPassword = false;\n            }\n          } else {\n            this.form.reset();\n            this.buttonForgotPassword = false;\n          }\n        },\n        (error: any) => {\n          this.buttonForgotPassword = false;\n          this.progressBar = 0;\n          this.doneProgress();\n\n          if (!(error instanceof HttpErrorResponse)) {\n            if (error['respStatusCode']) {\n              this.responseError = error['respStatusMessage'][error['respStatusCode']];\n            }\n          } else {\n          }\n        });\n    }\n  }\n\n  get hasErrorEmail(): boolean {\n    return (\n      this.form.controls['email'] &&\n      this.form.controls['email'].invalid &&\n      this.form.controls['email'].touched\n    );\n  }\n\n  get hasSuccessEmail(): boolean {\n    return (\n      this.form.controls['email'] &&\n      this.form.controls['email'].valid &&\n      this.form.controls['email'].touched\n    );\n  }\n\n  protected initProgress(): void {\n    document.querySelectorAll('.pace-done').forEach(pace => {\n    pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n    pace.className = pace.className.replace('pace-done', 'pace-running');\n    });\n    document.querySelectorAll('.pace-inactive').forEach(pace => {\n    pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n    pace.className = pace.className.replace('pace-inactive', 'pace-active');\n    });\n    this.progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n  }\n\n  protected doneProgress() {\n    document.querySelectorAll('.pace-running').forEach(pace => {\n    pace.className = pace.className.replace('pace-running', 'pace-done');\n    });\n    document.querySelectorAll('.pace-active').forEach(pace => {\n    pace.className = pace.className.replace('pace-active', 'pace-inactive');\n    });\n  }\n\n  protected setProgress(progress: number) {\n    this.progressDOM.style.transform = 'translate3d(' + progress + '%, 0px, 0px)';\n    this.progressDOM.getAttributeNode('data-progress-text').value = progress + '%';\n    this.progressDOM.getAttributeNode('data-progress').value = progress.toString();\n  }\n\n}\n","<h1 id=\"title\" class=\"title\">{{ 'Forgot Password' | translate }}</h1>\n<p class=\"sub-title\">{{ 'subtitle.forgot-password' | translate }}</p>\n\n<nb-alert *ngIf=\"responseError\" outline=\"danger\" role=\"alert\">\n  <p class=\"alert-title\"><b>{{ 'alert.title.forgot' | translate }}</b></p>\n  <ul class=\"alert-message-list\">\n    <li class=\"alert-message\">{{ responseError }}</li>\n  </ul>\n</nb-alert>\n\n<form [formGroup]=\"form\" (ngSubmit)=\"forgotPassword()\" aria-labelledby=\"title\">\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-name\">{{ 'message.email-forgot-password' | translate }} :</label>\n    <input [formControlName]=\"'email'\"\n          [required]=\"true\"\n          minlength=\"4\"\n          maxlength=\"50\"\n          [pattern]=\"patternEmail\"\n          [ngClass]=\"{\n            'status-danger': hasErrorEmail,\n            'status-success': hasSuccessEmail\n          }\"\n          name=\"email\"\n          id=\"inputEmail\"\n          placeholder=\"{{ 'Email' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"1\"\n          autofocus\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorEmail\">\n      <span class=\"caption status-danger\">{{'error.pattern.email' | translate}}</span>\n    </ng-container>\n  </div>\n\n  <button [disabled]=\"form.invalid || buttonForgotPassword\"\n          fullWidth\n          nbButton\n          status=\"primary\"\n          size=\"large\"\n          [class.btn-pulse]=\"form.invalid || buttonForgotPassword\">\n    {{ 'Send' | translate }}\n  </button>\n</form>\n\n<section class=\"sign-in-or-up\" aria-label=\"Sign in or sign up\">\n  <p><a class=\"text-link\" routerLink=\"/auth/login\">{{ 'message.forgot-password-link' | translate}}</a></p>\n  <!--\n  <p><a routerLink=\"/auth/register\" class=\"text-link\">{{ 'Register' | translate}}</a></p>\n  -->\n</section>\n","import { Component, Inject } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  API,\n  EncryptionService,\n  HTTP_SERVICE,\n  OAUTH_INFO,\n  Pattern,\n  ResponseCode,\n} from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { APIModel } from '@dongkap/do-core';\nimport { HttpFactoryService } from '@dongkap/do-core';\nimport { SecurityResourceModel } from '@dongkap/do-core';\nimport { DoToastrService } from '@dongkap/do-shared';\n\n@Component({\n    selector: 'do-forgot-page',\n    styleUrls: ['forgot-page.component.scss'],\n    templateUrl: 'forgot-page.component.html',\n})\nexport class ForgotPageComponent implements OnDestroy {\n\n  public responseError: any;\n  public buttonForgotPassword: boolean = false;\n  private progressBar: number = 25;\n  protected progressDOM: HTMLElement;\n\n  public patternPassword: string = Pattern.PASSWORD_MEDIUM;\n  public errorMsgNewPassword: string;\n  public errorMsgConfirmPassword: string;\n\n  private verificationId: string;\n  private verificationCode: string;\n\n  public form: FormGroup = new FormGroup({\n    newPassword: new FormControl(),\n    confirmPassword: new FormControl(),\n  });\n\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastr: DoToastrService,\n    private translate: TranslateService,\n    private enc: EncryptionService,\n    @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    @Inject(API)private apiPath: APIModel) {\n    if (this.route.snapshot.params['id'] !== null && this.route.snapshot.params['code'] !== null) {\n      this.verificationId = this.route.snapshot.params['id'];\n      this.verificationCode = this.route.snapshot.params['code'];\n    } else {\n      this.router.navigate(['/auth/login']);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n  public forgotPassword() {\n    if (!this.form.invalid) {\n      this.initProgress();\n      if (this.progressBar < 35) {\n        this.setProgress(this.progressBar = 35);\n      }\n\n      this.responseError = null;\n\n      const newPassword: string = this.enc.encryptAES(this.oauthResource['aes_key'], this.form.controls['newPassword'].value);\n      const confirmPassword: string = this.enc.encryptAES(this.oauthResource['aes_key'], this.form.controls['confirmPassword'].value);\n      const data: any = {\n        verificationId: this.verificationId,\n        verificationCode: this.verificationCode,\n        newPassword,\n        confirmPassword,\n      };\n      const httpHeaders: HttpHeaders = new HttpHeaders({\n        Authorization: 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n        'Content-Type': 'application/json',\n        'Accept-Language': this.translate.currentLang,\n      });\n      this.buttonForgotPassword = true;\n      this.httpBaseService.HTTP_BASE(this.apiPath['auth']['forgot-password'], data, httpHeaders)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (response: ApiBaseResponse) => {\n          if (response) {\n            this.toastr.showI18n(response.respStatusMessage[response.respStatusCode]);\n            this.setProgress(this.progressBar = 95);\n            this.progressBar = 0;\n            if (response.respStatusCode === ResponseCode.OK_FORGOT_PASSWORD) {\n              this.router.navigate(['/auth/login']);\n            } else {\n              this.form.reset();\n              this.buttonForgotPassword = false;\n            }\n          } else {\n            this.form.reset();\n            this.buttonForgotPassword = false;\n          }\n        },\n        (error: any) => {\n          this.buttonForgotPassword = false;\n          this.progressBar = 0;\n          this.doneProgress();\n\n          if (!(error instanceof HttpErrorResponse)) {\n            if (error['respStatusCode']) {\n              this.responseError = error['respStatusMessage'][error['respStatusCode']];\n            }\n          }\n        });\n    }\n  }\n\n  get hasErrorNewPassword(): boolean {\n    if (this.form.controls['newPassword'].errors &&\n      this.form.controls['newPassword'].invalid &&\n      this.form.controls['newPassword'].touched) {\n      this.errorMsgNewPassword = 'error.pattern.Password';\n    } else {\n      this.errorMsgNewPassword = null;\n    }\n    return (\n      this.form.controls['newPassword'] &&\n      this.form.controls['newPassword'].invalid &&\n      this.form.controls['newPassword'].touched\n    );\n  }\n\n  get hasSuccessNewPassword(): boolean {\n    return (\n      this.form.controls['newPassword'] &&\n      this.form.controls['newPassword'].valid &&\n      this.form.controls['newPassword'].touched\n    );\n  }\n\n  get hasErrorConfirmPassword(): boolean {\n    if (\n      this.form.controls['confirmPassword'].errors &&\n      this.form.controls['confirmPassword'].invalid &&\n      this.form.controls['confirmPassword'].touched) {\n      this.errorMsgConfirmPassword = 'error.equal.confirmPassword';\n    } else {\n      if (this.form.controls['newPassword'].value !== this.form.controls['confirmPassword'].value) {\n        this.errorMsgConfirmPassword = 'error.equal.confirmPassword';\n        this.form.controls['confirmPassword'].setValidators([confirmPasswordValidator(this.form)]);\n        this.form.controls['confirmPassword'].updateValueAndValidity();\n      } else {\n        this.errorMsgConfirmPassword = null;\n      }\n    }\n    return (\n      this.form.controls['confirmPassword'] &&\n      this.form.controls['confirmPassword'].invalid &&\n      this.form.controls['confirmPassword'].touched\n    );\n  }\n\n  get hasSuccessConfirmPassword(): boolean {\n    return (\n      this.form.controls['confirmPassword'] &&\n      this.form.controls['confirmPassword'].valid &&\n      this.form.controls['confirmPassword'].touched\n    );\n  }\n\n  protected initProgress(): void {\n    document.querySelectorAll('.pace-done').forEach(pace => {\n    pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n    pace.className = pace.className.replace('pace-done', 'pace-running');\n    });\n    document.querySelectorAll('.pace-inactive').forEach(pace => {\n    pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n    pace.className = pace.className.replace('pace-inactive', 'pace-active');\n    });\n    this.progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n  }\n\n  protected doneProgress() {\n    document.querySelectorAll('.pace-running').forEach(pace => {\n    pace.className = pace.className.replace('pace-running', 'pace-done');\n    });\n    document.querySelectorAll('.pace-active').forEach(pace => {\n    pace.className = pace.className.replace('pace-active', 'pace-inactive');\n    });\n  }\n\n  protected setProgress(progress: number) {\n    this.progressDOM.style.transform = 'translate3d(' + progress + '%, 0px, 0px)';\n    this.progressDOM.getAttributeNode('data-progress-text').value = progress + '%';\n    this.progressDOM.getAttributeNode('data-progress').value = progress.toString();\n  }\n\n}\n\nexport function confirmPasswordValidator(form: FormGroup): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    if (form.controls) {\n      if (form.controls['newPassword'].value !== form.controls['confirmPassword'].value){\n        return { equal: true };\n      }\n    }\n    return null;\n  };\n}\n","<h1 id=\"title\" class=\"title\">{{ 'Reset Password' | translate }}</h1>\n<p class=\"sub-title\">{{ 'subtitle.reset-password' | translate }}</p>\n\n<nb-alert *ngIf=\"responseError\" outline=\"danger\" role=\"alert\">\n  <p class=\"alert-title\"><b>{{ 'alert.title.reset-password' | translate }}</b></p>\n  <ul class=\"alert-message-list\">\n    <li class=\"alert-message\">{{ responseError }}</li>\n  </ul>\n</nb-alert>\n\n<form [formGroup]=\"form\" (ngSubmit)=\"forgotPassword()\" aria-labelledby=\"title\">\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-newpassword\">{{ 'New Password' | translate }}* :</label>\n    <input [formControlName]=\"'newPassword'\"\n          [required]=\"true\"\n          minlength=\"8\"\n          maxlength=\"50\"\n          [pattern]=\"patternPassword\"\n          [ngClass]=\"{\n            'status-danger': hasErrorNewPassword,\n            'status-success': hasSuccessNewPassword\n          }\"\n          name=\"newPassword\"\n          type=\"password\"\n          id=\"inputNewPassword\"\n          placeholder=\"{{ 'New Password' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"4\"\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorNewPassword\">\n      <span class=\"caption status-danger\">{{ errorMsgNewPassword | translate}}</span>\n    </ng-container>\n  </div>\n\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-confirmpassword\">{{ 'Confirm Password' | translate }}* :</label>\n    <input [formControlName]=\"'confirmPassword'\"\n          [required]=\"true\"\n          minlength=\"8\"\n          maxlength=\"50\"\n          [ngClass]=\"{\n            'status-danger': hasErrorConfirmPassword,\n            'status-success': hasSuccessConfirmPassword\n          }\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          id=\"inputConfirmPassword\"\n          placeholder=\"{{ 'Confirm Password' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"5\"\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorConfirmPassword\">\n      <span class=\"caption status-danger\">{{ errorMsgConfirmPassword | translate}}</span>\n    </ng-container>\n  </div>\n\n  <button [disabled]=\"form.invalid || buttonForgotPassword\"\n          fullWidth\n          nbButton\n          status=\"primary\"\n          size=\"large\"\n          [class.btn-pulse]=\"form.invalid || buttonForgotPassword\">\n    {{ 'Reset Password' | translate }}\n  </button>\n</form>\n\n<section class=\"another-action\" aria-label=\"Sign in\">\n  {{ 'message.reset-password-footer' | translate}} <a class=\"text-link\" routerLink=\"/auth/login\" tabindex=\"-1\">{{ 'Login' | translate}}</a>\n</section>\n","import { Component, Inject } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  ValidatorFn,\n  AbstractControl,\n  AsyncValidatorFn,\n} from '@angular/forms';\nimport { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { of, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, first, switchMap, takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NbDialogService } from '@nebular/theme';\nimport {\n  API,\n  EncryptionService,\n  HTTP_SERVICE,\n  OAUTH_INFO,\n  Pattern,\n  ResponseCode,\n} from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { APIModel } from '@dongkap/do-core';\nimport { HttpFactoryService } from '@dongkap/do-core';\nimport { SecurityResourceModel } from '@dongkap/do-core';\nimport { DoToastrService } from '@dongkap/do-shared';\nimport { TermsConditionsComponent } from '../terms-conditions/terms-conditions.component';\n\n@Component({\n    selector: 'do-register-page',\n    styleUrls: ['register-page.component.scss'],\n    templateUrl: 'register-page.component.html',\n})\nexport class RegisterPageComponent implements OnDestroy {\n\n  public patternFullname: string = Pattern.FULLNAME;\n  public patternUsername: string = Pattern.USERNAME;\n  public patternEmail: string = Pattern.EMAIL;\n  public patternPassword: string = Pattern.PASSWORD_MEDIUM;\n  public errorMsgFullname: string;\n  public errorMsgUsername: string;\n  public errorMsgEmail: string;\n  public errorMsgPassword: string;\n  public errorMsgConfirmPassword: string;\n  public paramMsgUsername: any;\n  public paramMsgEmail: any;\n  public minlengthUsername: number = 4;\n  public minlengthEmail: number = 5;\n\n  public form: FormGroup = new FormGroup({\n    fullname: new FormControl(),\n    username: new FormControl(),\n    email: new FormControl(),\n    password: new FormControl(),\n    confirmPassword: new FormControl(),\n    terms: new FormControl(),\n    recaptcha: new FormControl(),\n  });\n\n  public responseError: any;\n  public buttonRegister: boolean = false;\n  private progressBar: number = 25;\n  protected progressDOM: HTMLElement;\n  private isCheckUsername: boolean = true;\n  private isCheckEmail: boolean = true;\n\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(\n    private router: Router,\n    private enc: EncryptionService,\n    private toastr: DoToastrService,\n    private dialogService: NbDialogService,\n    private translate: TranslateService,\n    @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    @Inject(API)private apiPath: APIModel) {\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n  public register() {\n    if (!this.form.invalid) {\n      this.initProgress();\n      if (this.progressBar < 35) {\n        this.setProgress(this.progressBar = 35);\n      }\n\n      this.responseError = null;\n      const data: any = this.form.value;\n      data['password'] = this.enc.encryptAES(this.oauthResource['aes_key'], this.form.controls['password'].value);\n      data['confirmPassword'] = this.enc.encryptAES(this.oauthResource['aes_key'], this.form.controls['confirmPassword'].value);\n      const httpHeaders: HttpHeaders = new HttpHeaders({\n        Authorization: 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n        'Content-Type': 'application/json',\n        'Accept-Language': this.translate.currentLang,\n      });\n      this.buttonRegister = true;\n      this.httpBaseService.HTTP_BASE(this.apiPath['auth']['signup'], data, httpHeaders)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (response: ApiBaseResponse) => {\n          if (response) {\n            this.toastr.showI18n(response.respStatusMessage[response.respStatusCode]);\n            this.setProgress(this.progressBar = 95);\n            this.progressBar = 0;\n            if (response.respStatusCode === ResponseCode.OK_REGISTERED) {\n              this.router.navigate(['/auth/login']);\n            } else {\n              this.form.reset();\n              this.buttonRegister = false;\n            }\n          } else {\n            this.form.reset();\n            this.buttonRegister = false;\n          }\n        },\n        (error: any) => {\n          this.buttonRegister = false;\n          this.progressBar = 0;\n          this.doneProgress();\n\n          if (!(error instanceof HttpErrorResponse)) {\n            if (error['respStatusCode']) {\n              switch (error['respStatusCode']) {\n                case ResponseCode.ERR_SCR0005.toString():\n                  this.form.controls['password'].setErrors({\n                    invalid: true,\n                  });\n                  break;\n                case ResponseCode.ERR_SCR0011.toString():\n                  this.form.controls['confirmPassword'].setErrors({\n                    equal: true,\n                  });\n                  break;\n                default:\n                  break;\n              }\n              this.responseError = error['respStatusMessage'][error['respStatusCode']];\n            }\n          } else {\n          }\n        });\n    }\n  }\n\n  get hasErrorFullname(): boolean {\n    if (this.form.controls['fullname'].errors && this.form.controls['fullname'].invalid && this.form.controls['fullname'].touched) {\n      if (this.form.controls['fullname'].errors['required']){\n        this.errorMsgFullname = 'error.fullname.required';\n      } else {\n        this.errorMsgFullname = 'error.fullname.invalid';\n      }\n    } else {\n      this.errorMsgFullname = null;\n    }\n    return (\n      this.form.controls['fullname'] &&\n      this.form.controls['fullname'].invalid &&\n      this.form.controls['fullname'].touched\n    );\n  }\n\n  get hasSuccessFullname(): boolean {\n    return (\n      this.form.controls['fullname'] &&\n      this.form.controls['fullname'].valid &&\n      this.form.controls['fullname'].touched\n    );\n  }\n\n  get hasErrorUsername(): boolean {\n    if (this.form.controls['username'].errors && this.form.controls['username'].invalid && this.form.controls['username'].touched) {\n      if (this.form.controls['username'].errors['required']) {\n        this.errorMsgUsername = 'error.username.required';\n      } else if (this.form.controls['username'].errors['not-available']) {\n        this.errorMsgUsername = 'error.username.not-available';\n        this.paramMsgUsername = {\n          value: this.form.controls['username'].value,\n        };\n      } else if (this.form.controls['username'].errors['timeout']) {\n        this.errorMsgUsername = 'error.0';\n      } else if (this.form.controls['username'].errors['error']) {\n        this.errorMsgUsername = 'error.500';\n      } else {\n        this.errorMsgUsername = 'error.username.invalid';\n      }\n    } else {\n      if ((this.form.controls['username'].touched || this.form.controls['username'].dirty) && this.isCheckUsername) {\n        this.isCheckUsername = false;\n        this.form.controls['username'].setAsyncValidators([userValidator(this.oauthResource, this.httpBaseService, this.apiPath)]);\n        this.form.controls['username'].updateValueAndValidity();\n      }\n      this.errorMsgUsername = null;\n    }\n    return (\n      this.form.controls['username'] &&\n      this.form.controls['username'].invalid &&\n      this.form.controls['username'].touched\n    );\n  }\n\n  get hasSuccessUsername(): boolean {\n    return (\n      this.form.controls['username'] &&\n      this.form.controls['username'].valid &&\n      this.form.controls['username'].touched\n      );\n  }\n\n  get hasErrorEmail(): boolean {\n    if (this.form.controls['email'].errors && this.form.controls['email'].invalid && this.form.controls['email'].touched) {\n      if (this.form.controls['email'].errors['required']) {\n        this.errorMsgEmail = 'error.email.required';\n      } else if (this.form.controls['email'].errors['not-available']) {\n        this.errorMsgEmail = 'error.email.not-available';\n        this.paramMsgEmail = {\n          value: this.form.controls['email'].value,\n        };\n      } else if (this.form.controls['email'].errors['timeout']) {\n        this.errorMsgEmail = 'error.0';\n      } else if (this.form.controls['email'].errors['error']) {\n        this.errorMsgEmail = 'error.500';\n      } else {\n        this.errorMsgEmail = 'error.email.invalid';\n      }\n    } else {\n      if ((this.form.controls['email'].touched || this.form.controls['email'].dirty) && this.isCheckEmail) {\n        this.isCheckEmail = false;\n        this.form.controls['email'].setAsyncValidators([userValidator(this.oauthResource, this.httpBaseService, this.apiPath)]);\n        this.form.controls['email'].updateValueAndValidity();\n      }\n      this.errorMsgEmail = null;\n    }\n    return (\n      this.form.controls['email'] &&\n      this.form.controls['email'].invalid &&\n      this.form.controls['email'].touched\n    );\n  }\n\n  get hasSuccessEmail(): boolean {\n    return (\n      this.form.controls['email'] &&\n      this.form.controls['email'].valid &&\n      this.form.controls['email'].touched\n      );\n  }\n\n  get hasErrorPassword(): boolean {\n    if (this.form.controls['password'].errors && this.form.controls['password'].invalid && this.form.controls['password'].touched) {\n      this.errorMsgPassword = 'error.pattern.Password';\n    } else {\n      this.errorMsgPassword = null;\n    }\n    return (\n      this.form.controls['password'] &&\n      this.form.controls['password'].invalid &&\n      this.form.controls['password'].touched\n    );\n  }\n\n  get hasSuccessPassword(): boolean {\n    return (\n      this.form.controls['password'] &&\n      this.form.controls['password'].valid &&\n      this.form.controls['password'].touched\n    );\n  }\n\n  get hasErrorConfirmPassword(): boolean {\n    if (\n      this.form.controls['confirmPassword'].errors &&\n      this.form.controls['confirmPassword'].invalid &&\n      this.form.controls['confirmPassword'].touched) {\n      this.errorMsgConfirmPassword = 'error.equal.confirmPassword-register';\n    } else {\n      if (this.form.controls['password'].value !== this.form.controls['confirmPassword'].value) {\n        this.errorMsgConfirmPassword = 'error.equal.confirmPassword-register';\n        this.form.controls['confirmPassword'].setValidators([confirmPasswordValidator(this.form)]);\n        this.form.controls['confirmPassword'].updateValueAndValidity();\n      } else {\n        this.errorMsgConfirmPassword = null;\n      }\n    }\n    return (\n      this.form.controls['confirmPassword'] &&\n      this.form.controls['confirmPassword'].invalid &&\n      this.form.controls['confirmPassword'].touched\n    );\n  }\n\n  get hasSuccessConfirmPassword(): boolean {\n    return (\n      this.form.controls['confirmPassword'] &&\n      this.form.controls['confirmPassword'].valid &&\n      this.form.controls['confirmPassword'].touched\n    );\n  }\n\n  onCheckedChange(){\n    if (!this.form.controls['terms'].value) {\n      this.form.controls['terms'].setValue(null);\n    }\n  }\n\n  onClickTermsConditions(){\n    const data: any = {\n      parameterCode: 'TERMS_CONDITIONS.DONGKAP'\n    };\n    const httpHeaders: HttpHeaders = new HttpHeaders({\n      Authorization: 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n      'Content-Type': 'application/json',\n      'Accept-Language': this.translate.currentLang,\n    });\n    this.httpBaseService.HTTP_BASE(this.apiPath['openapi']['parameter'], data, httpHeaders)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response: any) => {\n      this.dialogService.open(TermsConditionsComponent, {\n        context: {\n          content: response['parameterValue'],\n        },\n        })\n        .onClose.subscribe((terms: string) => {\n        if (terms) {\n          this.form.controls['terms'].setValue(true);\n        }\n      });\n    });\n  }\n\n  onKeyDownUsername(event: KeyboardEvent){\n    if (event.key) {\n      if (!event.key.match(/[!@#$%^&*()?\":{}|<>\\[\\];\\\\=~`]/g)) {\n        if (([\n          'TAB',\n          'ESCAPE',\n          'ENTER',\n          'HOME',\n          'END',\n          'ARROWLEFT',\n          'ARROWRIGHT',\n          'ARROWUP',\n          'ARROWDOWN',\n          'PAGEUP',\n          'PAGEDOWN'].indexOf(event.key.toUpperCase()) === -1) &&\n        !event.ctrlKey && !event.metaKey && !event.altKey) {\n            this.isCheckUsername = true;\n        }\n      }\n    }\n  }\n\n  onKeyDownEmail(event: KeyboardEvent){\n    if (event.key) {\n      if (!event.key.match(/[!#$%^&*()?\":{}|<>\\[\\];\\\\=~`]/g)) {\n        if (([\n          'TAB',\n          'ESCAPE',\n          'ENTER',\n          'HOME',\n          'END',\n          'ARROWLEFT',\n          'ARROWRIGHT',\n          'ARROWUP',\n          'ARROWDOWN',\n          'PAGEUP',\n          'PAGEDOWN'].indexOf(event.key.toUpperCase()) === -1) &&\n        !event.ctrlKey && !event.metaKey && !event.altKey) {\n          this.isCheckEmail = true;\n        }\n      }\n    }\n  }\n\n  protected initProgress(): void {\n    document.querySelectorAll('.pace-done').forEach(pace => {\n    pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n    pace.className = pace.className.replace('pace-done', 'pace-running');\n    });\n    document.querySelectorAll('.pace-inactive').forEach(pace => {\n    pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n    pace.className = pace.className.replace('pace-inactive', 'pace-active');\n    });\n    this.progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n  }\n\n  protected doneProgress() {\n    document.querySelectorAll('.pace-running').forEach(pace => {\n    pace.className = pace.className.replace('pace-running', 'pace-done');\n    });\n    document.querySelectorAll('.pace-active').forEach(pace => {\n    pace.className = pace.className.replace('pace-active', 'pace-inactive');\n    });\n  }\n\n  protected setProgress(progress: number) {\n    this.progressDOM.style.transform = 'translate3d(' + progress + '%, 0px, 0px)';\n    this.progressDOM.getAttributeNode('data-progress-text').value = progress + '%';\n    this.progressDOM.getAttributeNode('data-progress').value = progress.toString();\n  }\n\n}\n\nexport function confirmPasswordValidator(form: FormGroup): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    if (form.controls) {\n      if (form.controls['password'].value !== form.controls['confirmPassword'].value){\n        return { equal: true };\n      }\n    }\n    return null;\n  };\n}\n\nexport function userValidator(\n  oauthResource: SecurityResourceModel,\n  httpBaseService: HttpFactoryService,\n  apiPath: APIModel): AsyncValidatorFn {\n  return (control: AbstractControl) => {\n    if (!control.valueChanges) {\n      return of(null);\n    } else {\n      return control.valueChanges.pipe(\n        debounceTime(500),\n        distinctUntilChanged(),\n        switchMap(() => {\n          const validatorSubject$: Subject<any> = new Subject<ApiBaseResponse>();\n          const httpHeaders: HttpHeaders = new HttpHeaders({\n            Authorization: 'Basic ' + btoa(oauthResource['client_id'] + ':' + oauthResource['client_secret']),\n            'Content-Type': 'application/json',\n          });\n          const data: any = {\n            user: control.value,\n          };\n          let dataValidator: any;\n          if (control.value){\n            httpBaseService.HTTP_BASE(apiPath['auth']['check-user'], data, httpHeaders).subscribe(\n              (response: any) => {\n                if (response['respStatusCode'] === ResponseCode.OK_SCR012.toString()) {\n                  validatorSubject$.next(null);\n                } else {\n                  dataValidator = {\n                    error: true,\n                  };\n                  validatorSubject$.next(dataValidator);\n                }\n              },\n              (error: any) => {\n                if (!(error instanceof HttpErrorResponse)) {\n                  dataValidator = {\n                    error: true,\n                  };\n                } else {\n                  if (error.status === 302) {\n                    dataValidator = {\n                      'not-available': true,\n                    };\n                  } else {\n                    dataValidator = {\n                      timeout: true,\n                    };\n                  }\n                }\n                validatorSubject$.next(dataValidator);\n              });\n          }\n          return validatorSubject$.asObservable();\n        })).pipe(first());\n    }\n  };\n}\n","<h1 id=\"title\" class=\"title\">{{ 'Register' | translate }}</h1>\n\n<nb-alert *ngIf=\"responseError\" outline=\"danger\" role=\"alert\">\n  <p class=\"alert-title\"><b>{{ 'alert.title.register' | translate }}</b></p>\n  <ul class=\"alert-message-list\">\n    <li class=\"alert-message\">{{ responseError }}</li>\n  </ul>\n</nb-alert>\n\n<form [formGroup]=\"form\" (ngSubmit)=\"register()\" aria-labelledby=\"title\">\n\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-name\">{{ 'Full name' | translate }}* :</label>\n    <input [formControlName]=\"'fullname'\"\n          [required]=\"true\"\n          minlength=\"4\"\n          maxlength=\"50\"\n          [pattern]=\"patternFullname\"\n          [ngClass]=\"{\n            'status-danger': hasErrorFullname,\n            'status-success': hasSuccessFullname\n          }\"\n          name=\"fullname\"\n          id=\"inputFullname\"\n          placeholder=\"{{ 'Full name' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"1\"\n          autofocus\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorFullname\">\n      <span class=\"caption status-danger\">{{errorMsgFullname | translate}}</span>\n    </ng-container>\n  </div>\n\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-username\">{{ 'Username' | translate }}* :</label>\n    <input [formControlName]=\"'username'\"\n          [required]=\"true\"\n          minlength=\"5\"\n          maxlength=\"20\"\n          [pattern]=\"patternUsername\"\n          [ngClass]=\"{\n            'status-danger': hasErrorUsername,\n            'status-success': hasSuccessUsername\n          }\"\n          name=\"username\"\n          id=\"inputUsername\"\n          (keydown)=\"onKeyDownUsername($event)\"\n          placeholder=\"{{ 'Username' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"2\"\n          autofocus\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorUsername\">\n      <span class=\"caption status-danger\">{{errorMsgUsername | translate:paramMsgUsername}}</span>\n    </ng-container>\n  </div>\n\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-email\">{{ 'Email' | translate }}* :</label>\n    <input [formControlName]=\"'email'\"\n          [required]=\"true\"\n          minlength=\"5\"\n          maxlength=\"50\"\n          [pattern]=\"patternEmail\"\n          [ngClass]=\"{\n            'status-danger': hasErrorEmail,\n            'status-success': hasSuccessEmail\n          }\"\n          name=\"email\"\n          id=\"inputEmail\"\n          (keydown)=\"onKeyDownEmail($event)\"\n          placeholder=\"{{ 'Email' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"3\"\n          autofocus\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorEmail\">\n      <span class=\"caption status-danger\">{{errorMsgEmail | translate:paramMsgEmail}}</span>\n    </ng-container>\n  </div>\n\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-password\">{{ 'Password' | translate }}* :</label>\n    <input [formControlName]=\"'password'\"\n          [required]=\"true\"\n          minlength=\"8\"\n          maxlength=\"50\"\n          [pattern]=\"patternPassword\"\n          [ngClass]=\"{\n            'status-danger': hasErrorPassword,\n            'status-success': hasSuccessPassword\n          }\"\n          name=\"password\"\n          type=\"password\"\n          id=\"inputPassword\"\n          placeholder=\"{{ 'Password' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"4\"\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorPassword\">\n      <span class=\"caption status-danger\">{{ errorMsgPassword | translate}}</span>\n    </ng-container>\n  </div>\n\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-confirmpassword\">{{ 'Confirm Password' | translate }}* :</label>\n    <input [formControlName]=\"'confirmPassword'\"\n          [required]=\"true\"\n          minlength=\"8\"\n          maxlength=\"50\"\n          [ngClass]=\"{\n            'status-danger': hasErrorConfirmPassword,\n            'status-success': hasSuccessConfirmPassword\n          }\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          id=\"inputConfirmPassword\"\n          placeholder=\"{{ 'Confirm Password' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"5\"\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorConfirmPassword\">\n      <span class=\"caption status-danger\">{{ errorMsgConfirmPassword | translate}}</span>\n    </ng-container>\n  </div>\n\n  <div class=\"form-control-group accept-group\">\n    <div class=\"terms-row row\">\n      <nb-checkbox\n        name=\"terms\"\n        [formControlName]=\"'terms'\"\n        [required]=\"true\"\n        (change)=\"onCheckedChange()\">\n        {{ 'message.terms-conditions-label' | translate}}\n      </nb-checkbox>\n      <span class=\"terms-conditions\" (click)=\"onClickTermsConditions()\" tabindex=\"-1\"><strong>{{ 'message.terms-conditions' | translate}}</strong></span>\n    </div>\n  </div>\n\n  <div class=\"form-control-group\" style=\"transform:scale(0.7);transform-origin:0;\">\n    <re-captcha\n      [formControlName]=\"'recaptcha'\"\n      required>\n    </re-captcha>\n  </div>\n\n  <button [disabled]=\"!form.valid || buttonRegister\"\n          fullWidth\n          nbButton\n          status=\"primary\"\n          size=\"large\"\n          [class.btn-pulse]=\"!form.valid || buttonRegister\">\n    {{ 'Register' | translate }}\n  </button>\n</form>\n\n<section class=\"another-action\" aria-label=\"Sign in\">\n  {{ 'message.register-footer' | translate}} <a class=\"text-link\" routerLink=\"/auth/login\" tabindex=\"-1\">{{ 'Login' | translate}}</a>\n</section>\n","import { Component, Inject } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  API,\n  EncryptionService,\n  HTTP_SERVICE,\n  OAUTH_INFO,\n  Pattern,\n  ResponseCode,\n} from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { APIModel } from '@dongkap/do-core';\nimport { HttpFactoryService } from '@dongkap/do-core';\nimport { SecurityResourceModel } from '@dongkap/do-core';\nimport { DoToastrService } from '@dongkap/do-shared';\n\n@Component({\n    selector: 'do-activate-account-page',\n    styleUrls: ['activate-account-page.component.scss'],\n    templateUrl: 'activate-account-page.component.html',\n})\nexport class ActivateAccountPageComponent implements OnDestroy {\n\n  public responseError: any;\n  public buttonForgotPassword: boolean = false;\n  private progressBar: number = 25;\n  protected progressDOM: HTMLElement;\n\n  public patternPassword: string = Pattern.PASSWORD_MEDIUM;\n  public errorMsgPassword: string;\n  public errorMsgConfirmPassword: string;\n\n  private activateId: string;\n  private activateCode: string;\n\n  public form: FormGroup = new FormGroup({\n    password: new FormControl(),\n    confirmPassword: new FormControl(),\n  });\n\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastr: DoToastrService,\n    private translate: TranslateService,\n    private enc: EncryptionService,\n    @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    @Inject(API)private apiPath: APIModel) {\n    if (this.route.snapshot.params['id'] !== null && this.route.snapshot.params['code'] !== null) {\n      this.activateId = this.route.snapshot.params['id'];\n      this.activateCode = this.route.snapshot.params['code'];\n    } else {\n      this.router.navigate(['/auth/login']);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n  public activateAccount() {\n    if (!this.form.invalid) {\n      this.initProgress();\n      if (this.progressBar < 35) {\n        this.setProgress(this.progressBar = 35);\n      }\n\n      this.responseError = null;\n\n      const password: string = this.enc.encryptAES(this.oauthResource['aes_key'], this.form.controls['password'].value);\n      const confirmPassword: string = this.enc.encryptAES(this.oauthResource['aes_key'], this.form.controls['confirmPassword'].value);\n      const data: any = {\n        activateId: this.activateId,\n        activateCode: this.activateCode,\n        password,\n        confirmPassword,\n      };\n      const httpHeaders: HttpHeaders = new HttpHeaders({\n        Authorization: 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n        'Content-Type': 'application/json',\n        'Accept-Language': this.translate.currentLang,\n      });\n      this.buttonForgotPassword = true;\n      this.httpBaseService.HTTP_BASE(this.apiPath['auth']['activate-account'], data, httpHeaders)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (response: ApiBaseResponse) => {\n          if (response) {\n            this.toastr.showI18n(response.respStatusMessage[response.respStatusCode]);\n            this.setProgress(this.progressBar = 95);\n            this.progressBar = 0;\n            if (response.respStatusCode === ResponseCode.OK_ACTIVATE_ACCOUNT) {\n              this.router.navigate(['/auth/login']);\n            } else {\n              this.form.reset();\n              this.buttonForgotPassword = false;\n            }\n          } else {\n            this.form.reset();\n            this.buttonForgotPassword = false;\n          }\n        },\n        (error: any) => {\n          this.buttonForgotPassword = false;\n          this.progressBar = 0;\n          this.doneProgress();\n\n          if (!(error instanceof HttpErrorResponse)) {\n            if (error['respStatusCode']) {\n              this.responseError = error['respStatusMessage'][error['respStatusCode']];\n            }\n          }\n        });\n    }\n  }\n\n  get hasErrorPassword(): boolean {\n    if (this.form.controls['password'].errors &&\n      this.form.controls['password'].invalid &&\n      this.form.controls['password'].touched) {\n      this.errorMsgPassword = 'error.pattern.Password';\n    } else {\n      this.errorMsgPassword = null;\n    }\n    return (\n      this.form.controls['password'] &&\n      this.form.controls['password'].invalid &&\n      this.form.controls['password'].touched\n    );\n  }\n\n  get hasSuccessPassword(): boolean {\n    return (\n      this.form.controls['password'] &&\n      this.form.controls['password'].valid &&\n      this.form.controls['password'].touched\n    );\n  }\n\n  get hasErrorConfirmPassword(): boolean {\n    if (\n      this.form.controls['confirmPassword'].errors &&\n      this.form.controls['confirmPassword'].invalid &&\n      this.form.controls['confirmPassword'].touched) {\n      this.errorMsgConfirmPassword = 'error.equal.confirmPassword';\n    } else {\n      if (this.form.controls['password'].value !== this.form.controls['confirmPassword'].value) {\n        this.errorMsgConfirmPassword = 'error.equal.confirmPassword';\n        this.form.controls['confirmPassword'].setValidators([confirmPasswordValidator(this.form)]);\n        this.form.controls['confirmPassword'].updateValueAndValidity();\n      } else {\n        this.errorMsgConfirmPassword = null;\n      }\n    }\n    return (\n      this.form.controls['confirmPassword'] &&\n      this.form.controls['confirmPassword'].invalid &&\n      this.form.controls['confirmPassword'].touched\n    );\n  }\n\n  get hasSuccessConfirmPassword(): boolean {\n    return (\n      this.form.controls['confirmPassword'] &&\n      this.form.controls['confirmPassword'].valid &&\n      this.form.controls['confirmPassword'].touched\n    );\n  }\n\n  protected initProgress(): void {\n    document.querySelectorAll('.pace-done').forEach(pace => {\n    pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n    pace.className = pace.className.replace('pace-done', 'pace-running');\n    });\n    document.querySelectorAll('.pace-inactive').forEach(pace => {\n    pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n    pace.className = pace.className.replace('pace-inactive', 'pace-active');\n    });\n    this.progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n  }\n\n  protected doneProgress() {\n    document.querySelectorAll('.pace-running').forEach(pace => {\n    pace.className = pace.className.replace('pace-running', 'pace-done');\n    });\n    document.querySelectorAll('.pace-active').forEach(pace => {\n    pace.className = pace.className.replace('pace-active', 'pace-inactive');\n    });\n  }\n\n  protected setProgress(progress: number) {\n    this.progressDOM.style.transform = 'translate3d(' + progress + '%, 0px, 0px)';\n    this.progressDOM.getAttributeNode('data-progress-text').value = progress + '%';\n    this.progressDOM.getAttributeNode('data-progress').value = progress.toString();\n  }\n\n}\n\nexport function confirmPasswordValidator(form: FormGroup): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    if (form.controls) {\n      if (form.controls['password'].value !== form.controls['confirmPassword'].value){\n        return { equal: true };\n      }\n    }\n    return null;\n  };\n}\n","<h1 id=\"title\" class=\"title\">{{ 'header.set-password' | translate }}</h1>\n<p class=\"sub-title\">{{ 'subtitle.set-password' | translate }}</p>\n\n<nb-alert *ngIf=\"responseError\" outline=\"danger\" role=\"alert\">\n  <p class=\"alert-title\"><b>{{ 'alert.title.set-password' | translate }}</b></p>\n  <ul class=\"alert-message-list\">\n    <li class=\"alert-message\">{{ responseError }}</li>\n  </ul>\n</nb-alert>\n\n<form [formGroup]=\"form\" (ngSubmit)=\"activateAccount()\" aria-labelledby=\"title\">\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-newpassword\">{{ 'Password' | translate }}* :</label>\n    <input [formControlName]=\"'password'\"\n          [required]=\"true\"\n          minlength=\"8\"\n          maxlength=\"50\"\n          [pattern]=\"patternPassword\"\n          [ngClass]=\"{\n            'status-danger': hasErrorPassword,\n            'status-success': hasSuccessPassword\n          }\"\n          name=\"password\"\n          type=\"password\"\n          id=\"inputPassword\"\n          placeholder=\"{{ 'Password' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"4\"\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorPassword\">\n      <span class=\"caption status-danger\">{{ errorMsgPassword | translate}}</span>\n    </ng-container>\n  </div>\n\n  <div class=\"form-control-group\">\n    <label class=\"label\" for=\"input-confirmpassword\">{{ 'Confirm Password' | translate }}* :</label>\n    <input [formControlName]=\"'confirmPassword'\"\n          [required]=\"true\"\n          minlength=\"8\"\n          maxlength=\"50\"\n          [ngClass]=\"{\n            'status-danger': hasErrorConfirmPassword,\n            'status-success': hasSuccessConfirmPassword\n          }\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          id=\"inputConfirmPassword\"\n          placeholder=\"{{ 'Confirm Password' | translate }}\"\n          fieldSize=\"large\"\n          tabindex=\"5\"\n          nbInput\n          fullWidth>\n    <ng-container *ngIf=\"hasErrorConfirmPassword\">\n      <span class=\"caption status-danger\">{{ errorMsgConfirmPassword | translate}}</span>\n    </ng-container>\n  </div>\n\n  <button [disabled]=\"form.invalid || buttonForgotPassword\"\n          fullWidth\n          nbButton\n          status=\"primary\"\n          size=\"large\"\n          [class.btn-pulse]=\"form.invalid || buttonForgotPassword\">\n    {{ 'Set Password' | translate }}\n  </button>\n</form>\n\n<section class=\"another-action\" aria-label=\"Sign in\">\n  {{ 'message.set-password-footer' | translate}} <a class=\"text-link\" routerLink=\"/auth/login\" tabindex=\"-1\">{{ 'Login' | translate}}</a>\n</section>\n","import { Component, Inject, OnDestroy } from '@angular/core';\nimport { HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Idle } from '@ng-idle/core';\nimport { API, APIModel, HttpFactoryService, HTTP_SERVICE, OAUTH_INFO, SecurityResourceModel } from '@dongkap/do-core';\nimport { AuthIndexedDBService } from '../../services/storage/auth-indexeddb.service';\nimport { ProfileIndexedDBService } from '../../services/storage/profile-indexeddb.service';\nimport { SettingsIndexedDBService } from '../../services/storage/settings-indexeddb.service';\n\n@Component({\n  selector: 'do-oauth2-callback',\n  styleUrls: ['oauth2-callback.component.scss'],\n  templateUrl: 'oauth2-callback.component.html',\n})\nexport class OAuth2CallbackComponent implements OnDestroy {\n\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(\n    private router: Router,\n    route: ActivatedRoute,\n    @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    @Inject(API)private apiPath: APIModel,\n    private authIndexedDB: AuthIndexedDBService,\n    private profileIndexedDB: ProfileIndexedDBService,\n    private settingsIndexedDB: SettingsIndexedDBService,\n    private idle: Idle) {\n    if (route.snapshot.queryParams['access_token']) {\n      this.extractToken(route.snapshot.queryParams['access_token']);\n    } else if (route.snapshot.queryParams['error']) {\n      this.router.navigate(['/auth'], { queryParams: { error: route.snapshot.queryParams['error'] }});\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private extractToken(accessToken: string) {\n    return this.httpBaseService.\n    HTTP_BASE(this.apiPath['auth']['extract-token'],\n        this.getAuthBody(accessToken).toString(),\n        this.getAuthHeader())\n            .pipe(takeUntil(this.destroy$))\n            .toPromise()\n            .then((response: HttpResponse<any>) => {\n                this.idle.setIdle(+response['expires_in']);\n                this.idle.watch();\n                /* console.log('[DONGKAP] Session Idle Start'); */\n                /* console.log('[DONGKAP] Session Timeout in ' + response['expires_in'] + ' seconds'); */\n                this.authIndexedDB.loginStorage(response);\n                this.profileIndexedDB.loginStorage(response);\n                this.settingsIndexedDB.loginStorage(response);\n                this.router.navigate(['/app/home']);\n            })\n            .catch((error: any) => {\n              this.router.navigate(['/auth']);\n            });\n  }\n\n  private getAuthBody(accessToken: string): URLSearchParams {\n    const body = new URLSearchParams();\n    body.append('access_token', accessToken);\n    return body;\n  }\n\n  private getAuthHeader(): HttpHeaders {\n    return new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: 'Basic ' +\n            btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n        Accept: 'application/json',\n    });\n}\n}\n","<p class=\"sub-title\">{{ 'message.callback' | translate }}</p>\n<div class=\"spinner-area\" [nbSpinner]=\"true\" nbSpinnerSize=\"small\" nbSpinnerStatus=\"info\">","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { UnauthorizeGuardService } from './services/unauth-guard.service';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { AuthComponent } from './pages/layout/auth.component';\nimport { LoginPageComponent } from './pages/login/login-page.component';\nimport { LogoutComponent } from './pages/logout/logout.component';\nimport { ForceLoginPageComponent } from './pages/force/force-login-page.component';\nimport { RequestForgotPageComponent } from './pages/forgot/request-forgot-page.component';\nimport { ForgotPageComponent } from './pages/forgot/forgot-page.component';\nimport { RegisterPageComponent } from './pages/register/register-page.component';\nimport { ActivateAccountPageComponent } from './pages/activate-account/activate-account-page.component';\nimport { OAuth2CallbackComponent } from './pages/oauth2/oauth2-callback.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: AuthComponent,\n  children: [\n    {\n      path: '',\n      component: LoginPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'login',\n      component: LoginPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'force',\n      component: ForceLoginPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'register',\n      component: RegisterPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'forgot-password',\n      component: RequestForgotPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'forgot-password/:id/:code',\n      component: ForgotPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'activate/:id/:code',\n      component: ActivateAccountPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'callback',\n      component: OAuth2CallbackComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'logout',\n      component: LogoutComponent,\n      canActivate: [AuthGuardService],\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DoAuthRoutingModule {\n}\n","import { Injectable } from '@angular/core';\nimport { RouterStateSnapshot } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { CanActivateChild } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { EncryptionService } from '@dongkap/do-core';\nimport { AuthTokenService } from './auth-token.service';\nimport { AuthIndexedDBService } from './storage/auth-indexeddb.service';\n\n@Injectable()\nexport class AuthGuardChildService implements CanActivateChild {\n    constructor(\n        private router: Router,\n        private authTokenService: AuthTokenService,\n        private translate: TranslateService,\n        private enc: EncryptionService,\n        private storage: AuthIndexedDBService) {}\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n        const result$: Subject<boolean> = new Subject<boolean>();\n        this.authTokenService.isLogin().then((value: boolean) => {\n            result$.next(value);\n            if (route.data) {\n                if (route.data['title']) {\n                    this.translate.get(route.data['title']).subscribe(trans => {\n                        route.data['title'] = trans;\n                    });\n                }\n                Promise.all([\n                    this.storage.getEnc('menus'),\n                    this.storage.getEnc('extras'),\n                ]).then((strg: string[]) => {\n                    if (!(strg[0].includes(route.data['code']) || strg[1].includes(route.data['code']))) {\n                        this.router.navigate(['/app/home']);\n                    }\n                    return result$.asObservable();\n                });\n            }\n            if (!value) {\n                this.router.navigate(['/auth']);\n            }\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { Injectable, Inject, LOCALE_ID } from '@angular/core';\nimport { HttpHeaders, HttpRequest } from '@angular/common/http';\nimport { Observable, of, from } from 'rxjs';\nimport { take, switchMap } from 'rxjs/operators';\nimport { Pattern } from '@dongkap/do-core';\nimport { SettingsIndexedDBService } from './storage/settings-indexeddb.service';\n\n@Injectable()\nexport class AuthLanguageService {\n\n    constructor(\n        @Inject(LOCALE_ID) private locale: string,\n        private settingsIndexedDB: SettingsIndexedDBService) {}\n\n    getLocale(req: HttpRequest<any>): Observable<HttpRequest<any>> {\n        return from(this.settingsIndexedDB.get('locale')).pipe(\n            take(1),\n            switchMap((value: any) => {\n            let httpHeaders: HttpHeaders = req.headers ? req.headers : new HttpHeaders();\n            const localeCode: string = value ?\n            (\n                value.match(new RegExp(Pattern.LOCALE, 'g')) ?\n                value :\n                this.locale\n            ) : this.locale;\n            httpHeaders = httpHeaders.append('Accept-Language', localeCode);\n            return of(req.clone({ headers: httpHeaders }));\n        }));\n    }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpHeaders, HttpRequest } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DatePipe } from '@angular/common';\nimport { Observable, of, combineLatest } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport {\n    DateFormat,\n    EncryptionService,\n    oauthInfo,\n    OAUTH_INFO,\n    SecurityResourceModel,\n    signatureHeader,\n} from '@dongkap/do-core';\nimport { AuthIndexedDBService } from './storage/auth-indexeddb.service';\n\n@Injectable()\nexport class AuthSignatureService {\n\n    constructor(\n        private translate: TranslateService,\n        private enc: EncryptionService,\n        @Inject(OAUTH_INFO) private oauthResource: SecurityResourceModel,\n        private authStorage: AuthIndexedDBService) {}\n\n    private timeStamp: any;\n\n    public signHeaders(req: HttpRequest<any>): Observable<HttpRequest<any>> {\n        return combineLatest([\n            this.key(),\n            this.signature(this.getPath(req.url)),\n        ]).pipe(\n            take(1),\n            switchMap((value: string[]) => {\n            if (signatureHeader.signature) {\n                let httpHeaders: HttpHeaders = req.headers ? req.headers : new HttpHeaders();\n                httpHeaders.keys().forEach((key: string) => {\n                    if (key === signatureHeader.key) {\n                        httpHeaders = httpHeaders.delete(signatureHeader.key);\n                    }\n                    if (key === signatureHeader.timestamp) {\n                        httpHeaders = httpHeaders.delete(signatureHeader.timestamp);\n                    }\n                    if (key === signatureHeader.signature) {\n                        httpHeaders = httpHeaders.delete(signatureHeader.signature);\n                    }\n                });\n                httpHeaders = httpHeaders.set(signatureHeader.key, value[0]);\n                httpHeaders = httpHeaders.set(signatureHeader.timestamp, this.timeStamp);\n                httpHeaders = httpHeaders.set(signatureHeader.signature, value[1]);\n                return of(req.clone({ headers: httpHeaders }));\n            }\n            return of(req);\n        }));\n    }\n\n    public key(): Observable<string> {\n        return this.authStorage.getOfEnc(oauthInfo.public_key);\n    }\n\n    public timestamp(): string {\n        this.timeStamp = Math.floor(new Date().getTime() / 1000).toString();\n        return this.timeStamp;\n    }\n\n    public date(): string {\n        return new DatePipe(this.translate.currentLang).transform(new Date(), DateFormat.DATE);\n    }\n\n    public signature(url: string): Observable<string> {\n        return combineLatest([\n            this.key(),\n            this.authStorage.getOfEnc(oauthInfo.access_token),\n        ]).pipe(\n            take(1),\n            switchMap((value: string[]) => {\n            const key = value[0] + ':' +\n                         this.timestamp() + ':' +\n                        // this.date() + ':' +\n                        url + ':' +\n                        value[1];\n            return of(this.enc.getHmacSha256(this.oauthResource['private_key'], key));\n        }));\n    }\n\n    private getPath(url: string): string {\n        return '/' + url\n        .replace(/^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*(:[0-9]{1,5})?(\\/).*?/g, '');\n    }\n\n}\n","import { Injectable, Inject, OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport {\n    API,\n    APIModel,\n    HttpFactoryService,\n    HTTP_SERVICE,\n    UserModel,\n    UserService,\n} from '@dongkap/do-core';\nimport { ProfileIndexedDBService } from './storage/profile-indexeddb.service';\n\n@Injectable()\nexport class AuthUserService extends UserService implements OnDestroy {\n\n    constructor(\n        private profileIndexedDB: ProfileIndexedDBService,\n        @Inject(API)private apiPath: APIModel,\n        @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService) {\n        super();\n    }\n\n    private loaderUserSubject$ = new Subject<UserModel>();\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    public loadUser(): void {\n        this.profileIndexedDB.get('image').then((checksum: string) => {\n            this.putImageBase64(checksum);\n        });\n        this.httpBaseService.HTTP_AUTH(\n            this.apiPath['profile']['get-profile'])\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((response: any) => {\n                Promise.all([\n                    this.profileIndexedDB.put('name', response['name']),\n                    this.profileIndexedDB.put('email', response['email']),\n                    this.profileIndexedDB.put('image', response['image']),\n                ]).then();\n            });\n    }\n\n    public updateName(name: string): Observable<UserModel> {\n        this.profileIndexedDB.put('name', name).then(() => {\n            this.awaitUser();\n        });\n        return this.loaderUserSubject$.asObservable();\n    }\n\n    public updatePhoto(checksum: string): Observable<UserModel> {\n        this.profileIndexedDB.put('image', checksum).then(() => {\n            this.putImageBase64(checksum);\n        });\n        return this.loaderUserSubject$.asObservable();\n    }\n\n    public get onUserChange(): Observable<UserModel> {\n        this.awaitUser();\n        return this.loaderUserSubject$.asObservable();\n    }\n\n    private awaitUser(): void {\n        Promise.all([\n          this.profileIndexedDB.get('name'),\n          this.profileIndexedDB.get('image-base64'),\n        ]).then((value: any[]) => {\n            const user: UserModel = {\n                name: value[0],\n                image: value[1],\n            };\n            this.loaderUserSubject$.next(user);\n        });\n    }\n\n    private putImageBase64(checksum: any): void {\n        if (checksum) {\n            this.httpBaseService.HTTP_AUTH(\n            this.apiPath['profile']['get-photo-profile'], null, null, null,\n            [checksum], 'arraybuffer')\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((response: any) => {\n                const imageBlob = new Blob([response], {\n                    type: 'image/png',\n                });\n                const reader: FileReader = new FileReader();\n                reader.readAsDataURL(imageBlob);\n                reader.onloadend = () => {\n                    const imageBase64: string = reader.result.toString();\n                    this.profileIndexedDB.put('image-base64', imageBase64).then(() => {\n                        this.awaitUser();\n                    });\n                };\n            });\n        }\n    }\n\n}\n","import { HttpErrorResponse, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, EMPTY, Observable, throwError } from 'rxjs';\nimport { filter, take, switchMap, catchError } from 'rxjs/operators';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { AuthTokenService } from './auth-token.service';\nimport { AuthSignatureService } from './auth-signature.service';\nimport { AuthIndexedDBService } from './storage/auth-indexeddb.service';\n\nexport class HttpErrorHandler {\n\n    protected isRefreshingToken: boolean = false;\n    protected refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n    constructor(\n        protected translate: TranslateService,\n        protected authToken: AuthTokenService,\n        protected authStorage: AuthIndexedDBService,\n        protected authSignature: AuthSignatureService) {}\n\n    protected errorHandler(error: HttpErrorResponse, req: HttpRequest<any>, next: HttpHandler): Observable<any> {\n        let err: HttpErrorResponse = new HttpErrorResponse({\n            error: error.error,\n            headers: error.headers,\n            status: error.status,\n            statusText: error.statusText,\n            url: error.url,\n        });\n\n        if (error.error instanceof ArrayBuffer) {\n            const decodedString = String.fromCharCode.apply(null, new Uint8Array(error.error));\n            err = new HttpErrorResponse({\n                error: JSON.parse(decodedString),\n                headers: error.headers,\n                status: error.status,\n                statusText: error.statusText,\n                url: error.url,\n            });\n        }\n        switch (err.status) {\n            case 200:\n            case 201:\n            case 304:\n                return EMPTY;\n            case 400:\n                return this.error400(err);\n            case 401:\n                return this.error401(err, req, next);\n            case 404:\n            case 403:\n            case 500:\n            case 504:\n            case 0:\n                return throwError(this.errorDefault(err));\n            default:\n                break;\n        }\n        return throwError(err);\n    }\n\n    protected errorDefault(error: any | HttpErrorResponse): ApiBaseResponse {\n        let err: ApiBaseResponse = {\n            respStatusCode: error.status,\n            respStatusMessage: {},\n        };\n        err.respStatusMessage[err.respStatusCode] = error.statusText;\n        let msgKey: string = 'error.' + err.respStatusCode;\n        if (error.error) {\n            if (error.error['respStatusCode']) {\n                err = error.error;\n                msgKey = err.respStatusMessage[err.respStatusCode];\n            }\n        }\n        this.translate.get(msgKey).subscribe((result: string) => {\n            err.respStatusMessage[err.respStatusCode] = result;\n        });\n        return err;\n    }\n\n    protected error400(error: HttpErrorResponse): Observable<HttpEvent<any>> {\n        if (error.error['respStatusCode']) {\n            if (error.error['respStatusCode'] === 'invalid_grant') {\n                switch (error.error['respStatusMessage']['invalid_grant']) {\n                    case 'Bad credentials':\n                    case 'User account is locked':\n                    case 'User is disabled':\n                    case 'User account has expired':\n                    case 'User credentials have expired':\n                    case 'LDAP Server Error':\n                    case 'Invalid credentials.':\n                        return throwError(this.errorDefault(error));\n                    default:\n                        this.authToken.logout();\n                        return throwError(this.errorDefault(error));\n                }\n            } else {\n                return throwError(this.errorDefault(error));\n            }\n        }\n        return throwError(error);\n    }\n\n    protected error401(error: HttpErrorResponse, request: HttpRequest<any>, next: HttpHandler):\n        Observable<HttpEvent<any>> {\n        if (error.error) {\n            if (error.error['respStatusCode'] === 'invalid_token') {\n                if (!this.isRefreshingToken) {\n                    this.isRefreshingToken = true;\n                    this.refreshTokenSubject.next(null);\n                    return this.authToken.refresh().pipe(\n                        switchMap((response: any) => {\n                            this.isRefreshingToken = false;\n                            this.refreshTokenSubject.next(response);\n                            return this.authToken.oauthHeaders(request).pipe(\n                                switchMap((req: any) => {\n                                    request = req;\n                                    return this.authSignature.signHeaders(request).pipe(\n                                        switchMap((valReq: any) => {\n                                            return next.handle(valReq);\n                                        }),\n                                    );\n                                }));\n                        }),\n                        catchError((err: HttpErrorResponse) => {\n                            return this.errorHandler(err, request, next);\n                        }));\n                } else {\n                    const msg: string = error.error['respStatusMessage']['invalid_token'];\n                    if (msg.includes('expired')) {\n                        this.authToken.logout();\n                    } else {\n                        return this.refreshTokenSubject.pipe(\n                            filter(response => response != null),\n                            take(1),\n                            switchMap(() => {\n                                return this.authToken.oauthHeaders(request).pipe(\n                                    switchMap((req: any) => {\n                                        request = req;\n                                        return this.authSignature.signHeaders(request).pipe(\n                                            switchMap((valReq: any) => {\n                                                return next.handle(valReq);\n                                            }),\n                                        );\n                                    }));\n                            }));\n                    }\n                }\n            }\n        }\n        return throwError(error);\n    }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { catchError, takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { HttpErrorHandler } from './http-error.handler';\nimport { AuthTokenService } from './auth-token.service';\nimport { AuthSignatureService } from './auth-signature.service';\nimport { AuthIndexedDBService } from './storage/auth-indexeddb.service';\n\n@Injectable()\nexport class HttpInterceptorErrorService extends HttpErrorHandler implements HttpInterceptor, OnDestroy {\n\n    constructor(\n        public translate: TranslateService,\n        public authToken: AuthTokenService,\n        public authStorage: AuthIndexedDBService,\n        public authSignature: AuthSignatureService) {\n        super(translate, authToken, authStorage, authSignature);\n    }\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(req).pipe(\n            catchError(error => {\n                if (error instanceof HttpErrorResponse) {\n                    return this.errorHandler(error, req, next);\n                } else {\n                    return throwError(error);\n                }\n        })).pipe(takeUntil(this.destroy$));\n    }\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { signatureHeader } from '@dongkap/do-core';\nimport { AuthLanguageService } from './auth-lang.service';\n\n@Injectable()\nexport class HttpInterceptorLangService implements HttpInterceptor, OnDestroy {\n\n    constructor(private authLanguage: AuthLanguageService) {}\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.headers) {\n            if (req.headers.has(signatureHeader.mark)) {\n                return this.authLanguage.getLocale(req).pipe(switchMap((value: HttpRequest<any>) => {\n                    return next.handle(value);\n                }));\n            }\n        }\n        return next.handle(req).pipe(takeUntil(this.destroy$));\n    }\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable, OnDestroy, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { OAUTH_INFO, SecurityResourceModel, signatureHeader } from '@dongkap/do-core';\nimport { AuthSignatureService } from './auth-signature.service';\n\n@Injectable()\nexport class HttpInterceptorSignatureService implements HttpInterceptor, OnDestroy {\n\n    constructor(\n        private authSignature: AuthSignatureService,\n        @Inject(OAUTH_INFO) private oauthResource: SecurityResourceModel) {}\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.headers) {\n            if (req.headers.has(signatureHeader.mark) && this.oauthResource.signature) {\n                return this.authSignature.signHeaders(req).pipe(switchMap((value: HttpRequest<any>) => {\n                    return next.handle(value);\n                }));\n            }\n        }\n        return next.handle(req).pipe(takeUntil(this.destroy$));\n    }\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { signatureHeader } from '@dongkap/do-core';\nimport { AuthTokenService } from './auth-token.service';\n\n@Injectable()\nexport class HttpInterceptorTokenService implements HttpInterceptor, OnDestroy {\n\n    constructor(private authToken: AuthTokenService) {}\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.headers) {\n            if (req.headers.has(signatureHeader.mark)) {\n                return this.authToken.oauthHeaders(req).pipe(switchMap((reqAuth: any) => {\n                    return next.handle(reqAuth);\n                }));\n            }\n        }\n        return next.handle(req).pipe(takeUntil(this.destroy$));\n    }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { RecaptchaFormsModule, RecaptchaModule } from 'ng-recaptcha';\nimport {\n  NbAlertModule,\n  NbButtonModule,\n  NbCardModule,\n  NbCheckboxModule,\n  NbDialogModule,\n  NbIconModule,\n  NbInputModule,\n  NbSpinnerModule,\n} from '@nebular/theme';\nimport { DoThemeModule } from '@dongkap/do-theme';\nimport { DoToastrModule } from '@dongkap/do-shared';\nimport {\n  AUTH_INDEXED_DB,\n  PROFILE_INDEXED_DB,\n  SETTINGS_INDEXED_DB,\n  USER_SERVICE,\n} from '@dongkap/do-core';\nimport { DoLayoutAuthModule } from './do-layout-auth.module';\nimport { DoAuthRoutingModule } from './do-auth-routing.module';\nimport { AuthForceService } from './services/auth-force.service';\nimport { AuthGuardChildService } from './services/auth-guard-child.service';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { AuthLanguageService } from './services/auth-lang.service';\nimport { AuthSignatureService } from './services/auth-signature.service';\nimport { AuthTokenService } from './services/auth-token.service';\nimport { AuthUserService } from './services/auth-user.service';\nimport { HttpInterceptorErrorService } from './services/http-interceptor-error.service';\nimport { HttpInterceptorLangService } from './services/http-interceptor-lang.service';\nimport { HttpInterceptorSignatureService } from './services/http-interceptor-signature.service';\nimport { HttpInterceptorTokenService } from './services/http-interceptor-token.service';\nimport { AuthIndexedDBService } from './services/storage/auth-indexeddb.service';\nimport { ProfileIndexedDBService } from './services/storage/profile-indexeddb.service';\nimport { SettingsIndexedDBService } from './services/storage/settings-indexeddb.service';\nimport { UnauthorizeGuardService } from './services/unauth-guard.service';\nimport { LoginPageComponent } from './pages/login/login-page.component';\nimport { TermsConditionsComponent } from './pages/terms-conditions/terms-conditions.component';\nimport { LogoutComponent } from './pages/logout/logout.component';\nimport { ForceLoginPageComponent } from './pages/force/force-login-page.component';\nimport { ForgotPageComponent } from './pages/forgot/forgot-page.component';\nimport { RequestForgotPageComponent } from './pages/forgot/request-forgot-page.component';\nimport { RegisterPageComponent } from './pages/register/register-page.component';\nimport { ActivateAccountPageComponent } from './pages/activate-account/activate-account-page.component';\nimport { OAuth2CallbackComponent } from './pages/oauth2/oauth2-callback.component';\n\nexport const AUTH_PROVIDERS = [\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorTokenService, multi: true},\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorSignatureService, multi: true},\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorLangService, multi: true},\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorErrorService, multi: true},\n  { provide: USER_SERVICE, useClass: AuthUserService },\n  { provide: AUTH_INDEXED_DB, useClass: AuthIndexedDBService },\n  { provide: PROFILE_INDEXED_DB, useClass: ProfileIndexedDBService },\n  { provide: SETTINGS_INDEXED_DB, useClass: SettingsIndexedDBService },\n  AuthGuardService,\n  UnauthorizeGuardService,\n  AuthTokenService,\n  AuthGuardChildService,\n  AuthSignatureService,\n  AuthLanguageService,\n  AuthForceService\n];\n\nexport const AUTH_COMPONENTS = [\n  LoginPageComponent,\n  LogoutComponent,\n  ForceLoginPageComponent,\n  ForgotPageComponent,\n  RequestForgotPageComponent,\n  RegisterPageComponent,\n  ActivateAccountPageComponent,\n  TermsConditionsComponent,\n  OAuth2CallbackComponent,\n];\n\n@NgModule({\n  declarations: [\n    ...AUTH_COMPONENTS,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RecaptchaModule,\n    RecaptchaFormsModule,\n    NbCheckboxModule,\n    NbAlertModule,\n    NbInputModule,\n    NbButtonModule,\n    NbIconModule,\n    NbCardModule,\n    NbSpinnerModule,\n    NbDialogModule.forChild(),\n    DoThemeModule,\n    DoToastrModule.forRoot(),\n    DoLayoutAuthModule,\n    DoAuthRoutingModule,\n  ],\n  exports: [\n    ...AUTH_COMPONENTS,\n  ],\n})\nexport class DoAuthModule {\n  static forRoot(): ModuleWithProviders<DoAuthModule> {\n    return {\n      ngModule: DoAuthModule,\n      providers: [\n        ...AUTH_PROVIDERS,\n      ],\n    };\n  }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'do-404',\n  styleUrls: ['./404.component.scss'],\n  templateUrl: './404.component.html',\n})\nexport class PageNotFoundComponent {\n\n  constructor(private router: Router) {\n  }\n\n  goToHome() {\n    this.router.navigate(['/app/home']);\n    return;\n  }\n}\n","<div class=\"flex-centered\">\n  <h2 class=\"title\">404</h2>\n  <h2 class=\"title\">Page Not Found</h2>\n  <small class=\"sub-title\">The page you were looking for doesn't exist</small>\n  <button nbButton fullWidth (click)=\"goToHome()\" type=\"button\" class=\"home-button\">\n    Take me home\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PageNotFoundComponent } from './pages/404/404.component';\nimport { AuthComponent } from './pages/layout/auth.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      {\n        path: '404',\n        component: PageNotFoundComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MiscellaneousRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { NbButtonModule, NbIconModule } from '@nebular/theme';\nimport { CommonModule } from '@angular/common';\n\nimport { DoThemeModule } from '@dongkap/do-theme';\nimport { DoLayoutAuthModule } from './do-layout-auth.module';\nimport { MiscellaneousRoutingModule } from './miscellaneous-routing.module';\nimport { PageNotFoundComponent } from './pages/404/404.component';\n\n@NgModule({\n  imports: [\n    NbButtonModule,\n    NbIconModule,\n    CommonModule,\n    DoThemeModule,\n    DoLayoutAuthModule,\n    MiscellaneousRoutingModule,\n  ],\n  declarations: [\n    PageNotFoundComponent,\n  ],\n})\nexport class MiscellaneousModule { }\n","/*\n * Public API Surface of do-auth\n */\n\nexport * from './lib/do-auth.module';\nexport * from './lib/miscellaneous.module';\nexport { AuthGuardChildService } from './lib/services/auth-guard-child.service';\nexport { AuthGuardService } from './lib/services/auth-guard.service';\nexport { AuthIndexedDBService } from './lib/services/storage/auth-indexeddb.service';\nexport { ProfileIndexedDBService } from './lib/services/storage/profile-indexeddb.service';\nexport { SettingsIndexedDBService } from './lib/services/storage/settings-indexeddb.service';\nexport { AuthTokenService } from './lib/services/auth-token.service';\nexport { UnauthorizeGuardService } from './lib/services/unauth-guard.service';\nexport { AuthSignatureService } from './lib/services/auth-signature.service';\nexport { AuthUserService } from './lib/services/auth-user.service';\n\nexport { LoginPageComponent } from './lib/pages/login/login-page.component';\nexport { ForceLoginPageComponent } from './lib/pages/force/force-login-page.component';\nexport { TermsConditionsComponent } from './lib/pages/terms-conditions/terms-conditions.component';\nexport { RequestForgotPageComponent } from './lib/pages/forgot/request-forgot-page.component';\nexport { ForgotPageComponent } from './lib/pages/forgot/forgot-page.component';\nexport { ActivateAccountPageComponent } from './lib/pages/activate-account/activate-account-page.component';\nexport { RegisterPageComponent } from './lib/pages/register/register-page.component';\nexport { LogoutComponent } from './lib/pages/logout/logout.component';\nexport { OAuth2CallbackComponent } from './lib/pages/oauth2/oauth2-callback.component';\nexport { PageNotFoundComponent } from './lib/pages/404/404.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i3.AuthBlockComponent","i4","i2.AuthIndexedDBService","i3.ProfileIndexedDBService","i4.SettingsIndexedDBService","i2.AuthTokenService","i2","i4.AuthTokenService","i5.AuthForceService","i1.AuthTokenService","i3.AuthForceService","i5","i6","confirmPasswordValidator","i3","i7","i8","routes","i5.AuthIndexedDBService","i1.SettingsIndexedDBService","i3.AuthIndexedDBService","i1.ProfileIndexedDBService","i4.AuthSignatureService","i1.AuthLanguageService"],"mappings":"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"}