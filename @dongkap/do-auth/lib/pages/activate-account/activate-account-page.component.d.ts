import { OnDestroy } from '@angular/core';
import { FormGroup, ValidatorFn } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { Subject } from 'rxjs';
import { TranslateService } from '@ngx-translate/core';
import { EncryptionService } from '@dongkap/do-core';
import { APIModel } from '@dongkap/do-core';
import { HttpFactoryService } from '@dongkap/do-core';
import { SecurityResourceModel } from '@dongkap/do-core';
import { DoToastrService } from '@dongkap/do-shared';
import * as i0 from "@angular/core";
export declare class ActivateAccountPageComponent implements OnDestroy {
    private router;
    private route;
    private toastr;
    private translate;
    private enc;
    private httpBaseService;
    private oauthResource;
    private apiPath;
    responseError: any;
    buttonForgotPassword: boolean;
    private progressBar;
    protected progressDOM: HTMLElement;
    patternPassword: string;
    errorMsgPassword: string;
    errorMsgConfirmPassword: string;
    private activateId;
    private activateCode;
    form: FormGroup;
    protected destroy$: Subject<any>;
    constructor(router: Router, route: ActivatedRoute, toastr: DoToastrService, translate: TranslateService, enc: EncryptionService, httpBaseService: HttpFactoryService, oauthResource: SecurityResourceModel, apiPath: APIModel);
    ngOnDestroy(): void;
    activateAccount(): void;
    get hasErrorPassword(): boolean;
    get hasSuccessPassword(): boolean;
    get hasErrorConfirmPassword(): boolean;
    get hasSuccessConfirmPassword(): boolean;
    protected initProgress(): void;
    protected doneProgress(): void;
    protected setProgress(progress: number): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ActivateAccountPageComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ActivateAccountPageComponent, "do-activate-account-page", never, {}, {}, never, never>;
}
export declare function confirmPasswordValidator(form: FormGroup): ValidatorFn;
